<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	x:Class="Restaurant.OrderDetailInCashierWindow"
	x:Name="Window"
	Title="Window1"
    xmlns:RestaurantClasses="clr-namespace:Restaurant.Classes"
	Width="800" Height="600" MouseLeftButtonDown="Window_MouseLeftButtonDown" Background="{x:Null}" Foreground="#FFFFFFFF" WindowStyle="None" AllowsTransparency="True" WindowStartupLocation="CenterOwner" ShowInTaskbar="False" xmlns:Restaurant="clr-namespace:Restaurant" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" Loaded="Window_Loaded" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" Closing="Window_Closing">

    <Window.Resources>
        <RestaurantClasses:PriceConverter x:Key="PriceConverter"/>
        <RestaurantClasses:StateConverter x:Key="OrderStateConverter"/>
        <Storyboard x:Key="StoryboardEntrance">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.095"/>
                <SplineDoubleKeyFrame KeySpline="1,0,0.512,1" KeyTime="00:00:00.3000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!-- ProductName column -->
        <DataTemplate x:Key="ProductNameColumnTemplate">
            <TextBlock Height="20"  FontFamily="Arial" FontSize="14"  Text="{Binding Path=ProductName}" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
		</DataTemplate>
        <!-- UnitName column -->
        <DataTemplate x:Key="UnitNameColumnTemplate">
            <TextBlock Height="20" FontFamily="Arial" FontSize="14"  Text="{Binding Path=UnitName}" HorizontalAlignment="Stretch"  VerticalAlignment="Center"/>
		</DataTemplate>
        <!-- Amount column -->
        <DataTemplate x:Key="AmountColumnTemplate">
            <TextBlock Height="20"  FontFamily="Arial" FontSize="16"  Text="{Binding Path=Amount}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
		</DataTemplate>
        
        <!-- Price column -->
        <DataTemplate x:Key="PriceColumnTemplate">
            <TextBlock Height="20"  FontFamily="Arial" FontSize="16"  Text="{Binding Path=Price, Converter={StaticResource PriceConverter}, Mode=Default}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
		</DataTemplate>
        
        <!-- RowPrice column -->
        <DataTemplate x:Key="RowPriceColumnTemplate">
            <TextBlock Height="20"  FontFamily="Arial" FontSize="16"  Text="{Binding Path=RowPrice, Converter={StaticResource PriceConverter}, Mode=Default}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
		</DataTemplate>

        <!--ExpanderHeaderBorderBrush is used as the Border for Expander header-->
        <LinearGradientBrush x:Key="ExpanderHeaderBorderBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#CCC" Offset="0.0" />
            <GradientStop Color="#444" Offset="1.0" />
        </LinearGradientBrush>

        <!-- ExpanderHeaderBackgroundBrush is used as the Background for Expander header  -->
        <LinearGradientBrush x:Key="ExpanderHeaderBackgroundBrush" StartPoint="0.499999,0.00908135" EndPoint="0.499999,1.17275">
            <GradientStop Color="#D43B874A" Offset="0" />
            <GradientStop Color="#D43A87B4" Offset="0.0236486" />
            <GradientStop Color="#D409242A" Offset="1" />
        </LinearGradientBrush>

        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="0" SnapsToDevicePixels="true"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Border BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="10,10,2,2" Background="{x:Null}" >
                                <Border BorderBrush="{x:Null}" Height="Auto" CornerRadius="10,10,2,2" Width="Auto" Margin="1,1,1,1" Background="{DynamicResource ExpanderHeaderBackgroundBrush}">
                                    <Grid SnapsToDevicePixels="False" Background="Transparent" Margin="0,2,0,2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="45"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0">
                                            <Grid Width="26" Height="26">
                                                <Ellipse StrokeThickness="4" x:Name="ellipseHover" Margin="-4,-4,-4,-4" Fill="{x:Null}" Visibility="Hidden">
                                                    <Ellipse.Stroke>
                                                        <RadialGradientBrush>
                                                            <GradientStop Color="#4CFFFFFF" Offset="0.808"/>
                                                            <GradientStop Color="#00F1FF00" Offset="1"/>
                                                        </RadialGradientBrush>
                                                    </Ellipse.Stroke>
                                                </Ellipse>
                                                <Ellipse Stroke="{DynamicResource ButtonBorderBrush}" StrokeThickness="2" x:Name="ellipse">
                                                    <Ellipse.Fill>

                                                        <LinearGradientBrush StartPoint="0.499999,0.00908135" EndPoint="0.499999,1.17275">
                                                            <GradientStop Color="#D43B7D87" Offset="0" />
                                                            <GradientStop Color="#D43B877C" Offset="0.0236486" />
                                                            <GradientStop Color="#D409242A" Offset="1" />
                                                        </LinearGradientBrush>

                                                    </Ellipse.Fill>
                                                </Ellipse>
                                                <Path Fill="#99FFFFFF" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="2" HorizontalAlignment="Center" Margin="0,0,0,5" VerticalAlignment="Center" Width="14" Height="8" Data="M49,49 L25,73 1,49 25,65 z" x:Name="path" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                            <SkewTransform AngleX="0" AngleY="0"/>
                                                            <RotateTransform Angle="0"/>
                                                            <TranslateTransform X="0" Y="0"/>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                                <Path Fill="#B2FFFFFF" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="2" Margin="0,4,0,0" Data="M49,49 L25,73 1,49 25,65 z" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="11" x:Name="path1" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                            <SkewTransform AngleX="0" AngleY="0"/>
                                                            <RotateTransform Angle="0"/>
                                                            <TranslateTransform X="0" Y="0"/>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                        </Grid>
                                        <ContentPresenter HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="4,0,0,0" Grid.Column="1"  RecognizesAccessKey="True"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardDown">
                                <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)" Duration="00:00:00.0010000">
                                    <SplinePointKeyFrame KeyTime="00:00:00" Value="0.5,1.173"/>
                                </PointAnimationUsingKeyFrames>
                                <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)" Duration="00:00:00.0010000">
                                    <SplinePointKeyFrame KeyTime="00:00:00" Value="0.5,0.009"/>
                                </PointAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardUp">
                                <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)" Duration="00:00:00.0010000">
                                    <SplinePointKeyFrame KeyTime="00:00:00" Value="0.499999,0.00908135"/>
                                </PointAnimationUsingKeyFrames>
                                <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)" Duration="00:00:00.0010000">
                                    <SplinePointKeyFrame KeyTime="00:00:00" Value="0.499999,1.17275"/>
                                </PointAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardOver">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipseHover" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="00:00:00.0010000">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipseHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" KeySpline="0,0,0,1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardOut">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipseHover" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00.2000000" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipseHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="RenderTransform" TargetName="path" >
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="RenderTransform" TargetName="path1" >
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardOut}" x:Name="StoryboardOut_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardOver}" x:Name="StoryboardOver_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardUp}" x:Name="StoryboardUp_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardDown}" x:Name="StoryboardDown_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border x:Name="border" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                            <DockPanel>
                                <ToggleButton FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1" MinHeight="0" MinWidth="0" x:Name="HeaderSite" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Top" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ContentPresenter Height="140" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false" Visibility="Collapsed" DockPanel.Dock="Bottom"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardExpanded">
                                <DoubleAnimation From="0" To="1" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:00:00.4"/>
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:00:00" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimation From="0" To="140" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Height" Duration="0:00:00.2"/>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardCollapsed">
                                <DoubleAnimation From="1" To="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:00:00.1"/>
                                <DoubleAnimation From="140" To="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Height" Duration="0:00:00.2"/>
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:00:00.2" Value="{x:Static Visibility.Hidden}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Expander.Expanded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardExpanded}" x:Name="StoryboardExpanded_BeginStoryboard"/>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Expander.Collapsed">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardCollapsed}" x:Name="StoryboardCollapsed_BeginStoryboard"/>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardCollapsed}" x:Name="StoryboardCollapsed_BeginStoryboard1"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource StoryboardEntrance}"/>
        </EventTrigger>
    </Window.Triggers>

    <Grid x:Name="LayoutRoot">
        <Rectangle Margin="0,0,0,0" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" RadiusX="400" RadiusY="100" Stroke="#E5B0B0B0" StrokeThickness="1.5" x:Name="rectOuter">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="1.191,-0.1" StartPoint="0.029,0.942">
                    <GradientStop Color="#E5202020" Offset="0.08"/>
                    <GradientStop Color="#E5202020" Offset="0.763"/>
                    <GradientStop Color="#E53F3F3F" Offset="0.174"/>
                    <GradientStop Color="#E5202020" Offset="0.29"/>
                    <GradientStop Color="#E54F4F4F" Offset="0.621"/>
                    <GradientStop Color="#E5272727" Offset="0.531"/>
                    <GradientStop Color="#E5202020" Offset="0.513"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Rectangle Margin="3,3,3,3" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" RadiusX="400" RadiusY="100" Stroke="#9CB0B0B0" StrokeThickness="1.5" x:Name="rectInner"/>

        <Path HorizontalAlignment="Left" Margin="196.905,21,0,0" VerticalAlignment="Top" Width="200" Height="31.75" Fill="{x:Null}" Stretch="Fill" Stroke="#9CFAFFB0" StrokeThickness="1.5" Data="M381,33 C381,33 383.25,54.25 322.25,41.25 261.25,28.25 269.25034,63.249858 269.25034,63.249858" d:LayoutOverrides="HorizontalAlignment"/>
        <Path Margin="398.905,21,201.095,0" VerticalAlignment="Top" Height="31.75" Fill="{x:Null}" Stretch="Fill" Stroke="#9CF9FDB8" StrokeThickness="1.5" Data="M381,33 C381,33 383.25,54.25 322.25,41.25 261.25,28.25 269.25034,63.249858 269.25034,63.249858" RenderTransformOrigin="0.5,0.5">
            <Path.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="-1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform X="0" Y="0"/>
                </TransformGroup>
            </Path.RenderTransform>
        </Path>
        <TextBlock Height="Auto" x:Name="txbTableNoHeader" VerticalAlignment="Top" Text="Table No" Margin="0,48,177.97,0" HorizontalAlignment="Right" Width="Auto" Foreground="#D7FBFFBB" d:LayoutOverrides="Width" />
		<TextBlock Height="Auto" x:Name="txbOrderNoHeader" VerticalAlignment="Top" Text="Order No" Margin="173,48,0,0" Foreground="#D7FBFFBB" Width="Auto" HorizontalAlignment="Left" /><TextBlock Height="Auto" x:Name="txbWindowTitle" VerticalAlignment="Top" Text="Order Detail" HorizontalAlignment="Center" Margin="0,6,0,0" Width="Auto" Foreground="#D7FBFFB0" FontFamily="Arial" FontSize="14" />
        <Border Margin="123,60,0,0" VerticalAlignment="Top" Height="35" BorderBrush="#6EFBFB96" BorderThickness="1.5,0,1.5,0" CornerRadius="0,20,0,20" Width="150" HorizontalAlignment="Left" x:Name="borderOrderNo"  MouseEnter="borderOrderNo_MouseEnter" Background="#00000000">
            <TextBlock Height="21" x:Name="txbOrderNo" Text="{Binding Path=SelectedItem.OrderNo, ElementName=cmbOrderNo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="#FFFFFFFF" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Arial" FontSize="16" />
		</Border>
        <Border HorizontalAlignment="Right" Margin="0,60,126,0" VerticalAlignment="Top" Width="150" Height="35" BorderBrush="#6EFBFB96" BorderThickness="1.5,0,1.5,0" CornerRadius="0,20,0,20" x:Name="borderTableNo"  Background="#00000000">
            <TextBlock Height="21" x:Name="txbTableNo" Foreground="#FFFFFFFF" HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" FontFamily="Arial" FontSize="16" Text="Not specified" />
		</Border>
        <Grid Margin="10,97,10,95" x:Name="MainGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="220"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0"  CornerRadius="6,6,6,6" BorderThickness="1,1,1,1" BorderBrush="#7FFFFFFF" Width="Auto"  AllowDrop="False" x:Name="leftBorder" >
                 <StackPanel>
                 	<Expander Width="Auto" Height="Auto" Header="Check Out" IsExpanded="False" Style="{DynamicResource ExpanderStyle}" Background="#00FFFFFF" FontFamily="Arial" FontSize="14" Foreground="#FFFFFFFF" x:Name="expanderCheckOut">
                <Border x:Name="ExpanderContent" Height="140" BorderBrush="#66FFFFFF" BorderThickness="1,1,1,1" Width="Auto" Margin="1,0,1,0" CornerRadius="5,5,5,5">
            		<Grid Background="{x:Null}" Height="Auto">
            			<TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="Total Price:" TextWrapping="Wrap" Foreground="#FFFFFFFF" Width="Auto" FontSize="14" FontFamily="Arial" Margin="4,17,0,0"/>
            			<TextBlock Margin="79,11,0,0" Text="0 $" TextWrapping="Wrap" Foreground="#FFFFAA00" FontFamily="Arial" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Stretch" x:Name="txbTotalPrice"/>
            			<TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="Customer:" TextWrapping="Wrap" Foreground="#FFFFFFFF" Width="Auto" FontFamily="Arial" FontSize="14" Margin="4,47,0,0"/>
            			<TextBox Margin="6,20,6,0" Height="Auto" Text="" TextWrapping="Wrap" HorizontalAlignment="Stretch" d:LayoutOverrides="Height" VerticalAlignment="Center" FontSize="14" Name="txbCustomerName" MaxLength="50" />
            			<Button HorizontalAlignment="Center" Style="{DynamicResource BlueButtonStyle}" VerticalAlignment="Bottom" Width="120" Height="27" Content="Check Out" Foreground="#FFFFFFFF" FontSize="12" Margin="0,0,0,8" Name="btnCheckOut" Click="btnCheckOut_Click" />
            		</Grid>
            	</Border>
            </Expander>
            <Expander Width="Auto" Height="Auto" Header="Cancel Order" Style="{DynamicResource ExpanderStyle}" Background="#00FFFFFF" IsExpanded="False" FontFamily="Arial" FontSize="14" Foreground="#FFFFFFFF" x:Name="expanderCancelOrder">
                <Border x:Name="ExpanderContent_Copy" Height="140" BorderBrush="#66FFFFFF" BorderThickness="1,1,1,1" Width="Auto" CornerRadius="5,5,5,5" Margin="1,0,1,0">
            		<Grid Background="{x:Null}" Height="Auto">
            			<TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="Why:" TextWrapping="Wrap" Foreground="#FFFFFFFF" Width="Auto" FontSize="14" FontFamily="Arial" Margin="4,4,0,0"/>
            			<TextBox Margin="4,25,4,0" Height="74" Text="" TextWrapping="Wrap" HorizontalAlignment="Stretch" FontSize="14" MinLines="1" VerticalAlignment="Top" Width="Auto" VerticalScrollBarVisibility="Visible" Name="txbCancelReason" />
            			<Button HorizontalAlignment="Center" Style="{DynamicResource BlueButtonStyle}" VerticalAlignment="Bottom" Width="120" Height="27" Content="Cancel Order" Foreground="#FFFFFFFF" FontSize="12" Margin="0,0,0,3" Name="btnCancelOrder" Click="btnCancelOrder_Click" />
            		</Grid>
            	</Border>
                <Expander.Triggers>
                    <EventTrigger RoutedEvent="Expander.Expanded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard />
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Expander.Collapsed">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard />
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Expander.Triggers>
            </Expander>
                 </StackPanel>
		</Border>
                <Border Grid.Column="1"  CornerRadius="6,6,6,6" BorderThickness="1,1,1,1" BorderBrush="#7FFFFFFF" Width="Auto" x:Name="borderOrder" AllowDrop="False" Margin="5,0,0,0" >
            <Grid Width="Auto">
                <Restaurant:SortableListView   Margin="6,6,6,0" Height="401.96"
			Background="{x:Null}"  BorderBrush="{x:Null}"
			ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"
			VirtualizingStackPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True"
			SelectionMode="Single"  IsSynchronizedWithCurrentItem="True"
			ItemContainerStyle="{DynamicResource RestaurantEditListViewItemStyle}"
			Style="{DynamicResource RestaurantEditListViewStyle}" IsEnabled="True"  HorizontalAlignment="Stretch" VerticalAlignment="Top" x:Name="OrderGridView">
			<Restaurant:SortableListView.View >
				<GridView AllowsColumnReorder="False" >
					<GridViewColumn Width="4" HeaderContainerStyle="{DynamicResource FirstColumnGridViewColumnHeader}" CellTemplate="{StaticResource EmptyColumnTemplate}"/>
					<GridViewColumn Header="Product Name" CellTemplate="{StaticResource ProductNameColumnTemplate}"  Width="200"  HeaderContainerStyle="{DynamicResource RestaurantDataGridViewColumnHeader}" />
					<GridViewColumn Header="Unit" CellTemplate="{StaticResource UnitNameColumnTemplate}"  Width="80"  HeaderContainerStyle="{DynamicResource RestaurantDataGridViewColumnHeader}" />
                    <GridViewColumn Header="Unit Price" CellTemplate="{StaticResource PriceColumnTemplate}"  Width="75"  HeaderContainerStyle="{DynamicResource RestaurantDataGridViewColumnHeader}" />
					<GridViewColumn Header="Amount" CellTemplate="{StaticResource AmountColumnTemplate}"  Width="75"  HeaderContainerStyle="{DynamicResource RestaurantDataGridViewColumnHeader}" />
                    <GridViewColumn Header="Row Price" CellTemplate="{StaticResource RowPriceColumnTemplate}"  Width="80"  HeaderContainerStyle="{DynamicResource RestaurantDataGridViewColumnHeader}" />
					<GridViewColumn Width="4" HeaderContainerStyle="{DynamicResource LastColumnGridViewColumnHeader}" CellTemplate="{StaticResource EmptyColumnTemplate}"/>
				</GridView>
			</Restaurant:SortableListView.View>
		</Restaurant:SortableListView>
            </Grid>
		</Border>
                
            </Grid>
        <Button Style="{DynamicResource BlueButtonStyle}" Content="Close" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Margin="110,0,0,36" VerticalAlignment="Bottom" Width="100" Height="30" IsCancel="True" x:Name="btnClose"/>
        <Button Style="{DynamicResource BlueButtonStyle}" Content="Print" Foreground="#FFFFFFFF" Margin="0,0,110,36" VerticalAlignment="Bottom" Height="30" IsCancel="False" x:Name="btnPrint" Click="btnPrint_Click" IsDefault="True" Width="100" HorizontalAlignment="Center"/>
        <Popup Width="150" Height="50" x:Name="PopUpSelectOrder" PlacementTarget="{Binding ElementName=borderOrderNo}" OpacityMask="{x:Null}" PopupAnimation="Slide" AllowsTransparency="True" Placement="Bottom" Margin="0,0,0,0" VerticalOffset="-45" MouseLeave="PopUpSelectOrder_MouseLeave"  HorizontalOffset="0">
            <Border Width="150" Height="50" Margin="0,0,0,0" CornerRadius="8,8,8,8" BorderThickness="1,1,1,1" BorderBrush="#9EB5B5B5" Background="#E5202020">
                <Grid>
                    <ComboBox IsSynchronizedWithCurrentItem="True" Margin="7,0,7,0" Height="Auto"  VerticalAlignment="Center" FontFamily="Arial" FontSize="14" x:Name="cmbOrderNo"  Style="{DynamicResource RestaurantComboBoxStyle}" Width="130"   SelectionChanged="cmbOrderNo_SelectionChanged">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0" Background="Transparent">
                                    <Border Margin="3" BorderThickness="1" Width="Auto"
                                            BorderBrush="SteelBlue" CornerRadius="4"
                                            Background="{Binding Path=Background, RelativeSource={
                                            RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type ListBoxItem}
                                            }}" >
                                        <Grid Margin="3" Width="100">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Image Grid.Column="0" Width="20" Height="20" Source="{Binding Path=State, Converter={StaticResource OrderStateConverter}, Mode=Default}"/>
                                            <TextBlock Grid.Column="1" VerticalAlignment="Center"  FontSize="14" FontWeight="Bold" Text="{Binding Path=OrderNo}"></TextBlock>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
            </Border>
        </Popup>
        <Grid Margin="0,50,0,0" VerticalAlignment="Top" Height="38.62" HorizontalAlignment="Center" x:Name="gridLocker" Visibility="Hidden">
        	<TextBlock Height="Auto" x:Name="txbLockerHeader" VerticalAlignment="Top" Text="This order is now lock by: " Width="Auto" Foreground="#D7FF7575" FontSize="14" TextAlignment="Center" d:LayoutOverrides="Width" />
        	<TextBlock Height="Auto" x:Name="txbLocker" VerticalAlignment="Bottom" Text="" Margin="67.928,0,67.928,0" Width="Auto" Foreground="#D7FF7575" FontSize="14" TextAlignment="Center" d:LayoutOverrides="Width" />
        </Grid>
    </Grid>
</Window>