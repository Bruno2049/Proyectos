//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SunCorp.Controller.SvcServicesEntities {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SvcServicesEntities.IEntitiesServer")]
    public interface IEntitiesServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetUsUsuarios", ReplyAction="http://tempuri.org/IEntitiesServer/GetUsUsuariosResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SunCorp.Entities.UsUsuarios))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<SunCorp.Entities.UsZona>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SunCorp.Entities.UsZona))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SunCorp.Entities.UsTipoUsuario))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<SunCorp.Entities.ProCatMarca>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SunCorp.Entities.ProCatMarca))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<SunCorp.Entities.ProCatModelo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SunCorp.Entities.ProCatModelo))]
        SunCorp.Entities.UsUsuarios GetUsUsuarios(SunCorp.Entities.Generic.UserSession session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetUsUsuarios", ReplyAction="http://tempuri.org/IEntitiesServer/GetUsUsuariosResponse")]
        System.Threading.Tasks.Task<SunCorp.Entities.UsUsuarios> GetUsUsuariosAsync(SunCorp.Entities.Generic.UserSession session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetListUsZona", ReplyAction="http://tempuri.org/IEntitiesServer/GetListUsZonaResponse")]
        System.Collections.Generic.List<SunCorp.Entities.UsZona> GetListUsZona();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetListUsZona", ReplyAction="http://tempuri.org/IEntitiesServer/GetListUsZonaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SunCorp.Entities.UsZona>> GetListUsZonaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetListUsZonaPageList", ReplyAction="http://tempuri.org/IEntitiesServer/GetListUsZonaPageListResponse")]
        SunCorp.Controller.SvcServicesEntities.GetListUsZonaPageListResponse GetListUsZonaPageList(SunCorp.Controller.SvcServicesEntities.GetListUsZonaPageListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetListUsZonaPageList", ReplyAction="http://tempuri.org/IEntitiesServer/GetListUsZonaPageListResponse")]
        System.Threading.Tasks.Task<SunCorp.Controller.SvcServicesEntities.GetListUsZonaPageListResponse> GetListUsZonaPageListAsync(SunCorp.Controller.SvcServicesEntities.GetListUsZonaPageListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetListUsZonasUser", ReplyAction="http://tempuri.org/IEntitiesServer/GetListUsZonasUserResponse")]
        System.Collections.Generic.List<SunCorp.Entities.UsZona> GetListUsZonasUser(SunCorp.Entities.UsUsuarios user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetListUsZonasUser", ReplyAction="http://tempuri.org/IEntitiesServer/GetListUsZonasUserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SunCorp.Entities.UsZona>> GetListUsZonasUserAsync(SunCorp.Entities.UsUsuarios user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/NewRegUsZona", ReplyAction="http://tempuri.org/IEntitiesServer/NewRegUsZonaResponse")]
        SunCorp.Entities.UsZona NewRegUsZona(SunCorp.Entities.UsZona zona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/NewRegUsZona", ReplyAction="http://tempuri.org/IEntitiesServer/NewRegUsZonaResponse")]
        System.Threading.Tasks.Task<SunCorp.Entities.UsZona> NewRegUsZonaAsync(SunCorp.Entities.UsZona zona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/UpdateRegUsZona", ReplyAction="http://tempuri.org/IEntitiesServer/UpdateRegUsZonaResponse")]
        bool UpdateRegUsZona(SunCorp.Entities.UsZona zona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/UpdateRegUsZona", ReplyAction="http://tempuri.org/IEntitiesServer/UpdateRegUsZonaResponse")]
        System.Threading.Tasks.Task<bool> UpdateRegUsZonaAsync(SunCorp.Entities.UsZona zona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/DeleteRegUsZona", ReplyAction="http://tempuri.org/IEntitiesServer/DeleteRegUsZonaResponse")]
        bool DeleteRegUsZona(SunCorp.Entities.UsZona zona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/DeleteRegUsZona", ReplyAction="http://tempuri.org/IEntitiesServer/DeleteRegUsZonaResponse")]
        System.Threading.Tasks.Task<bool> DeleteRegUsZonaAsync(SunCorp.Entities.UsZona zona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetTypeUser", ReplyAction="http://tempuri.org/IEntitiesServer/GetTypeUserResponse")]
        SunCorp.Entities.UsTipoUsuario GetTypeUser(SunCorp.Entities.UsUsuarios user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetTypeUser", ReplyAction="http://tempuri.org/IEntitiesServer/GetTypeUserResponse")]
        System.Threading.Tasks.Task<SunCorp.Entities.UsTipoUsuario> GetTypeUserAsync(SunCorp.Entities.UsUsuarios user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetListProCatMarca", ReplyAction="http://tempuri.org/IEntitiesServer/GetListProCatMarcaResponse")]
        System.Collections.Generic.List<SunCorp.Entities.ProCatMarca> GetListProCatMarca();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetListProCatMarca", ReplyAction="http://tempuri.org/IEntitiesServer/GetListProCatMarcaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SunCorp.Entities.ProCatMarca>> GetListProCatMarcaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/NewRegProCatMarca", ReplyAction="http://tempuri.org/IEntitiesServer/NewRegProCatMarcaResponse")]
        SunCorp.Entities.ProCatMarca NewRegProCatMarca(SunCorp.Entities.ProCatMarca reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/NewRegProCatMarca", ReplyAction="http://tempuri.org/IEntitiesServer/NewRegProCatMarcaResponse")]
        System.Threading.Tasks.Task<SunCorp.Entities.ProCatMarca> NewRegProCatMarcaAsync(SunCorp.Entities.ProCatMarca reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/UpdateRegProCatMarca", ReplyAction="http://tempuri.org/IEntitiesServer/UpdateRegProCatMarcaResponse")]
        bool UpdateRegProCatMarca(SunCorp.Entities.ProCatMarca reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/UpdateRegProCatMarca", ReplyAction="http://tempuri.org/IEntitiesServer/UpdateRegProCatMarcaResponse")]
        System.Threading.Tasks.Task<bool> UpdateRegProCatMarcaAsync(SunCorp.Entities.ProCatMarca reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/DeleteRegProCatMarca", ReplyAction="http://tempuri.org/IEntitiesServer/DeleteRegProCatMarcaResponse")]
        bool DeleteRegProCatMarca(SunCorp.Entities.ProCatMarca reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/DeleteRegProCatMarca", ReplyAction="http://tempuri.org/IEntitiesServer/DeleteRegProCatMarcaResponse")]
        System.Threading.Tasks.Task<bool> DeleteRegProCatMarcaAsync(SunCorp.Entities.ProCatMarca reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetListProCatModelo", ReplyAction="http://tempuri.org/IEntitiesServer/GetListProCatModeloResponse")]
        System.Collections.Generic.List<SunCorp.Entities.ProCatModelo> GetListProCatModelo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/GetListProCatModelo", ReplyAction="http://tempuri.org/IEntitiesServer/GetListProCatModeloResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SunCorp.Entities.ProCatModelo>> GetListProCatModeloAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/NewRegProCatModelo", ReplyAction="http://tempuri.org/IEntitiesServer/NewRegProCatModeloResponse")]
        SunCorp.Entities.ProCatModelo NewRegProCatModelo(SunCorp.Entities.ProCatModelo reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/NewRegProCatModelo", ReplyAction="http://tempuri.org/IEntitiesServer/NewRegProCatModeloResponse")]
        System.Threading.Tasks.Task<SunCorp.Entities.ProCatModelo> NewRegProCatModeloAsync(SunCorp.Entities.ProCatModelo reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/UpdateRegProCatModelo", ReplyAction="http://tempuri.org/IEntitiesServer/UpdateRegProCatModeloResponse")]
        bool UpdateRegProCatModelo(SunCorp.Entities.ProCatModelo reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/UpdateRegProCatModelo", ReplyAction="http://tempuri.org/IEntitiesServer/UpdateRegProCatModeloResponse")]
        System.Threading.Tasks.Task<bool> UpdateRegProCatModeloAsync(SunCorp.Entities.ProCatModelo reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/DeleteRegProCatModelo", ReplyAction="http://tempuri.org/IEntitiesServer/DeleteRegProCatModeloResponse")]
        bool DeleteRegProCatModelo(SunCorp.Entities.ProCatModelo reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntitiesServer/DeleteRegProCatModelo", ReplyAction="http://tempuri.org/IEntitiesServer/DeleteRegProCatModeloResponse")]
        System.Threading.Tasks.Task<bool> DeleteRegProCatModeloAsync(SunCorp.Entities.ProCatModelo reg);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListUsZonaPageList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetListUsZonaPageListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int page;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int numRows;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int totalRows;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool includeDelete;
        
        public GetListUsZonaPageListRequest() {
        }
        
        public GetListUsZonaPageListRequest(int page, int numRows, int totalRows, bool includeDelete) {
            this.page = page;
            this.numRows = numRows;
            this.totalRows = totalRows;
            this.includeDelete = includeDelete;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListUsZonaPageListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetListUsZonaPageListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<SunCorp.Entities.UsZona> GetListUsZonaPageListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int totalRows;
        
        public GetListUsZonaPageListResponse() {
        }
        
        public GetListUsZonaPageListResponse(System.Collections.Generic.List<SunCorp.Entities.UsZona> GetListUsZonaPageListResult, int totalRows) {
            this.GetListUsZonaPageListResult = GetListUsZonaPageListResult;
            this.totalRows = totalRows;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEntitiesServerChannel : SunCorp.Controller.SvcServicesEntities.IEntitiesServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntitiesServerClient : System.ServiceModel.ClientBase<SunCorp.Controller.SvcServicesEntities.IEntitiesServer>, SunCorp.Controller.SvcServicesEntities.IEntitiesServer {
        
        public EntitiesServerClient() {
        }
        
        public EntitiesServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EntitiesServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntitiesServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntitiesServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SunCorp.Entities.UsUsuarios GetUsUsuarios(SunCorp.Entities.Generic.UserSession session) {
            return base.Channel.GetUsUsuarios(session);
        }
        
        public System.Threading.Tasks.Task<SunCorp.Entities.UsUsuarios> GetUsUsuariosAsync(SunCorp.Entities.Generic.UserSession session) {
            return base.Channel.GetUsUsuariosAsync(session);
        }
        
        public System.Collections.Generic.List<SunCorp.Entities.UsZona> GetListUsZona() {
            return base.Channel.GetListUsZona();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SunCorp.Entities.UsZona>> GetListUsZonaAsync() {
            return base.Channel.GetListUsZonaAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SunCorp.Controller.SvcServicesEntities.GetListUsZonaPageListResponse SunCorp.Controller.SvcServicesEntities.IEntitiesServer.GetListUsZonaPageList(SunCorp.Controller.SvcServicesEntities.GetListUsZonaPageListRequest request) {
            return base.Channel.GetListUsZonaPageList(request);
        }
        
        public System.Collections.Generic.List<SunCorp.Entities.UsZona> GetListUsZonaPageList(int page, int numRows, ref int totalRows, bool includeDelete) {
            SunCorp.Controller.SvcServicesEntities.GetListUsZonaPageListRequest inValue = new SunCorp.Controller.SvcServicesEntities.GetListUsZonaPageListRequest();
            inValue.page = page;
            inValue.numRows = numRows;
            inValue.totalRows = totalRows;
            inValue.includeDelete = includeDelete;
            SunCorp.Controller.SvcServicesEntities.GetListUsZonaPageListResponse retVal = ((SunCorp.Controller.SvcServicesEntities.IEntitiesServer)(this)).GetListUsZonaPageList(inValue);
            totalRows = retVal.totalRows;
            return retVal.GetListUsZonaPageListResult;
        }
        
        public System.Threading.Tasks.Task<SunCorp.Controller.SvcServicesEntities.GetListUsZonaPageListResponse> GetListUsZonaPageListAsync(SunCorp.Controller.SvcServicesEntities.GetListUsZonaPageListRequest request) {
            return base.Channel.GetListUsZonaPageListAsync(request);
        }
        
        public System.Collections.Generic.List<SunCorp.Entities.UsZona> GetListUsZonasUser(SunCorp.Entities.UsUsuarios user) {
            return base.Channel.GetListUsZonasUser(user);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SunCorp.Entities.UsZona>> GetListUsZonasUserAsync(SunCorp.Entities.UsUsuarios user) {
            return base.Channel.GetListUsZonasUserAsync(user);
        }
        
        public SunCorp.Entities.UsZona NewRegUsZona(SunCorp.Entities.UsZona zona) {
            return base.Channel.NewRegUsZona(zona);
        }
        
        public System.Threading.Tasks.Task<SunCorp.Entities.UsZona> NewRegUsZonaAsync(SunCorp.Entities.UsZona zona) {
            return base.Channel.NewRegUsZonaAsync(zona);
        }
        
        public bool UpdateRegUsZona(SunCorp.Entities.UsZona zona) {
            return base.Channel.UpdateRegUsZona(zona);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRegUsZonaAsync(SunCorp.Entities.UsZona zona) {
            return base.Channel.UpdateRegUsZonaAsync(zona);
        }
        
        public bool DeleteRegUsZona(SunCorp.Entities.UsZona zona) {
            return base.Channel.DeleteRegUsZona(zona);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRegUsZonaAsync(SunCorp.Entities.UsZona zona) {
            return base.Channel.DeleteRegUsZonaAsync(zona);
        }
        
        public SunCorp.Entities.UsTipoUsuario GetTypeUser(SunCorp.Entities.UsUsuarios user) {
            return base.Channel.GetTypeUser(user);
        }
        
        public System.Threading.Tasks.Task<SunCorp.Entities.UsTipoUsuario> GetTypeUserAsync(SunCorp.Entities.UsUsuarios user) {
            return base.Channel.GetTypeUserAsync(user);
        }
        
        public System.Collections.Generic.List<SunCorp.Entities.ProCatMarca> GetListProCatMarca() {
            return base.Channel.GetListProCatMarca();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SunCorp.Entities.ProCatMarca>> GetListProCatMarcaAsync() {
            return base.Channel.GetListProCatMarcaAsync();
        }
        
        public SunCorp.Entities.ProCatMarca NewRegProCatMarca(SunCorp.Entities.ProCatMarca reg) {
            return base.Channel.NewRegProCatMarca(reg);
        }
        
        public System.Threading.Tasks.Task<SunCorp.Entities.ProCatMarca> NewRegProCatMarcaAsync(SunCorp.Entities.ProCatMarca reg) {
            return base.Channel.NewRegProCatMarcaAsync(reg);
        }
        
        public bool UpdateRegProCatMarca(SunCorp.Entities.ProCatMarca reg) {
            return base.Channel.UpdateRegProCatMarca(reg);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRegProCatMarcaAsync(SunCorp.Entities.ProCatMarca reg) {
            return base.Channel.UpdateRegProCatMarcaAsync(reg);
        }
        
        public bool DeleteRegProCatMarca(SunCorp.Entities.ProCatMarca reg) {
            return base.Channel.DeleteRegProCatMarca(reg);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRegProCatMarcaAsync(SunCorp.Entities.ProCatMarca reg) {
            return base.Channel.DeleteRegProCatMarcaAsync(reg);
        }
        
        public System.Collections.Generic.List<SunCorp.Entities.ProCatModelo> GetListProCatModelo() {
            return base.Channel.GetListProCatModelo();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SunCorp.Entities.ProCatModelo>> GetListProCatModeloAsync() {
            return base.Channel.GetListProCatModeloAsync();
        }
        
        public SunCorp.Entities.ProCatModelo NewRegProCatModelo(SunCorp.Entities.ProCatModelo reg) {
            return base.Channel.NewRegProCatModelo(reg);
        }
        
        public System.Threading.Tasks.Task<SunCorp.Entities.ProCatModelo> NewRegProCatModeloAsync(SunCorp.Entities.ProCatModelo reg) {
            return base.Channel.NewRegProCatModeloAsync(reg);
        }
        
        public bool UpdateRegProCatModelo(SunCorp.Entities.ProCatModelo reg) {
            return base.Channel.UpdateRegProCatModelo(reg);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRegProCatModeloAsync(SunCorp.Entities.ProCatModelo reg) {
            return base.Channel.UpdateRegProCatModeloAsync(reg);
        }
        
        public bool DeleteRegProCatModelo(SunCorp.Entities.ProCatModelo reg) {
            return base.Channel.DeleteRegProCatModelo(reg);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRegProCatModeloAsync(SunCorp.Entities.ProCatModelo reg) {
            return base.Channel.DeleteRegProCatModeloAsync(reg);
        }
    }
}
