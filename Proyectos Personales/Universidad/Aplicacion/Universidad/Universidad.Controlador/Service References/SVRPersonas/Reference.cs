//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Universidad.Controlador.SVRPersonas {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SVRPersonas.ISPersonas")]
    public interface ISPersonas {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ExisteCorreoUniversidad", ReplyAction="http://tempuri.org/ISPersonas/ExisteCorreoUniversidadResponse")]
        bool ExisteCorreoUniversidad(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ExisteCorreoUniversidad", ReplyAction="http://tempuri.org/ISPersonas/ExisteCorreoUniversidadResponse")]
        System.Threading.Tasks.Task<bool> ExisteCorreoUniversidadAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/InsertaMediosElectronicos", ReplyAction="http://tempuri.org/ISPersonas/InsertaMediosElectronicosResponse")]
        Universidad.Entidades.PER_MEDIOS_ELECTRONICOS InsertaMediosElectronicos(Universidad.Entidades.PER_MEDIOS_ELECTRONICOS mediosElectronicos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/InsertaMediosElectronicos", ReplyAction="http://tempuri.org/ISPersonas/InsertaMediosElectronicosResponse")]
        System.Threading.Tasks.Task<Universidad.Entidades.PER_MEDIOS_ELECTRONICOS> InsertaMediosElectronicosAsync(Universidad.Entidades.PER_MEDIOS_ELECTRONICOS mediosElectronicos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/InsertarPersona", ReplyAction="http://tempuri.org/ISPersonas/InsertarPersonaResponse")]
        Universidad.Entidades.PER_PERSONAS InsertarPersona(Universidad.Entidades.PER_CAT_TELEFONOS personaTelefonos, Universidad.Entidades.PER_MEDIOS_ELECTRONICOS personaMediosElectronicos, Universidad.Entidades.PER_FOTOGRAFIA personaFotografia, Universidad.Entidades.PER_PERSONAS persona, Universidad.Entidades.DIR_DIRECCIONES personaDirecciones);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/InsertarPersona", ReplyAction="http://tempuri.org/ISPersonas/InsertarPersonaResponse")]
        System.Threading.Tasks.Task<Universidad.Entidades.PER_PERSONAS> InsertarPersonaAsync(Universidad.Entidades.PER_CAT_TELEFONOS personaTelefonos, Universidad.Entidades.PER_MEDIOS_ELECTRONICOS personaMediosElectronicos, Universidad.Entidades.PER_FOTOGRAFIA personaFotografia, Universidad.Entidades.PER_PERSONAS persona, Universidad.Entidades.DIR_DIRECCIONES personaDirecciones);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISPersonasChannel : Universidad.Controlador.SVRPersonas.ISPersonas, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SPersonasClient : System.ServiceModel.ClientBase<Universidad.Controlador.SVRPersonas.ISPersonas>, Universidad.Controlador.SVRPersonas.ISPersonas {
        
        public SPersonasClient() {
        }
        
        public SPersonasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SPersonasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SPersonasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SPersonasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ExisteCorreoUniversidad(string correo) {
            return base.Channel.ExisteCorreoUniversidad(correo);
        }
        
        public System.Threading.Tasks.Task<bool> ExisteCorreoUniversidadAsync(string correo) {
            return base.Channel.ExisteCorreoUniversidadAsync(correo);
        }
        
        public Universidad.Entidades.PER_MEDIOS_ELECTRONICOS InsertaMediosElectronicos(Universidad.Entidades.PER_MEDIOS_ELECTRONICOS mediosElectronicos) {
            return base.Channel.InsertaMediosElectronicos(mediosElectronicos);
        }
        
        public System.Threading.Tasks.Task<Universidad.Entidades.PER_MEDIOS_ELECTRONICOS> InsertaMediosElectronicosAsync(Universidad.Entidades.PER_MEDIOS_ELECTRONICOS mediosElectronicos) {
            return base.Channel.InsertaMediosElectronicosAsync(mediosElectronicos);
        }
        
        public Universidad.Entidades.PER_PERSONAS InsertarPersona(Universidad.Entidades.PER_CAT_TELEFONOS personaTelefonos, Universidad.Entidades.PER_MEDIOS_ELECTRONICOS personaMediosElectronicos, Universidad.Entidades.PER_FOTOGRAFIA personaFotografia, Universidad.Entidades.PER_PERSONAS persona, Universidad.Entidades.DIR_DIRECCIONES personaDirecciones) {
            return base.Channel.InsertarPersona(personaTelefonos, personaMediosElectronicos, personaFotografia, persona, personaDirecciones);
        }
        
        public System.Threading.Tasks.Task<Universidad.Entidades.PER_PERSONAS> InsertarPersonaAsync(Universidad.Entidades.PER_CAT_TELEFONOS personaTelefonos, Universidad.Entidades.PER_MEDIOS_ELECTRONICOS personaMediosElectronicos, Universidad.Entidades.PER_FOTOGRAFIA personaFotografia, Universidad.Entidades.PER_PERSONAS persona, Universidad.Entidades.DIR_DIRECCIONES personaDirecciones) {
            return base.Channel.InsertarPersonaAsync(personaTelefonos, personaMediosElectronicos, personaFotografia, persona, personaDirecciones);
        }
    }
}
