//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Universidad.Controlador.SvcLogin {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SvcLogin.IS_Login")]
    public interface IS_Login {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IS_Login/LoginAdministrador", ReplyAction="http://tempuri.org/IS_Login/LoginAdministradorResponse")]
        Universidad.Entidades.US_USUARIOS LoginAdministrador(string Usuario, string Contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IS_Login/LoginAdministrador", ReplyAction="http://tempuri.org/IS_Login/LoginAdministradorResponse")]
        System.Threading.Tasks.Task<Universidad.Entidades.US_USUARIOS> LoginAdministradorAsync(string Usuario, string Contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IS_Login/ObtenPersona", ReplyAction="http://tempuri.org/IS_Login/ObtenPersonaResponse")]
        Universidad.Entidades.PER_PERSONAS ObtenPersona(Universidad.Entidades.US_USUARIOS usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IS_Login/ObtenPersona", ReplyAction="http://tempuri.org/IS_Login/ObtenPersonaResponse")]
        System.Threading.Tasks.Task<Universidad.Entidades.PER_PERSONAS> ObtenPersonaAsync(Universidad.Entidades.US_USUARIOS usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IS_Login/Funciona", ReplyAction="http://tempuri.org/IS_Login/FuncionaResponse")]
        bool Funciona();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IS_Login/Funciona", ReplyAction="http://tempuri.org/IS_Login/FuncionaResponse")]
        System.Threading.Tasks.Task<bool> FuncionaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IS_Login/ObtenPersonas", ReplyAction="http://tempuri.org/IS_Login/ObtenPersonasResponse")]
        Universidad.Entidades.PER_PERSONAS ObtenPersonas(Universidad.Entidades.US_USUARIOS usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IS_Login/ObtenPersonas", ReplyAction="http://tempuri.org/IS_Login/ObtenPersonasResponse")]
        System.Threading.Tasks.Task<Universidad.Entidades.PER_PERSONAS> ObtenPersonasAsync(Universidad.Entidades.US_USUARIOS usuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IS_LoginChannel : Universidad.Controlador.SvcLogin.IS_Login, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class S_LoginClient : System.ServiceModel.ClientBase<Universidad.Controlador.SvcLogin.IS_Login>, Universidad.Controlador.SvcLogin.IS_Login {
        
        public S_LoginClient() {
        }
        
        public S_LoginClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public S_LoginClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public S_LoginClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public S_LoginClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Universidad.Entidades.US_USUARIOS LoginAdministrador(string Usuario, string Contrasena) {
            return base.Channel.LoginAdministrador(Usuario, Contrasena);
        }
        
        public System.Threading.Tasks.Task<Universidad.Entidades.US_USUARIOS> LoginAdministradorAsync(string Usuario, string Contrasena) {
            return base.Channel.LoginAdministradorAsync(Usuario, Contrasena);
        }
        
        public Universidad.Entidades.PER_PERSONAS ObtenPersona(Universidad.Entidades.US_USUARIOS usuario) {
            return base.Channel.ObtenPersona(usuario);
        }
        
        public System.Threading.Tasks.Task<Universidad.Entidades.PER_PERSONAS> ObtenPersonaAsync(Universidad.Entidades.US_USUARIOS usuario) {
            return base.Channel.ObtenPersonaAsync(usuario);
        }
        
        public bool Funciona() {
            return base.Channel.Funciona();
        }
        
        public System.Threading.Tasks.Task<bool> FuncionaAsync() {
            return base.Channel.FuncionaAsync();
        }
        
        public Universidad.Entidades.PER_PERSONAS ObtenPersonas(Universidad.Entidades.US_USUARIOS usuario) {
            return base.Channel.ObtenPersonas(usuario);
        }
        
        public System.Threading.Tasks.Task<Universidad.Entidades.PER_PERSONAS> ObtenPersonasAsync(Universidad.Entidades.US_USUARIOS usuario) {
            return base.Channel.ObtenPersonasAsync(usuario);
        }
    }
}
