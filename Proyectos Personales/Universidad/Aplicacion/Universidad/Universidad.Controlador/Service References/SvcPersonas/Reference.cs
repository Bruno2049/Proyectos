//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Universidad.Controlador.SvcPersonas {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SvcPersonas.ISPersonas")]
    public interface ISPersonas {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ExisteCorreoUniversidad", ReplyAction="http://tempuri.org/ISPersonas/ExisteCorreoUniversidadResponse")]
        bool ExisteCorreoUniversidad(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ExisteCorreoUniversidad", ReplyAction="http://tempuri.org/ISPersonas/ExisteCorreoUniversidadResponse")]
        System.Threading.Tasks.Task<bool> ExisteCorreoUniversidadAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/InsertaMediosElectronicos", ReplyAction="http://tempuri.org/ISPersonas/InsertaMediosElectronicosResponse")]
        PER_MEDIOS_ELECTRONICOS InsertaMediosElectronicos(PER_MEDIOS_ELECTRONICOS mediosElectronicos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/InsertaMediosElectronicos", ReplyAction="http://tempuri.org/ISPersonas/InsertaMediosElectronicosResponse")]
        System.Threading.Tasks.Task<PER_MEDIOS_ELECTRONICOS> InsertaMediosElectronicosAsync(PER_MEDIOS_ELECTRONICOS mediosElectronicos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/InsertarPersona", ReplyAction="http://tempuri.org/ISPersonas/InsertarPersonaResponse")]
        PER_PERSONAS InsertarPersona(PER_CAT_TELEFONOS personaTelefonos, PER_MEDIOS_ELECTRONICOS personaMediosElectronicos, PER_FOTOGRAFIA personaFotografia, PER_PERSONAS persona, DIR_DIRECCIONES personaDirecciones);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/InsertarPersona", ReplyAction="http://tempuri.org/ISPersonas/InsertarPersonaResponse")]
        System.Threading.Tasks.Task<PER_PERSONAS> InsertarPersonaAsync(PER_CAT_TELEFONOS personaTelefonos, PER_MEDIOS_ELECTRONICOS personaMediosElectronicos, PER_FOTOGRAFIA personaFotografia, PER_PERSONAS persona, DIR_DIRECCIONES personaDirecciones);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/BuscarPersona", ReplyAction="http://tempuri.org/ISPersonas/BuscarPersonaResponse")]
        PER_PERSONAS BuscarPersona(string idPersonaLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/BuscarPersona", ReplyAction="http://tempuri.org/ISPersonas/BuscarPersonaResponse")]
        System.Threading.Tasks.Task<PER_PERSONAS> BuscarPersonaAsync(string idPersonaLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/BuscarPersonaCompleta", ReplyAction="http://tempuri.org/ISPersonas/BuscarPersonaCompletaResponse")]
        Universidad.Entidades.Personas.DatosCompletosPersona BuscarPersonaCompleta(string idPersonaLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/BuscarPersonaCompleta", ReplyAction="http://tempuri.org/ISPersonas/BuscarPersonaCompletaResponse")]
        System.Threading.Tasks.Task<Universidad.Entidades.Personas.DatosCompletosPersona> BuscarPersonaCompletaAsync(string idPersonaLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenListaPersonas", ReplyAction="http://tempuri.org/ISPersonas/ObtenListaPersonasResponse")]
        System.Collections.Generic.List<PER_PERSONAS> ObtenListaPersonas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenListaPersonas", ReplyAction="http://tempuri.org/ISPersonas/ObtenListaPersonasResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<PER_PERSONAS>> ObtenListaPersonasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenCatTipoPersona", ReplyAction="http://tempuri.org/ISPersonas/ObtenCatTipoPersonaResponse")]
        System.Collections.Generic.List<PER_CAT_TIPO_PERSONA> ObtenCatTipoPersona();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenCatTipoPersona", ReplyAction="http://tempuri.org/ISPersonas/ObtenCatTipoPersonaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<PER_CAT_TIPO_PERSONA>> ObtenCatTipoPersonaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenListaPersonaFiltro", ReplyAction="http://tempuri.org/ISPersonas/ObtenListaPersonaFiltroResponse")]
        System.Collections.Generic.List<PER_PERSONAS> ObtenListaPersonaFiltro(string idPersona, System.Nullable<System.DateTime> fechaInicio, System.Nullable<System.DateTime> fechaFinal, System.Nullable<int> idTipoPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenListaPersonaFiltro", ReplyAction="http://tempuri.org/ISPersonas/ObtenListaPersonaFiltroResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<PER_PERSONAS>> ObtenListaPersonaFiltroAsync(string idPersona, System.Nullable<System.DateTime> fechaInicio, System.Nullable<System.DateTime> fechaFinal, System.Nullable<int> idTipoPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenDirecciones", ReplyAction="http://tempuri.org/ISPersonas/ObtenDireccionesResponse")]
        DIR_DIRECCIONES ObtenDirecciones(PER_PERSONAS persona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenDirecciones", ReplyAction="http://tempuri.org/ISPersonas/ObtenDireccionesResponse")]
        System.Threading.Tasks.Task<DIR_DIRECCIONES> ObtenDireccionesAsync(PER_PERSONAS persona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenTelefonos", ReplyAction="http://tempuri.org/ISPersonas/ObtenTelefonosResponse")]
        PER_CAT_TELEFONOS ObtenTelefonos(PER_PERSONAS persona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenTelefonos", ReplyAction="http://tempuri.org/ISPersonas/ObtenTelefonosResponse")]
        System.Threading.Tasks.Task<PER_CAT_TELEFONOS> ObtenTelefonosAsync(PER_PERSONAS persona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenMediosElectronicos", ReplyAction="http://tempuri.org/ISPersonas/ObtenMediosElectronicosResponse")]
        PER_MEDIOS_ELECTRONICOS ObtenMediosElectronicos(PER_PERSONAS personas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenMediosElectronicos", ReplyAction="http://tempuri.org/ISPersonas/ObtenMediosElectronicosResponse")]
        System.Threading.Tasks.Task<PER_MEDIOS_ELECTRONICOS> ObtenMediosElectronicosAsync(PER_PERSONAS personas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenFotografia", ReplyAction="http://tempuri.org/ISPersonas/ObtenFotografiaResponse")]
        PER_FOTOGRAFIA ObtenFotografia(PER_PERSONAS personas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenFotografia", ReplyAction="http://tempuri.org/ISPersonas/ObtenFotografiaResponse")]
        System.Threading.Tasks.Task<PER_FOTOGRAFIA> ObtenFotografiaAsync(PER_PERSONAS personas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenTipoPersona", ReplyAction="http://tempuri.org/ISPersonas/ObtenTipoPersonaResponse")]
        PER_CAT_TIPO_PERSONA ObtenTipoPersona(int idTipoPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenTipoPersona", ReplyAction="http://tempuri.org/ISPersonas/ObtenTipoPersonaResponse")]
        System.Threading.Tasks.Task<PER_CAT_TIPO_PERSONA> ObtenTipoPersonaAsync(int idTipoPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenPersonaPais", ReplyAction="http://tempuri.org/ISPersonas/ObtenPersonaPaisResponse")]
        PER_CAT_NACIONALIDAD ObtenPersonaPais(int idPersonaPais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPersonas/ObtenPersonaPais", ReplyAction="http://tempuri.org/ISPersonas/ObtenPersonaPaisResponse")]
        System.Threading.Tasks.Task<PER_CAT_NACIONALIDAD> ObtenPersonaPaisAsync(int idPersonaPais);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISPersonasChannel : Universidad.Controlador.SvcPersonas.ISPersonas, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SPersonasClient : System.ServiceModel.ClientBase<Universidad.Controlador.SvcPersonas.ISPersonas>, Universidad.Controlador.SvcPersonas.ISPersonas {
        
        public SPersonasClient() {
        }
        
        public SPersonasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SPersonasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SPersonasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SPersonasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ExisteCorreoUniversidad(string correo) {
            return base.Channel.ExisteCorreoUniversidad(correo);
        }
        
        public System.Threading.Tasks.Task<bool> ExisteCorreoUniversidadAsync(string correo) {
            return base.Channel.ExisteCorreoUniversidadAsync(correo);
        }
        
        public PER_MEDIOS_ELECTRONICOS InsertaMediosElectronicos(PER_MEDIOS_ELECTRONICOS mediosElectronicos) {
            return base.Channel.InsertaMediosElectronicos(mediosElectronicos);
        }
        
        public System.Threading.Tasks.Task<PER_MEDIOS_ELECTRONICOS> InsertaMediosElectronicosAsync(PER_MEDIOS_ELECTRONICOS mediosElectronicos) {
            return base.Channel.InsertaMediosElectronicosAsync(mediosElectronicos);
        }
        
        public PER_PERSONAS InsertarPersona(PER_CAT_TELEFONOS personaTelefonos, PER_MEDIOS_ELECTRONICOS personaMediosElectronicos, PER_FOTOGRAFIA personaFotografia, PER_PERSONAS persona, DIR_DIRECCIONES personaDirecciones) {
            return base.Channel.InsertarPersona(personaTelefonos, personaMediosElectronicos, personaFotografia, persona, personaDirecciones);
        }
        
        public System.Threading.Tasks.Task<PER_PERSONAS> InsertarPersonaAsync(PER_CAT_TELEFONOS personaTelefonos, PER_MEDIOS_ELECTRONICOS personaMediosElectronicos, PER_FOTOGRAFIA personaFotografia, PER_PERSONAS persona, DIR_DIRECCIONES personaDirecciones) {
            return base.Channel.InsertarPersonaAsync(personaTelefonos, personaMediosElectronicos, personaFotografia, persona, personaDirecciones);
        }
        
        public PER_PERSONAS BuscarPersona(string idPersonaLink) {
            return base.Channel.BuscarPersona(idPersonaLink);
        }
        
        public System.Threading.Tasks.Task<PER_PERSONAS> BuscarPersonaAsync(string idPersonaLink) {
            return base.Channel.BuscarPersonaAsync(idPersonaLink);
        }
        
        public Universidad.Entidades.Personas.DatosCompletosPersona BuscarPersonaCompleta(string idPersonaLink) {
            return base.Channel.BuscarPersonaCompleta(idPersonaLink);
        }
        
        public System.Threading.Tasks.Task<Universidad.Entidades.Personas.DatosCompletosPersona> BuscarPersonaCompletaAsync(string idPersonaLink) {
            return base.Channel.BuscarPersonaCompletaAsync(idPersonaLink);
        }
        
        public System.Collections.Generic.List<PER_PERSONAS> ObtenListaPersonas() {
            return base.Channel.ObtenListaPersonas();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<PER_PERSONAS>> ObtenListaPersonasAsync() {
            return base.Channel.ObtenListaPersonasAsync();
        }
        
        public System.Collections.Generic.List<PER_CAT_TIPO_PERSONA> ObtenCatTipoPersona() {
            return base.Channel.ObtenCatTipoPersona();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<PER_CAT_TIPO_PERSONA>> ObtenCatTipoPersonaAsync() {
            return base.Channel.ObtenCatTipoPersonaAsync();
        }
        
        public System.Collections.Generic.List<PER_PERSONAS> ObtenListaPersonaFiltro(string idPersona, System.Nullable<System.DateTime> fechaInicio, System.Nullable<System.DateTime> fechaFinal, System.Nullable<int> idTipoPersona) {
            return base.Channel.ObtenListaPersonaFiltro(idPersona, fechaInicio, fechaFinal, idTipoPersona);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<PER_PERSONAS>> ObtenListaPersonaFiltroAsync(string idPersona, System.Nullable<System.DateTime> fechaInicio, System.Nullable<System.DateTime> fechaFinal, System.Nullable<int> idTipoPersona) {
            return base.Channel.ObtenListaPersonaFiltroAsync(idPersona, fechaInicio, fechaFinal, idTipoPersona);
        }
        
        public DIR_DIRECCIONES ObtenDirecciones(PER_PERSONAS persona) {
            return base.Channel.ObtenDirecciones(persona);
        }
        
        public System.Threading.Tasks.Task<DIR_DIRECCIONES> ObtenDireccionesAsync(PER_PERSONAS persona) {
            return base.Channel.ObtenDireccionesAsync(persona);
        }
        
        public PER_CAT_TELEFONOS ObtenTelefonos(PER_PERSONAS persona) {
            return base.Channel.ObtenTelefonos(persona);
        }
        
        public System.Threading.Tasks.Task<PER_CAT_TELEFONOS> ObtenTelefonosAsync(PER_PERSONAS persona) {
            return base.Channel.ObtenTelefonosAsync(persona);
        }
        
        public PER_MEDIOS_ELECTRONICOS ObtenMediosElectronicos(PER_PERSONAS personas) {
            return base.Channel.ObtenMediosElectronicos(personas);
        }
        
        public System.Threading.Tasks.Task<PER_MEDIOS_ELECTRONICOS> ObtenMediosElectronicosAsync(PER_PERSONAS personas) {
            return base.Channel.ObtenMediosElectronicosAsync(personas);
        }
        
        public PER_FOTOGRAFIA ObtenFotografia(PER_PERSONAS personas) {
            return base.Channel.ObtenFotografia(personas);
        }
        
        public System.Threading.Tasks.Task<PER_FOTOGRAFIA> ObtenFotografiaAsync(PER_PERSONAS personas) {
            return base.Channel.ObtenFotografiaAsync(personas);
        }
        
        public PER_CAT_TIPO_PERSONA ObtenTipoPersona(int idTipoPersona) {
            return base.Channel.ObtenTipoPersona(idTipoPersona);
        }
        
        public System.Threading.Tasks.Task<PER_CAT_TIPO_PERSONA> ObtenTipoPersonaAsync(int idTipoPersona) {
            return base.Channel.ObtenTipoPersonaAsync(idTipoPersona);
        }
        
        public PER_CAT_NACIONALIDAD ObtenPersonaPais(int idPersonaPais) {
            return base.Channel.ObtenPersonaPais(idPersonaPais);
        }
        
        public System.Threading.Tasks.Task<PER_CAT_NACIONALIDAD> ObtenPersonaPaisAsync(int idPersonaPais) {
            return base.Channel.ObtenPersonaPaisAsync(idPersonaPais);
        }
    }
}
