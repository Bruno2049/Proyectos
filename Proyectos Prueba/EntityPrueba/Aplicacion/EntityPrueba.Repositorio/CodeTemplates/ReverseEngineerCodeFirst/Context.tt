<#@ template hostspecific="true" language="C#" #>
<#@ include file="EF.Utility.CS.ttinclude" #>
<#@ output extension=".cs" #><#

    var efHost = (EfTextTemplateHost)Host;
    var code = new CodeGenerationTools(this);
#>
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using Microsoft.AspNet.Identity.EntityFramework;
using EntityPrueba.Repositorio.Models.Mapping;

namespace EntityPrueba.Repositorio.Models
{
    public partial class <#= efHost.EntityContainer.Name #> : DbContext
    {
        static <#= efHost.EntityContainer.Name #>()
        {
            System.Data.Entity.Database.SetInitializer<<#= efHost.EntityContainer.Name #>>(null);
        }

        public <#= efHost.EntityContainer.Name #>()
            : base("Name=<#= efHost.EntityContainer.Name #>")
        {
        }

<#
    foreach (var set in efHost.EntityContainer.BaseEntitySets.OfType<EntitySet>())
    {
        switch (set.ElementType.Name)
        {
			case "AspNetUserClaim":
#>
		public DbSet<IdentityUserClaim> <#= set.Name #> { get; set; }
<#
                break;
			case "AspNetUserLogin":
#>
		public DbSet<IdentityUserLogin> <#= set.Name #> { get; set; }
<#
                break;
			case "AspNetRole":
#>
		public DbSet<IdentityRole> <#= set.Name #> { get; set; }
<#
                break;
			case "AspNetUser":
#>
		public DbSet<AspNetUser> <#= set.Name #> { get; set; }
<#
                break;
			case "AspNetUserRole":
                break;
			default:
#>
		public DbSet<<#= set.ElementType.Name #>> <#= set.Name #> { get; set; }
<#
                break;
        }
    }
#>

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
<#
    foreach (var set in efHost.EntityContainer.BaseEntitySets.OfType<EntitySet>())
    {
#>
            modelBuilder.Configurations.Add(new <#= set.ElementType.Name #>Map());
<#
    }
	const int IDENTITY_LIB_VERSION = 2;
	switch (IDENTITY_LIB_VERSION)
	{
		case 1:
#>
			modelBuilder.Configurations.Add(new IdentityUserMap());
<#
	        break;
		case 2:
	        break;
		default:
			throw new NotImplementedException();
	}
#>
			modelBuilder.Configurations.Add(new AspNetUserRoleMap());
        }
    }
}
