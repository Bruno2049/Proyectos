//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2014/04/15 - 23:45:47
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using DOminio.Dtos;
using Persistencia;

namespace DOminio.Convertidores
{

    /// <summary>
    /// Assembler for <see cref="CabeceraFactura"/> and <see cref="CabeceraFacturaDTO"/>.
    /// </summary>
    public static partial class CabeceraFacturaAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="CabeceraFacturaDTO"/> converted from <see cref="CabeceraFactura"/>.</param>
        static partial void OnDTO(this CabeceraFactura entity, CabeceraFacturaDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="CabeceraFactura"/> converted from <see cref="CabeceraFacturaDTO"/>.</param>
        static partial void OnEntity(this CabeceraFacturaDTO dto, CabeceraFactura entity);

        /// <summary>
        /// Converts this instance of <see cref="CabeceraFacturaDTO"/> to an instance of <see cref="CabeceraFactura"/>.
        /// </summary>
        /// <param name="dto"><see cref="CabeceraFacturaDTO"/> to convert.</param>
        public static CabeceraFactura ToEntity(this CabeceraFacturaDTO dto)
        {
            if (dto == null) return null;

            var entity = new CabeceraFactura();

            entity.Id = dto.Id;
            entity.NombreCliente = dto.NombreCliente;
            entity.FechaEmision = dto.FechaEmision;
            entity.Total = dto.Total;

            entity.DetalleFactura =DetalleFacturaAssembler.ToEntities(dto.DetalleFactura);

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="CabeceraFactura"/> to an instance of <see cref="CabeceraFacturaDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="CabeceraFactura"/> to convert.</param>
        public static CabeceraFacturaDTO ToDTO(this CabeceraFactura entity)
        {
            if (entity == null) return null;

            var dto = new CabeceraFacturaDTO();

            dto.Id = entity.Id;
            dto.NombreCliente = entity.NombreCliente;
            dto.FechaEmision = entity.FechaEmision;
            dto.Total = entity.Total;

            dto.DetalleFactura = DetalleFacturaAssembler.ToDTOs(entity.DetalleFactura);

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="CabeceraFacturaDTO"/> to an instance of <see cref="CabeceraFactura"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<CabeceraFactura> ToEntities(this IEnumerable<CabeceraFacturaDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="CabeceraFactura"/> to an instance of <see cref="CabeceraFacturaDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<CabeceraFacturaDTO> ToDTOs(this IEnumerable<CabeceraFactura> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
