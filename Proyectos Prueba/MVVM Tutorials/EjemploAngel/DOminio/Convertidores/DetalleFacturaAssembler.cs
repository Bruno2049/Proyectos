//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2014/04/15 - 23:45:47
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using DOminio.Dtos;
using Persistencia;

namespace DOminio.Convertidores
{

    /// <summary>
    /// Assembler for <see cref="DetalleFactura"/> and <see cref="DetalleFacturaDTO"/>.
    /// </summary>
    public static partial class DetalleFacturaAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="DetalleFacturaDTO"/> converted from <see cref="DetalleFactura"/>.</param>
        static partial void OnDTO(this DetalleFactura entity, DetalleFacturaDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="DetalleFactura"/> converted from <see cref="DetalleFacturaDTO"/>.</param>
        static partial void OnEntity(this DetalleFacturaDTO dto, DetalleFactura entity);

        /// <summary>
        /// Converts this instance of <see cref="DetalleFacturaDTO"/> to an instance of <see cref="DetalleFactura"/>.
        /// </summary>
        /// <param name="dto"><see cref="DetalleFacturaDTO"/> to convert.</param>
        public static DetalleFactura ToEntity(this DetalleFacturaDTO dto)
        {
            if (dto == null) return null;

            var entity = new DetalleFactura();

            entity.Id = dto.Id;
            entity.IdCabecera = dto.IdCabecera;
            entity.NombreProducto = dto.NombreProducto;
            entity.Cantidad = dto.Cantidad;
            entity.Precio = dto.Precio;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="DetalleFactura"/> to an instance of <see cref="DetalleFacturaDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="DetalleFactura"/> to convert.</param>
        public static DetalleFacturaDTO ToDTO(this DetalleFactura entity)
        {
            if (entity == null) return null;

            var dto = new DetalleFacturaDTO();

            dto.Id = entity.Id;
            dto.IdCabecera = entity.IdCabecera;
            dto.NombreProducto = entity.NombreProducto;
            dto.Cantidad = entity.Cantidad;
            dto.Precio = entity.Precio;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="DetalleFacturaDTO"/> to an instance of <see cref="DetalleFactura"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<DetalleFactura> ToEntities(this IEnumerable<DetalleFacturaDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="DetalleFactura"/> to an instance of <see cref="DetalleFacturaDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<DetalleFacturaDTO> ToDTOs(this IEnumerable<DetalleFactura> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
