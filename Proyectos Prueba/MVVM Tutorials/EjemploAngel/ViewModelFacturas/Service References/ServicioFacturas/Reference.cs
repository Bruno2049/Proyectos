//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace ViewModelFacturas.ServicioFacturas {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CabeceraFacturaDTO", Namespace="http://schemas.datacontract.org/2004/07/DOminio.Dtos")]
    public partial class CabeceraFacturaDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ViewModelFacturas.ServicioFacturas.DetalleFacturaDTO> DetalleFacturaField;
        
        private System.Nullable<System.DateTime> FechaEmisionField;
        
        private int IdField;
        
        private string NombreClienteField;
        
        private System.Nullable<decimal> TotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ViewModelFacturas.ServicioFacturas.DetalleFacturaDTO> DetalleFactura {
            get {
                return this.DetalleFacturaField;
            }
            set {
                if ((object.ReferenceEquals(this.DetalleFacturaField, value) != true)) {
                    this.DetalleFacturaField = value;
                    this.RaisePropertyChanged("DetalleFactura");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FechaEmision {
            get {
                return this.FechaEmisionField;
            }
            set {
                if ((this.FechaEmisionField.Equals(value) != true)) {
                    this.FechaEmisionField = value;
                    this.RaisePropertyChanged("FechaEmision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreCliente {
            get {
                return this.NombreClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreClienteField, value) != true)) {
                    this.NombreClienteField = value;
                    this.RaisePropertyChanged("NombreCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetalleFacturaDTO", Namespace="http://schemas.datacontract.org/2004/07/DOminio.Dtos")]
    public partial class DetalleFacturaDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> CantidadField;
        
        private int IdField;
        
        private System.Nullable<int> IdCabeceraField;
        
        private string NombreProductoField;
        
        private System.Nullable<decimal> PrecioField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Cantidad {
            get {
                return this.CantidadField;
            }
            set {
                if ((this.CantidadField.Equals(value) != true)) {
                    this.CantidadField = value;
                    this.RaisePropertyChanged("Cantidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdCabecera {
            get {
                return this.IdCabeceraField;
            }
            set {
                if ((this.IdCabeceraField.Equals(value) != true)) {
                    this.IdCabeceraField = value;
                    this.RaisePropertyChanged("IdCabecera");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreProducto {
            get {
                return this.NombreProductoField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreProductoField, value) != true)) {
                    this.NombreProductoField = value;
                    this.RaisePropertyChanged("NombreProducto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Precio {
            get {
                return this.PrecioField;
            }
            set {
                if ((this.PrecioField.Equals(value) != true)) {
                    this.PrecioField = value;
                    this.RaisePropertyChanged("Precio");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioFacturas.ICabeceraService")]
    public interface ICabeceraService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICabeceraService/InsertarCabeceraService", ReplyAction="http://tempuri.org/ICabeceraService/InsertarCabeceraServiceResponse")]
        System.IAsyncResult BeginInsertarCabeceraService(ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO cabeceraFacturaDto, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertarCabeceraService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICabeceraService/ListaCabeceraFacturasService", ReplyAction="http://tempuri.org/ICabeceraService/ListaCabeceraFacturasServiceResponse")]
        System.IAsyncResult BeginListaCabeceraFacturasService(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO> EndListaCabeceraFacturasService(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICabeceraServiceChannel : ViewModelFacturas.ServicioFacturas.ICabeceraService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarCabeceraServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarCabeceraServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListaCabeceraFacturasServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListaCabeceraFacturasServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CabeceraServiceClient : System.ServiceModel.ClientBase<ViewModelFacturas.ServicioFacturas.ICabeceraService>, ViewModelFacturas.ServicioFacturas.ICabeceraService {
        
        private BeginOperationDelegate onBeginInsertarCabeceraServiceDelegate;
        
        private EndOperationDelegate onEndInsertarCabeceraServiceDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarCabeceraServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginListaCabeceraFacturasServiceDelegate;
        
        private EndOperationDelegate onEndListaCabeceraFacturasServiceDelegate;
        
        private System.Threading.SendOrPostCallback onListaCabeceraFacturasServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CabeceraServiceClient() {
        }
        
        public CabeceraServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CabeceraServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CabeceraServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CabeceraServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("No se puede establecer el objeto CookieContainer. Asegúrese de que el enlace cont" +
                            "iene un objeto HttpCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<InsertarCabeceraServiceCompletedEventArgs> InsertarCabeceraServiceCompleted;
        
        public event System.EventHandler<ListaCabeceraFacturasServiceCompletedEventArgs> ListaCabeceraFacturasServiceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ViewModelFacturas.ServicioFacturas.ICabeceraService.BeginInsertarCabeceraService(ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO cabeceraFacturaDto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarCabeceraService(cabeceraFacturaDto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ViewModelFacturas.ServicioFacturas.ICabeceraService.EndInsertarCabeceraService(System.IAsyncResult result) {
            return base.Channel.EndInsertarCabeceraService(result);
        }
        
        private System.IAsyncResult OnBeginInsertarCabeceraService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO cabeceraFacturaDto = ((ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO)(inValues[0]));
            return ((ViewModelFacturas.ServicioFacturas.ICabeceraService)(this)).BeginInsertarCabeceraService(cabeceraFacturaDto, callback, asyncState);
        }
        
        private object[] OnEndInsertarCabeceraService(System.IAsyncResult result) {
            bool retVal = ((ViewModelFacturas.ServicioFacturas.ICabeceraService)(this)).EndInsertarCabeceraService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarCabeceraServiceCompleted(object state) {
            if ((this.InsertarCabeceraServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarCabeceraServiceCompleted(this, new InsertarCabeceraServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarCabeceraServiceAsync(ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO cabeceraFacturaDto) {
            this.InsertarCabeceraServiceAsync(cabeceraFacturaDto, null);
        }
        
        public void InsertarCabeceraServiceAsync(ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO cabeceraFacturaDto, object userState) {
            if ((this.onBeginInsertarCabeceraServiceDelegate == null)) {
                this.onBeginInsertarCabeceraServiceDelegate = new BeginOperationDelegate(this.OnBeginInsertarCabeceraService);
            }
            if ((this.onEndInsertarCabeceraServiceDelegate == null)) {
                this.onEndInsertarCabeceraServiceDelegate = new EndOperationDelegate(this.OnEndInsertarCabeceraService);
            }
            if ((this.onInsertarCabeceraServiceCompletedDelegate == null)) {
                this.onInsertarCabeceraServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarCabeceraServiceCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarCabeceraServiceDelegate, new object[] {
                        cabeceraFacturaDto}, this.onEndInsertarCabeceraServiceDelegate, this.onInsertarCabeceraServiceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ViewModelFacturas.ServicioFacturas.ICabeceraService.BeginListaCabeceraFacturasService(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListaCabeceraFacturasService(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO> ViewModelFacturas.ServicioFacturas.ICabeceraService.EndListaCabeceraFacturasService(System.IAsyncResult result) {
            return base.Channel.EndListaCabeceraFacturasService(result);
        }
        
        private System.IAsyncResult OnBeginListaCabeceraFacturasService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ViewModelFacturas.ServicioFacturas.ICabeceraService)(this)).BeginListaCabeceraFacturasService(callback, asyncState);
        }
        
        private object[] OnEndListaCabeceraFacturasService(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO> retVal = ((ViewModelFacturas.ServicioFacturas.ICabeceraService)(this)).EndListaCabeceraFacturasService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListaCabeceraFacturasServiceCompleted(object state) {
            if ((this.ListaCabeceraFacturasServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListaCabeceraFacturasServiceCompleted(this, new ListaCabeceraFacturasServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListaCabeceraFacturasServiceAsync() {
            this.ListaCabeceraFacturasServiceAsync(null);
        }
        
        public void ListaCabeceraFacturasServiceAsync(object userState) {
            if ((this.onBeginListaCabeceraFacturasServiceDelegate == null)) {
                this.onBeginListaCabeceraFacturasServiceDelegate = new BeginOperationDelegate(this.OnBeginListaCabeceraFacturasService);
            }
            if ((this.onEndListaCabeceraFacturasServiceDelegate == null)) {
                this.onEndListaCabeceraFacturasServiceDelegate = new EndOperationDelegate(this.OnEndListaCabeceraFacturasService);
            }
            if ((this.onListaCabeceraFacturasServiceCompletedDelegate == null)) {
                this.onListaCabeceraFacturasServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListaCabeceraFacturasServiceCompleted);
            }
            base.InvokeAsync(this.onBeginListaCabeceraFacturasServiceDelegate, null, this.onEndListaCabeceraFacturasServiceDelegate, this.onListaCabeceraFacturasServiceCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ViewModelFacturas.ServicioFacturas.ICabeceraService CreateChannel() {
            return new CabeceraServiceClientChannel(this);
        }
        
        private class CabeceraServiceClientChannel : ChannelBase<ViewModelFacturas.ServicioFacturas.ICabeceraService>, ViewModelFacturas.ServicioFacturas.ICabeceraService {
            
            public CabeceraServiceClientChannel(System.ServiceModel.ClientBase<ViewModelFacturas.ServicioFacturas.ICabeceraService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertarCabeceraService(ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO cabeceraFacturaDto, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cabeceraFacturaDto;
                System.IAsyncResult _result = base.BeginInvoke("InsertarCabeceraService", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndInsertarCabeceraService(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("InsertarCabeceraService", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListaCabeceraFacturasService(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListaCabeceraFacturasService", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO> EndListaCabeceraFacturasService(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO> _result = ((System.Collections.ObjectModel.ObservableCollection<ViewModelFacturas.ServicioFacturas.CabeceraFacturaDTO>)(base.EndInvoke("ListaCabeceraFacturasService", _args, result)));
                return _result;
            }
        }
    }
}
