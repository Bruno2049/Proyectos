//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.42
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eClock {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DS_EmpleadosStatusPie")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_EmpleadosStatusPie : System.Data.DataSet {
        
        private EC_PERSONAS_DIARIODataTable tableEC_PERSONAS_DIARIO;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_EmpleadosStatusPie() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_EmpleadosStatusPie(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["EC_PERSONAS_DIARIO"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DIARIODataTable(ds.Tables["EC_PERSONAS_DIARIO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DIARIODataTable EC_PERSONAS_DIARIO {
            get {
                return this.tableEC_PERSONAS_DIARIO;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DS_EmpleadosStatusPie cln = ((DS_EmpleadosStatusPie)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EC_PERSONAS_DIARIO"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DIARIODataTable(ds.Tables["EC_PERSONAS_DIARIO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableEC_PERSONAS_DIARIO = ((EC_PERSONAS_DIARIODataTable)(base.Tables["EC_PERSONAS_DIARIO"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DIARIO != null)) {
                    this.tableEC_PERSONAS_DIARIO.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_EmpleadosStatusPie";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DS_EmpleadosStatusPie.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-MX");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEC_PERSONAS_DIARIO = new EC_PERSONAS_DIARIODataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DIARIO);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DIARIO() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DS_EmpleadosStatusPie ds = new DS_EmpleadosStatusPie();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void EC_PERSONAS_DIARIORowChangeEventHandler(object sender, EC_PERSONAS_DIARIORowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DIARIODataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPERSONA_DIARIO_FECHA;
            
            private System.Data.DataColumn columnTRACVE;
            
            private System.Data.DataColumn columnTRANOM;
            
            private System.Data.DataColumn columnDATCCT;
            
            private System.Data.DataColumn columnDATARE;
            
            private System.Data.DataColumn columnDATDEP;
            
            private System.Data.DataColumn columnCNOCVE;
            
            private System.Data.DataColumn columnCIACVE;
            
            private System.Data.DataColumn columnNS;
            
            private System.Data.DataColumn columnASISTENCIA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIODataTable() {
                this.TableName = "EC_PERSONAS_DIARIO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DIARIODataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DIARIODataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_DIARIO_FECHAColumn {
                get {
                    return this.columnPERSONA_DIARIO_FECHA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRACVEColumn {
                get {
                    return this.columnTRACVE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANOMColumn {
                get {
                    return this.columnTRANOM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATCCTColumn {
                get {
                    return this.columnDATCCT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATAREColumn {
                get {
                    return this.columnDATARE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATDEPColumn {
                get {
                    return this.columnDATDEP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CNOCVEColumn {
                get {
                    return this.columnCNOCVE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CIACVEColumn {
                get {
                    return this.columnCIACVE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NSColumn {
                get {
                    return this.columnNS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ASISTENCIAColumn {
                get {
                    return this.columnASISTENCIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIORow this[int index] {
                get {
                    return ((EC_PERSONAS_DIARIORow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DIARIORowChangeEventHandler EC_PERSONAS_DIARIORowChanging;
            
            public event EC_PERSONAS_DIARIORowChangeEventHandler EC_PERSONAS_DIARIORowChanged;
            
            public event EC_PERSONAS_DIARIORowChangeEventHandler EC_PERSONAS_DIARIORowDeleting;
            
            public event EC_PERSONAS_DIARIORowChangeEventHandler EC_PERSONAS_DIARIORowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DIARIORow(EC_PERSONAS_DIARIORow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIORow AddEC_PERSONAS_DIARIORow(System.DateTime PERSONA_DIARIO_FECHA, decimal TRACVE, string TRANOM, string DATCCT, string DATARE, string DATDEP, string CNOCVE, string CIACVE, string NS, string ASISTENCIA) {
                EC_PERSONAS_DIARIORow rowEC_PERSONAS_DIARIORow = ((EC_PERSONAS_DIARIORow)(this.NewRow()));
                rowEC_PERSONAS_DIARIORow.ItemArray = new object[] {
                        PERSONA_DIARIO_FECHA,
                        TRACVE,
                        TRANOM,
                        DATCCT,
                        DATARE,
                        DATDEP,
                        CNOCVE,
                        CIACVE,
                        NS,
                        ASISTENCIA};
                this.Rows.Add(rowEC_PERSONAS_DIARIORow);
                return rowEC_PERSONAS_DIARIORow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DIARIODataTable cln = ((EC_PERSONAS_DIARIODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DIARIODataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPERSONA_DIARIO_FECHA = base.Columns["PERSONA_DIARIO_FECHA"];
                this.columnTRACVE = base.Columns["TRACVE"];
                this.columnTRANOM = base.Columns["TRANOM"];
                this.columnDATCCT = base.Columns["DATCCT"];
                this.columnDATARE = base.Columns["DATARE"];
                this.columnDATDEP = base.Columns["DATDEP"];
                this.columnCNOCVE = base.Columns["CNOCVE"];
                this.columnCIACVE = base.Columns["CIACVE"];
                this.columnNS = base.Columns["NS"];
                this.columnASISTENCIA = base.Columns["ASISTENCIA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPERSONA_DIARIO_FECHA = new System.Data.DataColumn("PERSONA_DIARIO_FECHA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_DIARIO_FECHA);
                this.columnTRACVE = new System.Data.DataColumn("TRACVE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRACVE);
                this.columnTRANOM = new System.Data.DataColumn("TRANOM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANOM);
                this.columnDATCCT = new System.Data.DataColumn("DATCCT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATCCT);
                this.columnDATARE = new System.Data.DataColumn("DATARE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATARE);
                this.columnDATDEP = new System.Data.DataColumn("DATDEP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATDEP);
                this.columnCNOCVE = new System.Data.DataColumn("CNOCVE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNOCVE);
                this.columnCIACVE = new System.Data.DataColumn("CIACVE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIACVE);
                this.columnNS = new System.Data.DataColumn("NS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNS);
                this.columnASISTENCIA = new System.Data.DataColumn("ASISTENCIA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnASISTENCIA);
                this.columnPERSONA_DIARIO_FECHA.AllowDBNull = false;
                this.columnTRACVE.AllowDBNull = false;
                this.columnTRANOM.AllowDBNull = false;
                this.columnASISTENCIA.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIORow NewEC_PERSONAS_DIARIORow() {
                return ((EC_PERSONAS_DIARIORow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DIARIORow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DIARIORow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DIARIORowChanged != null)) {
                    this.EC_PERSONAS_DIARIORowChanged(this, new EC_PERSONAS_DIARIORowChangeEvent(((EC_PERSONAS_DIARIORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DIARIORowChanging != null)) {
                    this.EC_PERSONAS_DIARIORowChanging(this, new EC_PERSONAS_DIARIORowChangeEvent(((EC_PERSONAS_DIARIORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DIARIORowDeleted != null)) {
                    this.EC_PERSONAS_DIARIORowDeleted(this, new EC_PERSONAS_DIARIORowChangeEvent(((EC_PERSONAS_DIARIORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DIARIORowDeleting != null)) {
                    this.EC_PERSONAS_DIARIORowDeleting(this, new EC_PERSONAS_DIARIORowChangeEvent(((EC_PERSONAS_DIARIORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DIARIORow(EC_PERSONAS_DIARIORow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_EmpleadosStatusPie ds = new DS_EmpleadosStatusPie();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DIARIODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DIARIORow : System.Data.DataRow {
            
            private EC_PERSONAS_DIARIODataTable tableEC_PERSONAS_DIARIO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DIARIORow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DIARIO = ((EC_PERSONAS_DIARIODataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PERSONA_DIARIO_FECHA {
                get {
                    return ((System.DateTime)(this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_FECHAColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_FECHAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRACVE {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO.TRACVEColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.TRACVEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANOM {
                get {
                    return ((string)(this[this.tableEC_PERSONAS_DIARIO.TRANOMColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.TRANOMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATCCT {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO.DATCCTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DATCCT\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.DATCCTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATARE {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO.DATAREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DATARE\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.DATAREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATDEP {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO.DATDEPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DATDEP\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.DATDEPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNOCVE {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO.CNOCVEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'CNOCVE\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.CNOCVEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CIACVE {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO.CIACVEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'CIACVE\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.CIACVEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NS {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO.NSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'NS\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.NSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASISTENCIA {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO.ASISTENCIAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'ASISTENCIA\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.ASISTENCIAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATCCTNull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.DATCCTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATCCTNull() {
                this[this.tableEC_PERSONAS_DIARIO.DATCCTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATARENull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.DATAREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATARENull() {
                this[this.tableEC_PERSONAS_DIARIO.DATAREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATDEPNull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.DATDEPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATDEPNull() {
                this[this.tableEC_PERSONAS_DIARIO.DATDEPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNOCVENull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.CNOCVEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNOCVENull() {
                this[this.tableEC_PERSONAS_DIARIO.CNOCVEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIACVENull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.CIACVEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIACVENull() {
                this[this.tableEC_PERSONAS_DIARIO.CIACVEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSNull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.NSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSNull() {
                this[this.tableEC_PERSONAS_DIARIO.NSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASISTENCIANull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.ASISTENCIAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASISTENCIANull() {
                this[this.tableEC_PERSONAS_DIARIO.ASISTENCIAColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DIARIORowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DIARIORow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIORowChangeEvent(EC_PERSONAS_DIARIORow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591