//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.42
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eClock {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DS_Reporte_Faltas")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_Reporte_Faltas : System.Data.DataSet {
        
        private EC_PERSONAS_DIARIO_Reporte_FaltasDataTable tableEC_PERSONAS_DIARIO_Reporte_Faltas;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_Reporte_Faltas() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_Reporte_Faltas(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["EC_PERSONAS_DIARIO_Reporte_Faltas"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DIARIO_Reporte_FaltasDataTable(ds.Tables["EC_PERSONAS_DIARIO_Reporte_Faltas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DIARIO_Reporte_FaltasDataTable EC_PERSONAS_DIARIO_Reporte_Faltas {
            get {
                return this.tableEC_PERSONAS_DIARIO_Reporte_Faltas;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DS_Reporte_Faltas cln = ((DS_Reporte_Faltas)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EC_PERSONAS_DIARIO_Reporte_Faltas"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DIARIO_Reporte_FaltasDataTable(ds.Tables["EC_PERSONAS_DIARIO_Reporte_Faltas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableEC_PERSONAS_DIARIO_Reporte_Faltas = ((EC_PERSONAS_DIARIO_Reporte_FaltasDataTable)(base.Tables["EC_PERSONAS_DIARIO_Reporte_Faltas"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DIARIO_Reporte_Faltas != null)) {
                    this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_Reporte_Faltas";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DS_Reporte_Faltas.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-MX");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEC_PERSONAS_DIARIO_Reporte_Faltas = new EC_PERSONAS_DIARIO_Reporte_FaltasDataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DIARIO_Reporte_Faltas);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DIARIO_Reporte_Faltas() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DS_Reporte_Faltas ds = new DS_Reporte_Faltas();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEventHandler(object sender, EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DIARIO_Reporte_FaltasDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSUSCRIPCION_NOMBRE;
            
            private System.Data.DataColumn columnPERSONA_LINK_ID;
            
            private System.Data.DataColumn columnPERSONA_NOMBRE;
            
            private System.Data.DataColumn columnNODIAS;
                        
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_Reporte_FaltasDataTable() {
                this.TableName = "EC_PERSONAS_DIARIO_Reporte_Faltas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DIARIO_Reporte_FaltasDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DIARIO_Reporte_FaltasDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUSCRIPCION_NOMBREColumn {
                get {
                    return this.columnSUSCRIPCION_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_LINK_IDColumn {
                get {
                    return this.columnPERSONA_LINK_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_NOMBREColumn {
                get {
                    return this.columnPERSONA_NOMBRE;
                }
            }
            
           
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NODIASColumn {
                get {
                    return this.columnNODIAS;
                }
            }
            
          
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_Reporte_FaltasRow this[int index] {
                get {
                    return ((EC_PERSONAS_DIARIO_Reporte_FaltasRow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEventHandler EC_PERSONAS_DIARIO_Reporte_FaltasRowChanging;
            
            public event EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEventHandler EC_PERSONAS_DIARIO_Reporte_FaltasRowChanged;
            
            public event EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEventHandler EC_PERSONAS_DIARIO_Reporte_FaltasRowDeleting;
            
            public event EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEventHandler EC_PERSONAS_DIARIO_Reporte_FaltasRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DIARIO_Reporte_FaltasRow(EC_PERSONAS_DIARIO_Reporte_FaltasRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_Reporte_FaltasRow AddEC_PERSONAS_DIARIO_Reporte_FaltasRow(string SUSCRIPCION_NOMBRE, decimal PERSONA_LINK_ID, string PERSONA_NOMBRE, decimal PERSONA_ID, System.DateTime PERSONA_DIARIO_FECHA1, System.DateTime PERSONA_DIARIO_FECHA2, System.DateTime PERSONA_DIARIO_FECHA3, decimal PERSONA_DIARIO_ID, decimal NODIAS, decimal SUSCRIPCION_ID, decimal EXPR1, decimal EXPR2, decimal EXPR3) {
                EC_PERSONAS_DIARIO_Reporte_FaltasRow rowEC_PERSONAS_DIARIO_Reporte_FaltasRow = ((EC_PERSONAS_DIARIO_Reporte_FaltasRow)(this.NewRow()));
                rowEC_PERSONAS_DIARIO_Reporte_FaltasRow.ItemArray = new object[] {
                        SUSCRIPCION_NOMBRE,
                        PERSONA_LINK_ID,
                        PERSONA_NOMBRE,
                        NODIAS,
                       };
                this.Rows.Add(rowEC_PERSONAS_DIARIO_Reporte_FaltasRow);
                return rowEC_PERSONAS_DIARIO_Reporte_FaltasRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DIARIO_Reporte_FaltasDataTable cln = ((EC_PERSONAS_DIARIO_Reporte_FaltasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DIARIO_Reporte_FaltasDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSUSCRIPCION_NOMBRE = base.Columns["SUSCRIPCION_NOMBRE"];
                this.columnPERSONA_LINK_ID = base.Columns["PERSONA_LINK_ID"];
                this.columnPERSONA_NOMBRE = base.Columns["PERSONA_NOMBRE"];
                this.columnNODIAS = base.Columns["NODIAS"];
           
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSUSCRIPCION_NOMBRE = new System.Data.DataColumn("SUSCRIPCION_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUSCRIPCION_NOMBRE);
                this.columnPERSONA_LINK_ID = new System.Data.DataColumn("PERSONA_LINK_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_LINK_ID);
                this.columnPERSONA_NOMBRE = new System.Data.DataColumn("PERSONA_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_NOMBRE);
                this.columnNODIAS = new System.Data.DataColumn("NODIAS", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNODIAS);
                this.columnPERSONA_LINK_ID.AllowDBNull = false;                
                this.columnNODIAS.ReadOnly = false;
                
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_Reporte_FaltasRow NewEC_PERSONAS_DIARIO_Reporte_FaltasRow() {
                return ((EC_PERSONAS_DIARIO_Reporte_FaltasRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DIARIO_Reporte_FaltasRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DIARIO_Reporte_FaltasRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DIARIO_Reporte_FaltasRowChanged != null)) {
                    this.EC_PERSONAS_DIARIO_Reporte_FaltasRowChanged(this, new EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEvent(((EC_PERSONAS_DIARIO_Reporte_FaltasRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DIARIO_Reporte_FaltasRowChanging != null)) {
                    this.EC_PERSONAS_DIARIO_Reporte_FaltasRowChanging(this, new EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEvent(((EC_PERSONAS_DIARIO_Reporte_FaltasRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DIARIO_Reporte_FaltasRowDeleted != null)) {
                    this.EC_PERSONAS_DIARIO_Reporte_FaltasRowDeleted(this, new EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEvent(((EC_PERSONAS_DIARIO_Reporte_FaltasRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DIARIO_Reporte_FaltasRowDeleting != null)) {
                    this.EC_PERSONAS_DIARIO_Reporte_FaltasRowDeleting(this, new EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEvent(((EC_PERSONAS_DIARIO_Reporte_FaltasRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DIARIO_Reporte_FaltasRow(EC_PERSONAS_DIARIO_Reporte_FaltasRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_Reporte_Faltas ds = new DS_Reporte_Faltas();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DIARIO_Reporte_FaltasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DIARIO_Reporte_FaltasRow : System.Data.DataRow {
            
            private EC_PERSONAS_DIARIO_Reporte_FaltasDataTable tableEC_PERSONAS_DIARIO_Reporte_Faltas;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DIARIO_Reporte_FaltasRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DIARIO_Reporte_Faltas = ((EC_PERSONAS_DIARIO_Reporte_FaltasDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUSCRIPCION_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.SUSCRIPCION_NOMBREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'SUSCRIPCION_NOMBRE\' de la tabla \'EC_PERSONAS_DIARIO_Reporte_" +
                                "Faltas\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.SUSCRIPCION_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PERSONA_LINK_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.PERSONA_LINK_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.PERSONA_LINK_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERSONA_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.PERSONA_NOMBREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'PERSONA_NOMBRE\' de la tabla \'EC_PERSONAS_DIARIO_Reporte_" +
                                "Faltas\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.PERSONA_NOMBREColumn] = value;
                }
            }
            
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NODIAS {
                get {
                    try {
                        return ((decimal)(this[this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.NODIASColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'NODIAS\' de la tabla \'EC_PERSONAS_DIARIO_Reporte_Faltas\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.NODIASColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUSCRIPCION_NOMBRENull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.SUSCRIPCION_NOMBREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUSCRIPCION_NOMBRENull() {
                this[this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.SUSCRIPCION_NOMBREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPERSONA_NOMBRENull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.PERSONA_NOMBREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPERSONA_NOMBRENull() {
                this[this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.PERSONA_NOMBREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNODIASNull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.NODIASColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNODIASNull() {
                this[this.tableEC_PERSONAS_DIARIO_Reporte_Faltas.NODIASColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DIARIO_Reporte_FaltasRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_Reporte_FaltasRowChangeEvent(EC_PERSONAS_DIARIO_Reporte_FaltasRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_Reporte_FaltasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591