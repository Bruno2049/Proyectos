//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.42
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eClock {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DS_Inasistencias")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_Inasistencias : System.Data.DataSet {
        
        private EC_TIPO_INCIDENCIASDataTable tableEC_TIPO_INCIDENCIAS;
        
        private EC_PERSONAS_DIARIO_UpdateDataTable tableEC_PERSONAS_DIARIO_Update;
        
        private EC_INCIDENCIASDataTable tableEC_INCIDENCIAS;
        
        private EC_PERSONAS_DIARIODataTable tableEC_PERSONAS_DIARIO;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_Inasistencias() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_Inasistencias(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["EC_TIPO_INCIDENCIAS"] != null)) {
                    base.Tables.Add(new EC_TIPO_INCIDENCIASDataTable(ds.Tables["EC_TIPO_INCIDENCIAS"]));
                }
                if ((ds.Tables["EC_PERSONAS_DIARIO_Update"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DIARIO_UpdateDataTable(ds.Tables["EC_PERSONAS_DIARIO_Update"]));
                }
                if ((ds.Tables["EC_INCIDENCIAS"] != null)) {
                    base.Tables.Add(new EC_INCIDENCIASDataTable(ds.Tables["EC_INCIDENCIAS"]));
                }
                if ((ds.Tables["EC_PERSONAS_DIARIO"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DIARIODataTable(ds.Tables["EC_PERSONAS_DIARIO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_TIPO_INCIDENCIASDataTable EC_TIPO_INCIDENCIAS {
            get {
                return this.tableEC_TIPO_INCIDENCIAS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DIARIO_UpdateDataTable EC_PERSONAS_DIARIO_Update {
            get {
                return this.tableEC_PERSONAS_DIARIO_Update;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_INCIDENCIASDataTable EC_INCIDENCIAS {
            get {
                return this.tableEC_INCIDENCIAS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DIARIODataTable EC_PERSONAS_DIARIO {
            get {
                return this.tableEC_PERSONAS_DIARIO;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DS_Inasistencias cln = ((DS_Inasistencias)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EC_TIPO_INCIDENCIAS"] != null)) {
                    base.Tables.Add(new EC_TIPO_INCIDENCIASDataTable(ds.Tables["EC_TIPO_INCIDENCIAS"]));
                }
                if ((ds.Tables["EC_PERSONAS_DIARIO_Update"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DIARIO_UpdateDataTable(ds.Tables["EC_PERSONAS_DIARIO_Update"]));
                }
                if ((ds.Tables["EC_INCIDENCIAS"] != null)) {
                    base.Tables.Add(new EC_INCIDENCIASDataTable(ds.Tables["EC_INCIDENCIAS"]));
                }
                if ((ds.Tables["EC_PERSONAS_DIARIO"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DIARIODataTable(ds.Tables["EC_PERSONAS_DIARIO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableEC_TIPO_INCIDENCIAS = ((EC_TIPO_INCIDENCIASDataTable)(base.Tables["EC_TIPO_INCIDENCIAS"]));
            if ((initTable == true)) {
                if ((this.tableEC_TIPO_INCIDENCIAS != null)) {
                    this.tableEC_TIPO_INCIDENCIAS.InitVars();
                }
            }
            this.tableEC_PERSONAS_DIARIO_Update = ((EC_PERSONAS_DIARIO_UpdateDataTable)(base.Tables["EC_PERSONAS_DIARIO_Update"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DIARIO_Update != null)) {
                    this.tableEC_PERSONAS_DIARIO_Update.InitVars();
                }
            }
            this.tableEC_INCIDENCIAS = ((EC_INCIDENCIASDataTable)(base.Tables["EC_INCIDENCIAS"]));
            if ((initTable == true)) {
                if ((this.tableEC_INCIDENCIAS != null)) {
                    this.tableEC_INCIDENCIAS.InitVars();
                }
            }
            this.tableEC_PERSONAS_DIARIO = ((EC_PERSONAS_DIARIODataTable)(base.Tables["EC_PERSONAS_DIARIO"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DIARIO != null)) {
                    this.tableEC_PERSONAS_DIARIO.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_Inasistencias";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DS_Inasistencias.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEC_TIPO_INCIDENCIAS = new EC_TIPO_INCIDENCIASDataTable();
            base.Tables.Add(this.tableEC_TIPO_INCIDENCIAS);
            this.tableEC_PERSONAS_DIARIO_Update = new EC_PERSONAS_DIARIO_UpdateDataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DIARIO_Update);
            this.tableEC_INCIDENCIAS = new EC_INCIDENCIASDataTable();
            base.Tables.Add(this.tableEC_INCIDENCIAS);
            this.tableEC_PERSONAS_DIARIO = new EC_PERSONAS_DIARIODataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DIARIO);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_TIPO_INCIDENCIAS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DIARIO_Update() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_INCIDENCIAS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DIARIO() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DS_Inasistencias ds = new DS_Inasistencias();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void EC_TIPO_INCIDENCIASRowChangeEventHandler(object sender, EC_TIPO_INCIDENCIASRowChangeEvent e);
        
        public delegate void EC_PERSONAS_DIARIO_UpdateRowChangeEventHandler(object sender, EC_PERSONAS_DIARIO_UpdateRowChangeEvent e);
        
        public delegate void EC_INCIDENCIASRowChangeEventHandler(object sender, EC_INCIDENCIASRowChangeEvent e);
        
        public delegate void EC_PERSONAS_DIARIORowChangeEventHandler(object sender, EC_PERSONAS_DIARIORowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_TIPO_INCIDENCIASDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_ID;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_NOMBRE;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_ABR;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_BORRADO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASDataTable() {
                this.TableName = "EC_TIPO_INCIDENCIAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_INCIDENCIASDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_TIPO_INCIDENCIASDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_IDColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_NOMBREColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_ABRColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_ABR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_BORRADOColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_BORRADO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRow this[int index] {
                get {
                    return ((EC_TIPO_INCIDENCIASRow)(this.Rows[index]));
                }
            }
            
            public event EC_TIPO_INCIDENCIASRowChangeEventHandler EC_TIPO_INCIDENCIASRowChanging;
            
            public event EC_TIPO_INCIDENCIASRowChangeEventHandler EC_TIPO_INCIDENCIASRowChanged;
            
            public event EC_TIPO_INCIDENCIASRowChangeEventHandler EC_TIPO_INCIDENCIASRowDeleting;
            
            public event EC_TIPO_INCIDENCIASRowChangeEventHandler EC_TIPO_INCIDENCIASRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_TIPO_INCIDENCIASRow(EC_TIPO_INCIDENCIASRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRow AddEC_TIPO_INCIDENCIASRow(decimal TIPO_INCIDENCIA_ID, string TIPO_INCIDENCIA_NOMBRE, string TIPO_INCIDENCIA_ABR, decimal TIPO_INCIDENCIA_BORRADO) {
                EC_TIPO_INCIDENCIASRow rowEC_TIPO_INCIDENCIASRow = ((EC_TIPO_INCIDENCIASRow)(this.NewRow()));
                rowEC_TIPO_INCIDENCIASRow.ItemArray = new object[] {
                        TIPO_INCIDENCIA_ID,
                        TIPO_INCIDENCIA_NOMBRE,
                        TIPO_INCIDENCIA_ABR,
                        TIPO_INCIDENCIA_BORRADO};
                this.Rows.Add(rowEC_TIPO_INCIDENCIASRow);
                return rowEC_TIPO_INCIDENCIASRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRow FindByTIPO_INCIDENCIA_ID(decimal TIPO_INCIDENCIA_ID) {
                return ((EC_TIPO_INCIDENCIASRow)(this.Rows.Find(new object[] {
                            TIPO_INCIDENCIA_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_TIPO_INCIDENCIASDataTable cln = ((EC_TIPO_INCIDENCIASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_TIPO_INCIDENCIASDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTIPO_INCIDENCIA_ID = base.Columns["TIPO_INCIDENCIA_ID"];
                this.columnTIPO_INCIDENCIA_NOMBRE = base.Columns["TIPO_INCIDENCIA_NOMBRE"];
                this.columnTIPO_INCIDENCIA_ABR = base.Columns["TIPO_INCIDENCIA_ABR"];
                this.columnTIPO_INCIDENCIA_BORRADO = base.Columns["TIPO_INCIDENCIA_BORRADO"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTIPO_INCIDENCIA_ID = new System.Data.DataColumn("TIPO_INCIDENCIA_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_ID);
                this.columnTIPO_INCIDENCIA_NOMBRE = new System.Data.DataColumn("TIPO_INCIDENCIA_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_NOMBRE);
                this.columnTIPO_INCIDENCIA_ABR = new System.Data.DataColumn("TIPO_INCIDENCIA_ABR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_ABR);
                this.columnTIPO_INCIDENCIA_BORRADO = new System.Data.DataColumn("TIPO_INCIDENCIA_BORRADO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_BORRADO);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTIPO_INCIDENCIA_ID}, true));
                this.columnTIPO_INCIDENCIA_ID.AllowDBNull = false;
                this.columnTIPO_INCIDENCIA_ID.Unique = true;
                this.columnTIPO_INCIDENCIA_NOMBRE.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRow NewEC_TIPO_INCIDENCIASRow() {
                return ((EC_TIPO_INCIDENCIASRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_TIPO_INCIDENCIASRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_TIPO_INCIDENCIASRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_TIPO_INCIDENCIASRowChanged != null)) {
                    this.EC_TIPO_INCIDENCIASRowChanged(this, new EC_TIPO_INCIDENCIASRowChangeEvent(((EC_TIPO_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_TIPO_INCIDENCIASRowChanging != null)) {
                    this.EC_TIPO_INCIDENCIASRowChanging(this, new EC_TIPO_INCIDENCIASRowChangeEvent(((EC_TIPO_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_TIPO_INCIDENCIASRowDeleted != null)) {
                    this.EC_TIPO_INCIDENCIASRowDeleted(this, new EC_TIPO_INCIDENCIASRowChangeEvent(((EC_TIPO_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_TIPO_INCIDENCIASRowDeleting != null)) {
                    this.EC_TIPO_INCIDENCIASRowDeleting(this, new EC_TIPO_INCIDENCIASRowChangeEvent(((EC_TIPO_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_TIPO_INCIDENCIASRow(EC_TIPO_INCIDENCIASRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_Inasistencias ds = new DS_Inasistencias();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_TIPO_INCIDENCIASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DIARIO_UpdateDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPERSONA_DIARIO_ID;
            
            private System.Data.DataColumn columnPERSONA_ID;
            
            private System.Data.DataColumn columnPERSONA_DIARIO_FECHA;
            
            private System.Data.DataColumn columnINCIDENCIA_ID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_UpdateDataTable() {
                this.TableName = "EC_PERSONAS_DIARIO_Update";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DIARIO_UpdateDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DIARIO_UpdateDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_DIARIO_IDColumn {
                get {
                    return this.columnPERSONA_DIARIO_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_IDColumn {
                get {
                    return this.columnPERSONA_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_DIARIO_FECHAColumn {
                get {
                    return this.columnPERSONA_DIARIO_FECHA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INCIDENCIA_IDColumn {
                get {
                    return this.columnINCIDENCIA_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_UpdateRow this[int index] {
                get {
                    return ((EC_PERSONAS_DIARIO_UpdateRow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DIARIO_UpdateRowChangeEventHandler EC_PERSONAS_DIARIO_UpdateRowChanging;
            
            public event EC_PERSONAS_DIARIO_UpdateRowChangeEventHandler EC_PERSONAS_DIARIO_UpdateRowChanged;
            
            public event EC_PERSONAS_DIARIO_UpdateRowChangeEventHandler EC_PERSONAS_DIARIO_UpdateRowDeleting;
            
            public event EC_PERSONAS_DIARIO_UpdateRowChangeEventHandler EC_PERSONAS_DIARIO_UpdateRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DIARIO_UpdateRow(EC_PERSONAS_DIARIO_UpdateRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_UpdateRow AddEC_PERSONAS_DIARIO_UpdateRow(decimal PERSONA_DIARIO_ID, decimal PERSONA_ID, System.DateTime PERSONA_DIARIO_FECHA, decimal INCIDENCIA_ID) {
                EC_PERSONAS_DIARIO_UpdateRow rowEC_PERSONAS_DIARIO_UpdateRow = ((EC_PERSONAS_DIARIO_UpdateRow)(this.NewRow()));
                rowEC_PERSONAS_DIARIO_UpdateRow.ItemArray = new object[] {
                        PERSONA_DIARIO_ID,
                        PERSONA_ID,
                        PERSONA_DIARIO_FECHA,
                        INCIDENCIA_ID};
                this.Rows.Add(rowEC_PERSONAS_DIARIO_UpdateRow);
                return rowEC_PERSONAS_DIARIO_UpdateRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_UpdateRow FindByPERSONA_DIARIO_ID(decimal PERSONA_DIARIO_ID) {
                return ((EC_PERSONAS_DIARIO_UpdateRow)(this.Rows.Find(new object[] {
                            PERSONA_DIARIO_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DIARIO_UpdateDataTable cln = ((EC_PERSONAS_DIARIO_UpdateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DIARIO_UpdateDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPERSONA_DIARIO_ID = base.Columns["PERSONA_DIARIO_ID"];
                this.columnPERSONA_ID = base.Columns["PERSONA_ID"];
                this.columnPERSONA_DIARIO_FECHA = base.Columns["PERSONA_DIARIO_FECHA"];
                this.columnINCIDENCIA_ID = base.Columns["INCIDENCIA_ID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPERSONA_DIARIO_ID = new System.Data.DataColumn("PERSONA_DIARIO_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_DIARIO_ID);
                this.columnPERSONA_ID = new System.Data.DataColumn("PERSONA_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_ID);
                this.columnPERSONA_DIARIO_FECHA = new System.Data.DataColumn("PERSONA_DIARIO_FECHA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_DIARIO_FECHA);
                this.columnINCIDENCIA_ID = new System.Data.DataColumn("INCIDENCIA_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCIDENCIA_ID);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnPERSONA_DIARIO_ID}, true));
                this.columnPERSONA_DIARIO_ID.AllowDBNull = false;
                this.columnPERSONA_DIARIO_ID.Unique = true;
                this.columnPERSONA_ID.AllowDBNull = false;
                this.columnPERSONA_DIARIO_FECHA.AllowDBNull = false;
                this.columnINCIDENCIA_ID.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_UpdateRow NewEC_PERSONAS_DIARIO_UpdateRow() {
                return ((EC_PERSONAS_DIARIO_UpdateRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DIARIO_UpdateRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DIARIO_UpdateRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DIARIO_UpdateRowChanged != null)) {
                    this.EC_PERSONAS_DIARIO_UpdateRowChanged(this, new EC_PERSONAS_DIARIO_UpdateRowChangeEvent(((EC_PERSONAS_DIARIO_UpdateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DIARIO_UpdateRowChanging != null)) {
                    this.EC_PERSONAS_DIARIO_UpdateRowChanging(this, new EC_PERSONAS_DIARIO_UpdateRowChangeEvent(((EC_PERSONAS_DIARIO_UpdateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DIARIO_UpdateRowDeleted != null)) {
                    this.EC_PERSONAS_DIARIO_UpdateRowDeleted(this, new EC_PERSONAS_DIARIO_UpdateRowChangeEvent(((EC_PERSONAS_DIARIO_UpdateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DIARIO_UpdateRowDeleting != null)) {
                    this.EC_PERSONAS_DIARIO_UpdateRowDeleting(this, new EC_PERSONAS_DIARIO_UpdateRowChangeEvent(((EC_PERSONAS_DIARIO_UpdateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DIARIO_UpdateRow(EC_PERSONAS_DIARIO_UpdateRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_Inasistencias ds = new DS_Inasistencias();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DIARIO_UpdateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_INCIDENCIASDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnINCIDENCIA_ID;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_ID;
            
            private System.Data.DataColumn columnINCIDENCIA_COMENTARIO;
            
            private System.Data.DataColumn columnSESION_ID;
            
            private System.Data.DataColumn columnINCIDENCIA_FECHAHORA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_INCIDENCIASDataTable() {
                this.TableName = "EC_INCIDENCIAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_INCIDENCIASDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_INCIDENCIASDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INCIDENCIA_IDColumn {
                get {
                    return this.columnINCIDENCIA_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_IDColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INCIDENCIA_COMENTARIOColumn {
                get {
                    return this.columnINCIDENCIA_COMENTARIO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SESION_IDColumn {
                get {
                    return this.columnSESION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INCIDENCIA_FECHAHORAColumn {
                get {
                    return this.columnINCIDENCIA_FECHAHORA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_INCIDENCIASRow this[int index] {
                get {
                    return ((EC_INCIDENCIASRow)(this.Rows[index]));
                }
            }
            
            public event EC_INCIDENCIASRowChangeEventHandler EC_INCIDENCIASRowChanging;
            
            public event EC_INCIDENCIASRowChangeEventHandler EC_INCIDENCIASRowChanged;
            
            public event EC_INCIDENCIASRowChangeEventHandler EC_INCIDENCIASRowDeleting;
            
            public event EC_INCIDENCIASRowChangeEventHandler EC_INCIDENCIASRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_INCIDENCIASRow(EC_INCIDENCIASRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_INCIDENCIASRow AddEC_INCIDENCIASRow(decimal INCIDENCIA_ID, decimal TIPO_INCIDENCIA_ID, string INCIDENCIA_COMENTARIO, decimal SESION_ID, System.DateTime INCIDENCIA_FECHAHORA) {
                EC_INCIDENCIASRow rowEC_INCIDENCIASRow = ((EC_INCIDENCIASRow)(this.NewRow()));
                rowEC_INCIDENCIASRow.ItemArray = new object[] {
                        INCIDENCIA_ID,
                        TIPO_INCIDENCIA_ID,
                        INCIDENCIA_COMENTARIO,
                        SESION_ID,
                        INCIDENCIA_FECHAHORA};
                this.Rows.Add(rowEC_INCIDENCIASRow);
                return rowEC_INCIDENCIASRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_INCIDENCIASRow FindByINCIDENCIA_ID(decimal INCIDENCIA_ID) {
                return ((EC_INCIDENCIASRow)(this.Rows.Find(new object[] {
                            INCIDENCIA_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_INCIDENCIASDataTable cln = ((EC_INCIDENCIASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_INCIDENCIASDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnINCIDENCIA_ID = base.Columns["INCIDENCIA_ID"];
                this.columnTIPO_INCIDENCIA_ID = base.Columns["TIPO_INCIDENCIA_ID"];
                this.columnINCIDENCIA_COMENTARIO = base.Columns["INCIDENCIA_COMENTARIO"];
                this.columnSESION_ID = base.Columns["SESION_ID"];
                this.columnINCIDENCIA_FECHAHORA = base.Columns["INCIDENCIA_FECHAHORA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnINCIDENCIA_ID = new System.Data.DataColumn("INCIDENCIA_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCIDENCIA_ID);
                this.columnTIPO_INCIDENCIA_ID = new System.Data.DataColumn("TIPO_INCIDENCIA_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_ID);
                this.columnINCIDENCIA_COMENTARIO = new System.Data.DataColumn("INCIDENCIA_COMENTARIO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCIDENCIA_COMENTARIO);
                this.columnSESION_ID = new System.Data.DataColumn("SESION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESION_ID);
                this.columnINCIDENCIA_FECHAHORA = new System.Data.DataColumn("INCIDENCIA_FECHAHORA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCIDENCIA_FECHAHORA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnINCIDENCIA_ID}, true));
                this.columnINCIDENCIA_ID.AllowDBNull = false;
                this.columnINCIDENCIA_ID.Unique = true;
                this.columnTIPO_INCIDENCIA_ID.AllowDBNull = false;
                this.columnSESION_ID.AllowDBNull = false;
                this.columnINCIDENCIA_FECHAHORA.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_INCIDENCIASRow NewEC_INCIDENCIASRow() {
                return ((EC_INCIDENCIASRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_INCIDENCIASRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_INCIDENCIASRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_INCIDENCIASRowChanged != null)) {
                    this.EC_INCIDENCIASRowChanged(this, new EC_INCIDENCIASRowChangeEvent(((EC_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_INCIDENCIASRowChanging != null)) {
                    this.EC_INCIDENCIASRowChanging(this, new EC_INCIDENCIASRowChangeEvent(((EC_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_INCIDENCIASRowDeleted != null)) {
                    this.EC_INCIDENCIASRowDeleted(this, new EC_INCIDENCIASRowChangeEvent(((EC_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_INCIDENCIASRowDeleting != null)) {
                    this.EC_INCIDENCIASRowDeleting(this, new EC_INCIDENCIASRowChangeEvent(((EC_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_INCIDENCIASRow(EC_INCIDENCIASRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_Inasistencias ds = new DS_Inasistencias();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_INCIDENCIASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DIARIODataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSUSCRIPCION_NOMBRE;
            
            private System.Data.DataColumn columnPERSONA_LINK_ID;
            
            private System.Data.DataColumn columnPERSONA_NOMBRE;
            
            private System.Data.DataColumn columnPERSONA_DIARIO_FECHA;
            
            private System.Data.DataColumn columnACCESO_E;
            
            private System.Data.DataColumn columnACCESO_S;
            
            private System.Data.DataColumn columnPERSONA_DIARIO_TT;
            
            private System.Data.DataColumn columnPERSONA_DIARIO_TDE;
            
            private System.Data.DataColumn columnTIPO_INC_SIS_NOMBRE;
            
            private System.Data.DataColumn columnINCIDENCIA_ID;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_NOMBRE;
            
            private System.Data.DataColumn columnINCIDENCIA_COMENTARIO;
            
            private System.Data.DataColumn columnACCESO_ID;
            
            private System.Data.DataColumn columnSUSCRIPCION_ID;
            
            private System.Data.DataColumn columnPERSONA_DIARIO_ID;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_ID;
            
            private System.Data.DataColumn columnTIPO_INC_SIS_ID;
            
            private System.Data.DataColumn columnACCESO_ID1;
            
            private System.Data.DataColumn columnPERSONA_ID;
            
            private System.Data.DataColumn columnJustifica;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIODataTable() {
                this.TableName = "EC_PERSONAS_DIARIO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DIARIODataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DIARIODataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUSCRIPCION_NOMBREColumn {
                get {
                    return this.columnSUSCRIPCION_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_LINK_IDColumn {
                get {
                    return this.columnPERSONA_LINK_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_NOMBREColumn {
                get {
                    return this.columnPERSONA_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_DIARIO_FECHAColumn {
                get {
                    return this.columnPERSONA_DIARIO_FECHA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCESO_EColumn {
                get {
                    return this.columnACCESO_E;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCESO_SColumn {
                get {
                    return this.columnACCESO_S;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_DIARIO_TTColumn {
                get {
                    return this.columnPERSONA_DIARIO_TT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_DIARIO_TDEColumn {
                get {
                    return this.columnPERSONA_DIARIO_TDE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INC_SIS_NOMBREColumn {
                get {
                    return this.columnTIPO_INC_SIS_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INCIDENCIA_IDColumn {
                get {
                    return this.columnINCIDENCIA_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_NOMBREColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INCIDENCIA_COMENTARIOColumn {
                get {
                    return this.columnINCIDENCIA_COMENTARIO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCESO_IDColumn {
                get {
                    return this.columnACCESO_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUSCRIPCION_IDColumn {
                get {
                    return this.columnSUSCRIPCION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_DIARIO_IDColumn {
                get {
                    return this.columnPERSONA_DIARIO_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_IDColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INC_SIS_IDColumn {
                get {
                    return this.columnTIPO_INC_SIS_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCESO_ID1Column {
                get {
                    return this.columnACCESO_ID1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSONA_IDColumn {
                get {
                    return this.columnPERSONA_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JustificaColumn {
                get {
                    return this.columnJustifica;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIORow this[int index] {
                get {
                    return ((EC_PERSONAS_DIARIORow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DIARIORowChangeEventHandler EC_PERSONAS_DIARIORowChanging;
            
            public event EC_PERSONAS_DIARIORowChangeEventHandler EC_PERSONAS_DIARIORowChanged;
            
            public event EC_PERSONAS_DIARIORowChangeEventHandler EC_PERSONAS_DIARIORowDeleting;
            
            public event EC_PERSONAS_DIARIORowChangeEventHandler EC_PERSONAS_DIARIORowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DIARIORow(EC_PERSONAS_DIARIORow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIORow AddEC_PERSONAS_DIARIORow(
                        string SUSCRIPCION_NOMBRE, 
                        decimal PERSONA_LINK_ID, 
                        string PERSONA_NOMBRE, 
                        System.DateTime PERSONA_DIARIO_FECHA, 
                        System.DateTime ACCESO_E, 
                        System.DateTime ACCESO_S, 
                        System.DateTime PERSONA_DIARIO_TT, 
                        System.DateTime PERSONA_DIARIO_TDE, 
                        string TIPO_INC_SIS_NOMBRE, 
                        decimal INCIDENCIA_ID, 
                        string TIPO_INCIDENCIA_NOMBRE, 
                        string INCIDENCIA_COMENTARIO, 
                        decimal ACCESO_ID, 
                        decimal SUSCRIPCION_ID, 
                        decimal PERSONA_DIARIO_ID, 
                        decimal TIPO_INCIDENCIA_ID, 
                        decimal TIPO_INC_SIS_ID, 
                        decimal ACCESO_ID1, 
                        decimal PERSONA_ID, 
                        bool Justifica) {
                EC_PERSONAS_DIARIORow rowEC_PERSONAS_DIARIORow = ((EC_PERSONAS_DIARIORow)(this.NewRow()));
                rowEC_PERSONAS_DIARIORow.ItemArray = new object[] {
                        SUSCRIPCION_NOMBRE,
                        PERSONA_LINK_ID,
                        PERSONA_NOMBRE,
                        PERSONA_DIARIO_FECHA,
                        ACCESO_E,
                        ACCESO_S,
                        PERSONA_DIARIO_TT,
                        PERSONA_DIARIO_TDE,
                        TIPO_INC_SIS_NOMBRE,
                        INCIDENCIA_ID,
                        TIPO_INCIDENCIA_NOMBRE,
                        INCIDENCIA_COMENTARIO,
                        ACCESO_ID,
                        SUSCRIPCION_ID,
                        PERSONA_DIARIO_ID,
                        TIPO_INCIDENCIA_ID,
                        TIPO_INC_SIS_ID,
                        ACCESO_ID1,
                        PERSONA_ID,
                        Justifica};
                this.Rows.Add(rowEC_PERSONAS_DIARIORow);
                return rowEC_PERSONAS_DIARIORow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DIARIODataTable cln = ((EC_PERSONAS_DIARIODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DIARIODataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSUSCRIPCION_NOMBRE = base.Columns["SUSCRIPCION_NOMBRE"];
                this.columnPERSONA_LINK_ID = base.Columns["PERSONA_LINK_ID"];
                this.columnPERSONA_NOMBRE = base.Columns["PERSONA_NOMBRE"];
                this.columnPERSONA_DIARIO_FECHA = base.Columns["PERSONA_DIARIO_FECHA"];
                this.columnACCESO_E = base.Columns["ACCESO_E"];
                this.columnACCESO_S = base.Columns["ACCESO_S"];
                this.columnPERSONA_DIARIO_TT = base.Columns["PERSONA_DIARIO_TT"];
                this.columnPERSONA_DIARIO_TDE = base.Columns["PERSONA_DIARIO_TDE"];
                this.columnTIPO_INC_SIS_NOMBRE = base.Columns["TIPO_INC_SIS_NOMBRE"];
                this.columnINCIDENCIA_ID = base.Columns["INCIDENCIA_ID"];
                this.columnTIPO_INCIDENCIA_NOMBRE = base.Columns["TIPO_INCIDENCIA_NOMBRE"];
                this.columnINCIDENCIA_COMENTARIO = base.Columns["INCIDENCIA_COMENTARIO"];
                this.columnACCESO_ID = base.Columns["ACCESO_ID"];
                this.columnSUSCRIPCION_ID = base.Columns["SUSCRIPCION_ID"];
                this.columnPERSONA_DIARIO_ID = base.Columns["PERSONA_DIARIO_ID"];
                this.columnTIPO_INCIDENCIA_ID = base.Columns["TIPO_INCIDENCIA_ID"];
                this.columnTIPO_INC_SIS_ID = base.Columns["TIPO_INC_SIS_ID"];
                this.columnACCESO_ID1 = base.Columns["ACCESO_ID1"];
                this.columnPERSONA_ID = base.Columns["PERSONA_ID"];
                this.columnJustifica = base.Columns["Justifica"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSUSCRIPCION_NOMBRE = new System.Data.DataColumn("SUSCRIPCION_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUSCRIPCION_NOMBRE);
                this.columnPERSONA_LINK_ID = new System.Data.DataColumn("PERSONA_LINK_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_LINK_ID);
                this.columnPERSONA_NOMBRE = new System.Data.DataColumn("PERSONA_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_NOMBRE);
                this.columnPERSONA_DIARIO_FECHA = new System.Data.DataColumn("PERSONA_DIARIO_FECHA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_DIARIO_FECHA);
                this.columnACCESO_E = new System.Data.DataColumn("ACCESO_E", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESO_E);
                this.columnACCESO_S = new System.Data.DataColumn("ACCESO_S", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESO_S);
                this.columnPERSONA_DIARIO_TT = new System.Data.DataColumn("PERSONA_DIARIO_TT", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_DIARIO_TT);
                this.columnPERSONA_DIARIO_TDE = new System.Data.DataColumn("PERSONA_DIARIO_TDE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_DIARIO_TDE);
                this.columnTIPO_INC_SIS_NOMBRE = new System.Data.DataColumn("TIPO_INC_SIS_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INC_SIS_NOMBRE);
                this.columnINCIDENCIA_ID = new System.Data.DataColumn("INCIDENCIA_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCIDENCIA_ID);
                this.columnTIPO_INCIDENCIA_NOMBRE = new System.Data.DataColumn("TIPO_INCIDENCIA_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_NOMBRE);
                this.columnINCIDENCIA_COMENTARIO = new System.Data.DataColumn("INCIDENCIA_COMENTARIO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCIDENCIA_COMENTARIO);
                this.columnACCESO_ID = new System.Data.DataColumn("ACCESO_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESO_ID);
                this.columnSUSCRIPCION_ID = new System.Data.DataColumn("SUSCRIPCION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUSCRIPCION_ID);
                this.columnPERSONA_DIARIO_ID = new System.Data.DataColumn("PERSONA_DIARIO_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_DIARIO_ID);
                this.columnTIPO_INCIDENCIA_ID = new System.Data.DataColumn("TIPO_INCIDENCIA_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_ID);
                this.columnTIPO_INC_SIS_ID = new System.Data.DataColumn("TIPO_INC_SIS_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INC_SIS_ID);
                this.columnACCESO_ID1 = new System.Data.DataColumn("ACCESO_ID1", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESO_ID1);
                this.columnPERSONA_ID = new System.Data.DataColumn("PERSONA_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONA_ID);
                this.columnJustifica = new System.Data.DataColumn("Justifica", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJustifica);
                this.columnPERSONA_LINK_ID.AllowDBNull = false;
                this.columnPERSONA_DIARIO_FECHA.AllowDBNull = false;
                this.columnTIPO_INC_SIS_NOMBRE.AllowDBNull = false;
                this.columnINCIDENCIA_ID.AllowDBNull = false;
                this.columnTIPO_INCIDENCIA_NOMBRE.AllowDBNull = false;
                this.columnACCESO_ID.AllowDBNull = false;
                this.columnSUSCRIPCION_ID.AllowDBNull = false;
                this.columnPERSONA_DIARIO_ID.AllowDBNull = false;
                this.columnTIPO_INCIDENCIA_ID.AllowDBNull = false;
                this.columnTIPO_INC_SIS_ID.AllowDBNull = false;
                this.columnACCESO_ID1.AllowDBNull = false;
                this.columnPERSONA_ID.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIORow NewEC_PERSONAS_DIARIORow() {
                return ((EC_PERSONAS_DIARIORow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DIARIORow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DIARIORow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DIARIORowChanged != null)) {
                    this.EC_PERSONAS_DIARIORowChanged(this, new EC_PERSONAS_DIARIORowChangeEvent(((EC_PERSONAS_DIARIORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DIARIORowChanging != null)) {
                    this.EC_PERSONAS_DIARIORowChanging(this, new EC_PERSONAS_DIARIORowChangeEvent(((EC_PERSONAS_DIARIORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DIARIORowDeleted != null)) {
                    this.EC_PERSONAS_DIARIORowDeleted(this, new EC_PERSONAS_DIARIORowChangeEvent(((EC_PERSONAS_DIARIORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DIARIORowDeleting != null)) {
                    this.EC_PERSONAS_DIARIORowDeleting(this, new EC_PERSONAS_DIARIORowChangeEvent(((EC_PERSONAS_DIARIORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DIARIORow(EC_PERSONAS_DIARIORow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_Inasistencias ds = new DS_Inasistencias();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DIARIODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_TIPO_INCIDENCIASRow : System.Data.DataRow {
            
            private EC_TIPO_INCIDENCIASDataTable tableEC_TIPO_INCIDENCIAS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_INCIDENCIASRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_TIPO_INCIDENCIAS = ((EC_TIPO_INCIDENCIASDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_INCIDENCIA_ID {
                get {
                    return ((decimal)(this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_IDColumn]));
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INCIDENCIA_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INCIDENCIA_ABR {
                get {
                    try {
                        return ((string)(this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_ABRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TIPO_INCIDENCIA_ABR\' de la tabla \'EC_TIPO_INCIDENCIAS\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_ABRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_INCIDENCIA_BORRADO {
                get {
                    try {
                        return ((decimal)(this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_BORRADOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TIPO_INCIDENCIA_BORRADO\' de la tabla \'EC_TIPO_INCIDENCIA" +
                                "S\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_BORRADOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_INCIDENCIA_ABRNull() {
                return this.IsNull(this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_ABRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_INCIDENCIA_ABRNull() {
                this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_ABRColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_INCIDENCIA_BORRADONull() {
                return this.IsNull(this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_BORRADOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_INCIDENCIA_BORRADONull() {
                this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_BORRADOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DIARIO_UpdateRow : System.Data.DataRow {
            
            private EC_PERSONAS_DIARIO_UpdateDataTable tableEC_PERSONAS_DIARIO_Update;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DIARIO_UpdateRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DIARIO_Update = ((EC_PERSONAS_DIARIO_UpdateDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PERSONA_DIARIO_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO_Update.PERSONA_DIARIO_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO_Update.PERSONA_DIARIO_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PERSONA_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO_Update.PERSONA_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO_Update.PERSONA_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PERSONA_DIARIO_FECHA {
                get {
                    return ((System.DateTime)(this[this.tableEC_PERSONAS_DIARIO_Update.PERSONA_DIARIO_FECHAColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO_Update.PERSONA_DIARIO_FECHAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal INCIDENCIA_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO_Update.INCIDENCIA_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO_Update.INCIDENCIA_IDColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_INCIDENCIASRow : System.Data.DataRow {
            
            private EC_INCIDENCIASDataTable tableEC_INCIDENCIAS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_INCIDENCIASRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_INCIDENCIAS = ((EC_INCIDENCIASDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal INCIDENCIA_ID {
                get {
                    return ((decimal)(this[this.tableEC_INCIDENCIAS.INCIDENCIA_IDColumn]));
                }
                set {
                    this[this.tableEC_INCIDENCIAS.INCIDENCIA_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_INCIDENCIA_ID {
                get {
                    return ((decimal)(this[this.tableEC_INCIDENCIAS.TIPO_INCIDENCIA_IDColumn]));
                }
                set {
                    this[this.tableEC_INCIDENCIAS.TIPO_INCIDENCIA_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INCIDENCIA_COMENTARIO {
                get {
                    try {
                        return ((string)(this[this.tableEC_INCIDENCIAS.INCIDENCIA_COMENTARIOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'INCIDENCIA_COMENTARIO\' de la tabla \'EC_INCIDENCIAS\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableEC_INCIDENCIAS.INCIDENCIA_COMENTARIOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SESION_ID {
                get {
                    return ((decimal)(this[this.tableEC_INCIDENCIAS.SESION_IDColumn]));
                }
                set {
                    this[this.tableEC_INCIDENCIAS.SESION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime INCIDENCIA_FECHAHORA {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEC_INCIDENCIAS.INCIDENCIA_FECHAHORAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'INCIDENCIA_FECHAHORA\' de la tabla \'EC_INCIDENCIAS\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableEC_INCIDENCIAS.INCIDENCIA_FECHAHORAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINCIDENCIA_COMENTARIONull() {
                return this.IsNull(this.tableEC_INCIDENCIAS.INCIDENCIA_COMENTARIOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINCIDENCIA_COMENTARIONull() {
                this[this.tableEC_INCIDENCIAS.INCIDENCIA_COMENTARIOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINCIDENCIA_FECHAHORANull() {
                return this.IsNull(this.tableEC_INCIDENCIAS.INCIDENCIA_FECHAHORAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINCIDENCIA_FECHAHORANull() {
                this[this.tableEC_INCIDENCIAS.INCIDENCIA_FECHAHORAColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DIARIORow : System.Data.DataRow {
            
            private EC_PERSONAS_DIARIODataTable tableEC_PERSONAS_DIARIO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DIARIORow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DIARIO = ((EC_PERSONAS_DIARIODataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUSCRIPCION_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO.SUSCRIPCION_NOMBREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'SUSCRIPCION_NOMBRE\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.SUSCRIPCION_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PERSONA_LINK_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO.PERSONA_LINK_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.PERSONA_LINK_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERSONA_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO.PERSONA_NOMBREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'PERSONA_NOMBRE\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.PERSONA_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PERSONA_DIARIO_FECHA {
                get {
                    return ((System.DateTime)(this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_FECHAColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_FECHAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ACCESO_E {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEC_PERSONAS_DIARIO.ACCESO_EColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'ACCESO_E\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.ACCESO_EColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ACCESO_S {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEC_PERSONAS_DIARIO.ACCESO_SColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'ACCESO_S\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.ACCESO_SColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PERSONA_DIARIO_TT {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_TTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'PERSONA_DIARIO_TT\' de la tabla \'EC_PERSONAS_DIARIO\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_TTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PERSONA_DIARIO_TDE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_TDEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'PERSONA_DIARIO_TDE\' de la tabla \'EC_PERSONAS_DIARIO\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_TDEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INC_SIS_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_PERSONAS_DIARIO.TIPO_INC_SIS_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.TIPO_INC_SIS_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal INCIDENCIA_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO.INCIDENCIA_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.INCIDENCIA_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INCIDENCIA_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_PERSONAS_DIARIO.TIPO_INCIDENCIA_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.TIPO_INCIDENCIA_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INCIDENCIA_COMENTARIO {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DIARIO.INCIDENCIA_COMENTARIOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'INCIDENCIA_COMENTARIO\' de la tabla \'EC_PERSONAS_DIARIO\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.INCIDENCIA_COMENTARIOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ACCESO_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO.ACCESO_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.ACCESO_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUSCRIPCION_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO.SUSCRIPCION_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.SUSCRIPCION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PERSONA_DIARIO_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_INCIDENCIA_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO.TIPO_INCIDENCIA_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.TIPO_INCIDENCIA_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_INC_SIS_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO.TIPO_INC_SIS_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.TIPO_INC_SIS_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ACCESO_ID1 {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO.ACCESO_ID1Column]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.ACCESO_ID1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PERSONA_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DIARIO.PERSONA_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.PERSONA_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Justifica {
                get {
                    try {
                        return ((bool)(this[this.tableEC_PERSONAS_DIARIO.JustificaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'Justifica\' de la tabla \'EC_PERSONAS_DIARIO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DIARIO.JustificaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUSCRIPCION_NOMBRENull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.SUSCRIPCION_NOMBREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUSCRIPCION_NOMBRENull() {
                this[this.tableEC_PERSONAS_DIARIO.SUSCRIPCION_NOMBREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPERSONA_NOMBRENull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.PERSONA_NOMBREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPERSONA_NOMBRENull() {
                this[this.tableEC_PERSONAS_DIARIO.PERSONA_NOMBREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCESO_ENull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.ACCESO_EColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCESO_ENull() {
                this[this.tableEC_PERSONAS_DIARIO.ACCESO_EColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCESO_SNull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.ACCESO_SColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCESO_SNull() {
                this[this.tableEC_PERSONAS_DIARIO.ACCESO_SColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPERSONA_DIARIO_TTNull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_TTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPERSONA_DIARIO_TTNull() {
                this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_TTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPERSONA_DIARIO_TDENull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_TDEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPERSONA_DIARIO_TDENull() {
                this[this.tableEC_PERSONAS_DIARIO.PERSONA_DIARIO_TDEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINCIDENCIA_COMENTARIONull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.INCIDENCIA_COMENTARIOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINCIDENCIA_COMENTARIONull() {
                this[this.tableEC_PERSONAS_DIARIO.INCIDENCIA_COMENTARIOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJustificaNull() {
                return this.IsNull(this.tableEC_PERSONAS_DIARIO.JustificaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJustificaNull() {
                this[this.tableEC_PERSONAS_DIARIO.JustificaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_TIPO_INCIDENCIASRowChangeEvent : System.EventArgs {
            
            private EC_TIPO_INCIDENCIASRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRowChangeEvent(EC_TIPO_INCIDENCIASRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DIARIO_UpdateRowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DIARIO_UpdateRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_UpdateRowChangeEvent(EC_PERSONAS_DIARIO_UpdateRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIO_UpdateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_INCIDENCIASRowChangeEvent : System.EventArgs {
            
            private EC_INCIDENCIASRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_INCIDENCIASRowChangeEvent(EC_INCIDENCIASRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_INCIDENCIASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DIARIORowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DIARIORow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIORowChangeEvent(EC_PERSONAS_DIARIORow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DIARIORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591