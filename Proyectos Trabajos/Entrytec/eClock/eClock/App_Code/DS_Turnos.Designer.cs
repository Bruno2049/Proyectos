//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.42
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eClock {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DS_Turnos")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_Turnos : System.Data.DataSet {
        
        private EC_TURNOS_EDICIONDataTable tableEC_TURNOS_EDICION;
        
        private EC_TURNOS_DIADataTable tableEC_TURNOS_DIA;
        
        private EC_TIPO_TURNOSDataTable tableEC_TIPO_TURNOS;
        
        private EC_TURNOS_ComboDataTable tableEC_TURNOS_Combo;
        
        private EC_TURNOSDataTable tableEC_TURNOS;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_Turnos() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_Turnos(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["EC_TURNOS_EDICION"] != null)) {
                    base.Tables.Add(new EC_TURNOS_EDICIONDataTable(ds.Tables["EC_TURNOS_EDICION"]));
                }
                if ((ds.Tables["EC_TURNOS_DIA"] != null)) {
                    base.Tables.Add(new EC_TURNOS_DIADataTable(ds.Tables["EC_TURNOS_DIA"]));
                }
                if ((ds.Tables["EC_TIPO_TURNOS"] != null)) {
                    base.Tables.Add(new EC_TIPO_TURNOSDataTable(ds.Tables["EC_TIPO_TURNOS"]));
                }
                if ((ds.Tables["EC_TURNOS_Combo"] != null)) {
                    base.Tables.Add(new EC_TURNOS_ComboDataTable(ds.Tables["EC_TURNOS_Combo"]));
                }
                if ((ds.Tables["EC_TURNOS"] != null)) {
                    base.Tables.Add(new EC_TURNOSDataTable(ds.Tables["EC_TURNOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_TURNOS_EDICIONDataTable EC_TURNOS_EDICION {
            get {
                return this.tableEC_TURNOS_EDICION;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_TURNOS_DIADataTable EC_TURNOS_DIA {
            get {
                return this.tableEC_TURNOS_DIA;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_TIPO_TURNOSDataTable EC_TIPO_TURNOS {
            get {
                return this.tableEC_TIPO_TURNOS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_TURNOS_ComboDataTable EC_TURNOS_Combo {
            get {
                return this.tableEC_TURNOS_Combo;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_TURNOSDataTable EC_TURNOS {
            get {
                return this.tableEC_TURNOS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DS_Turnos cln = ((DS_Turnos)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EC_TURNOS_EDICION"] != null)) {
                    base.Tables.Add(new EC_TURNOS_EDICIONDataTable(ds.Tables["EC_TURNOS_EDICION"]));
                }
                if ((ds.Tables["EC_TURNOS_DIA"] != null)) {
                    base.Tables.Add(new EC_TURNOS_DIADataTable(ds.Tables["EC_TURNOS_DIA"]));
                }
                if ((ds.Tables["EC_TIPO_TURNOS"] != null)) {
                    base.Tables.Add(new EC_TIPO_TURNOSDataTable(ds.Tables["EC_TIPO_TURNOS"]));
                }
                if ((ds.Tables["EC_TURNOS_Combo"] != null)) {
                    base.Tables.Add(new EC_TURNOS_ComboDataTable(ds.Tables["EC_TURNOS_Combo"]));
                }
                if ((ds.Tables["EC_TURNOS"] != null)) {
                    base.Tables.Add(new EC_TURNOSDataTable(ds.Tables["EC_TURNOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableEC_TURNOS_EDICION = ((EC_TURNOS_EDICIONDataTable)(base.Tables["EC_TURNOS_EDICION"]));
            if ((initTable == true)) {
                if ((this.tableEC_TURNOS_EDICION != null)) {
                    this.tableEC_TURNOS_EDICION.InitVars();
                }
            }
            this.tableEC_TURNOS_DIA = ((EC_TURNOS_DIADataTable)(base.Tables["EC_TURNOS_DIA"]));
            if ((initTable == true)) {
                if ((this.tableEC_TURNOS_DIA != null)) {
                    this.tableEC_TURNOS_DIA.InitVars();
                }
            }
            this.tableEC_TIPO_TURNOS = ((EC_TIPO_TURNOSDataTable)(base.Tables["EC_TIPO_TURNOS"]));
            if ((initTable == true)) {
                if ((this.tableEC_TIPO_TURNOS != null)) {
                    this.tableEC_TIPO_TURNOS.InitVars();
                }
            }
            this.tableEC_TURNOS_Combo = ((EC_TURNOS_ComboDataTable)(base.Tables["EC_TURNOS_Combo"]));
            if ((initTable == true)) {
                if ((this.tableEC_TURNOS_Combo != null)) {
                    this.tableEC_TURNOS_Combo.InitVars();
                }
            }
            this.tableEC_TURNOS = ((EC_TURNOSDataTable)(base.Tables["EC_TURNOS"]));
            if ((initTable == true)) {
                if ((this.tableEC_TURNOS != null)) {
                    this.tableEC_TURNOS.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_Turnos";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DS_Turnos.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-MX");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEC_TURNOS_EDICION = new EC_TURNOS_EDICIONDataTable();
            base.Tables.Add(this.tableEC_TURNOS_EDICION);
            this.tableEC_TURNOS_DIA = new EC_TURNOS_DIADataTable();
            base.Tables.Add(this.tableEC_TURNOS_DIA);
            this.tableEC_TIPO_TURNOS = new EC_TIPO_TURNOSDataTable();
            base.Tables.Add(this.tableEC_TIPO_TURNOS);
            this.tableEC_TURNOS_Combo = new EC_TURNOS_ComboDataTable();
            base.Tables.Add(this.tableEC_TURNOS_Combo);
            this.tableEC_TURNOS = new EC_TURNOSDataTable();
            base.Tables.Add(this.tableEC_TURNOS);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_TURNOS_EDICION() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_TURNOS_DIA() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_TIPO_TURNOS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_TURNOS_Combo() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_TURNOS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DS_Turnos ds = new DS_Turnos();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void EC_TURNOS_EDICIONRowChangeEventHandler(object sender, EC_TURNOS_EDICIONRowChangeEvent e);
        
        public delegate void EC_TURNOS_DIARowChangeEventHandler(object sender, EC_TURNOS_DIARowChangeEvent e);
        
        public delegate void EC_TIPO_TURNOSRowChangeEventHandler(object sender, EC_TIPO_TURNOSRowChangeEvent e);
        
        public delegate void EC_TURNOS_ComboRowChangeEventHandler(object sender, EC_TURNOS_ComboRowChangeEvent e);
        
        public delegate void EC_TURNOSRowChangeEventHandler(object sender, EC_TURNOSRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_TURNOS_EDICIONDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTURNO_ID;
            
            private System.Data.DataColumn columnTIPO_TURNO_ID;
            
            private System.Data.DataColumn columnTURNO_NOMBRE;
            
            private System.Data.DataColumn columnTURNO_ASISTENCIA;
            
            private System.Data.DataColumn columnTURNO_BORRADO;

            private System.Data.DataColumn columnTURNO_PHEXTRAS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_EDICIONDataTable() {
                this.TableName = "EC_TURNOS_EDICION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TURNOS_EDICIONDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_TURNOS_EDICIONDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_IDColumn {
                get {
                    return this.columnTURNO_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_TURNO_IDColumn {
                get {
                    return this.columnTIPO_TURNO_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_NOMBREColumn {
                get {
                    return this.columnTURNO_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_ASISTENCIAColumn {
                get {
                    return this.columnTURNO_ASISTENCIA;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_PHEXTRASColumn
            {
                get
                {
                    return this.columnTURNO_PHEXTRAS;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_BORRADOColumn {
                get {
                    return this.columnTURNO_BORRADO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_EDICIONRow this[int index] {
                get {
                    return ((EC_TURNOS_EDICIONRow)(this.Rows[index]));
                }
            }
            
            public event EC_TURNOS_EDICIONRowChangeEventHandler EC_TURNOS_EDICIONRowChanging;
            
            public event EC_TURNOS_EDICIONRowChangeEventHandler EC_TURNOS_EDICIONRowChanged;
            
            public event EC_TURNOS_EDICIONRowChangeEventHandler EC_TURNOS_EDICIONRowDeleting;
            
            public event EC_TURNOS_EDICIONRowChangeEventHandler EC_TURNOS_EDICIONRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_TURNOS_EDICIONRow(EC_TURNOS_EDICIONRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_EDICIONRow AddEC_TURNOS_EDICIONRow(decimal TURNO_ID, decimal TIPO_TURNO_ID, string TURNO_NOMBRE, decimal TURNO_ASISTENCIA, decimal TURNO_BORRADO, decimal TURNO_PHEXTRAS) {
                EC_TURNOS_EDICIONRow rowEC_TURNOS_EDICIONRow = ((EC_TURNOS_EDICIONRow)(this.NewRow()));
                rowEC_TURNOS_EDICIONRow.ItemArray = new object[] {
                        TURNO_ID,
                        TIPO_TURNO_ID,
                        TURNO_NOMBRE,
                        TURNO_ASISTENCIA,
                        TURNO_BORRADO,
                        TURNO_PHEXTRAS};
                this.Rows.Add(rowEC_TURNOS_EDICIONRow);
                return rowEC_TURNOS_EDICIONRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_EDICIONRow FindByTURNO_ID(decimal TURNO_ID) {
                return ((EC_TURNOS_EDICIONRow)(this.Rows.Find(new object[] {
                            TURNO_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_TURNOS_EDICIONDataTable cln = ((EC_TURNOS_EDICIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_TURNOS_EDICIONDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTURNO_ID = base.Columns["TURNO_ID"];
                this.columnTIPO_TURNO_ID = base.Columns["TIPO_TURNO_ID"];
                this.columnTURNO_NOMBRE = base.Columns["TURNO_NOMBRE"];
                this.columnTURNO_ASISTENCIA = base.Columns["TURNO_ASISTENCIA"];
                this.columnTURNO_BORRADO = base.Columns["TURNO_BORRADO"];
                this.columnTURNO_PHEXTRAS = base.Columns["TURNO_PHEXTRAS"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTURNO_ID = new System.Data.DataColumn("TURNO_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_ID);
                this.columnTIPO_TURNO_ID = new System.Data.DataColumn("TIPO_TURNO_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_TURNO_ID);
                this.columnTURNO_NOMBRE = new System.Data.DataColumn("TURNO_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_NOMBRE);
                this.columnTURNO_ASISTENCIA = new System.Data.DataColumn("TURNO_ASISTENCIA", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_ASISTENCIA);
                this.columnTURNO_BORRADO = new System.Data.DataColumn("TURNO_BORRADO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_BORRADO);
                this.columnTURNO_PHEXTRAS = new System.Data.DataColumn("TURNO_PHEXTRAS", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_PHEXTRAS);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTURNO_ID}, true));
                this.columnTURNO_ID.AllowDBNull = false;
                this.columnTURNO_ID.Unique = true;
                this.columnTURNO_NOMBRE.AllowDBNull = false;
                this.columnTURNO_ASISTENCIA.AllowDBNull = false;
                this.columnTURNO_PHEXTRAS.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_EDICIONRow NewEC_TURNOS_EDICIONRow() {
                return ((EC_TURNOS_EDICIONRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_TURNOS_EDICIONRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_TURNOS_EDICIONRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_TURNOS_EDICIONRowChanged != null)) {
                    this.EC_TURNOS_EDICIONRowChanged(this, new EC_TURNOS_EDICIONRowChangeEvent(((EC_TURNOS_EDICIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_TURNOS_EDICIONRowChanging != null)) {
                    this.EC_TURNOS_EDICIONRowChanging(this, new EC_TURNOS_EDICIONRowChangeEvent(((EC_TURNOS_EDICIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_TURNOS_EDICIONRowDeleted != null)) {
                    this.EC_TURNOS_EDICIONRowDeleted(this, new EC_TURNOS_EDICIONRowChangeEvent(((EC_TURNOS_EDICIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_TURNOS_EDICIONRowDeleting != null)) {
                    this.EC_TURNOS_EDICIONRowDeleting(this, new EC_TURNOS_EDICIONRowChangeEvent(((EC_TURNOS_EDICIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_TURNOS_EDICIONRow(EC_TURNOS_EDICIONRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_Turnos ds = new DS_Turnos();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_TURNOS_EDICIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_TURNOS_DIADataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTURNO_DIA_ID;
            
            private System.Data.DataColumn columnDIA_HEMIN;
            
            private System.Data.DataColumn columnDIA_HE;
            
            private System.Data.DataColumn columnDIA_HEMAX;
            
            private System.Data.DataColumn columnDIA_HERETARDO;
            
            private System.Data.DataColumn columnDIA_HS;
            
            private System.Data.DataColumn columnDIA_HSMAX;
            
            private System.Data.DataColumn columnDIA_HAYCOMIDA;
            
            private System.Data.DataColumn columnDIA_HSMIN;
            
            private System.Data.DataColumn columnDIA_HTIEMPO;
            
            private System.Data.DataColumn columnDIA_HCR;
            
            private System.Data.DataColumn columnDIA_HCS;
            
            private System.Data.DataColumn columnDIA_HCTIEMPO;
            
            private System.Data.DataColumn columnDIA_HCTOLERA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_DIADataTable() {
                this.TableName = "EC_TURNOS_DIA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TURNOS_DIADataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_TURNOS_DIADataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_DIA_IDColumn {
                get {
                    return this.columnTURNO_DIA_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HEMINColumn {
                get {
                    return this.columnDIA_HEMIN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HEColumn {
                get {
                    return this.columnDIA_HE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HEMAXColumn {
                get {
                    return this.columnDIA_HEMAX;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HERETARDOColumn {
                get {
                    return this.columnDIA_HERETARDO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HSColumn {
                get {
                    return this.columnDIA_HS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HSMAXColumn {
                get {
                    return this.columnDIA_HSMAX;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HAYCOMIDAColumn {
                get {
                    return this.columnDIA_HAYCOMIDA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HSMINColumn {
                get {
                    return this.columnDIA_HSMIN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HTIEMPOColumn {
                get {
                    return this.columnDIA_HTIEMPO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HCRColumn {
                get {
                    return this.columnDIA_HCR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HCSColumn {
                get {
                    return this.columnDIA_HCS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HCTIEMPOColumn {
                get {
                    return this.columnDIA_HCTIEMPO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIA_HCTOLERAColumn {
                get {
                    return this.columnDIA_HCTOLERA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_DIARow this[int index] {
                get {
                    return ((EC_TURNOS_DIARow)(this.Rows[index]));
                }
            }
            
            public event EC_TURNOS_DIARowChangeEventHandler EC_TURNOS_DIARowChanging;
            
            public event EC_TURNOS_DIARowChangeEventHandler EC_TURNOS_DIARowChanged;
            
            public event EC_TURNOS_DIARowChangeEventHandler EC_TURNOS_DIARowDeleting;
            
            public event EC_TURNOS_DIARowChangeEventHandler EC_TURNOS_DIARowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_TURNOS_DIARow(EC_TURNOS_DIARow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_DIARow AddEC_TURNOS_DIARow(decimal TURNO_DIA_ID, string DIA_HEMIN, string DIA_HE, string DIA_HEMAX, string DIA_HERETARDO, string DIA_HS, string DIA_HSMAX, string DIA_HAYCOMIDA, string DIA_HSMIN, string DIA_HTIEMPO, string DIA_HCR, string DIA_HCS, string DIA_HCTIEMPO, string DIA_HCTOLERA) {
                EC_TURNOS_DIARow rowEC_TURNOS_DIARow = ((EC_TURNOS_DIARow)(this.NewRow()));
                rowEC_TURNOS_DIARow.ItemArray = new object[] {
                        TURNO_DIA_ID,
                        DIA_HEMIN,
                        DIA_HE,
                        DIA_HEMAX,
                        DIA_HERETARDO,
                        DIA_HS,
                        DIA_HSMAX,
                        DIA_HAYCOMIDA,
                        DIA_HSMIN,
                        DIA_HTIEMPO,
                        DIA_HCR,
                        DIA_HCS,
                        DIA_HCTIEMPO,
                        DIA_HCTOLERA};
                this.Rows.Add(rowEC_TURNOS_DIARow);
                return rowEC_TURNOS_DIARow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_DIARow FindByTURNO_DIA_ID(decimal TURNO_DIA_ID) {
                return ((EC_TURNOS_DIARow)(this.Rows.Find(new object[] {
                            TURNO_DIA_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_TURNOS_DIADataTable cln = ((EC_TURNOS_DIADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_TURNOS_DIADataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTURNO_DIA_ID = base.Columns["TURNO_DIA_ID"];
                this.columnDIA_HEMIN = base.Columns["DIA_HEMIN"];
                this.columnDIA_HE = base.Columns["DIA_HE"];
                this.columnDIA_HEMAX = base.Columns["DIA_HEMAX"];
                this.columnDIA_HERETARDO = base.Columns["DIA_HERETARDO"];
                this.columnDIA_HS = base.Columns["DIA_HS"];
                this.columnDIA_HSMAX = base.Columns["DIA_HSMAX"];
                this.columnDIA_HAYCOMIDA = base.Columns["DIA_HAYCOMIDA"];
                this.columnDIA_HSMIN = base.Columns["DIA_HSMIN"];
                this.columnDIA_HTIEMPO = base.Columns["DIA_HTIEMPO"];
                this.columnDIA_HCR = base.Columns["DIA_HCR"];
                this.columnDIA_HCS = base.Columns["DIA_HCS"];
                this.columnDIA_HCTIEMPO = base.Columns["DIA_HCTIEMPO"];
                this.columnDIA_HCTOLERA = base.Columns["DIA_HCTOLERA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTURNO_DIA_ID = new System.Data.DataColumn("TURNO_DIA_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_DIA_ID);
                this.columnDIA_HEMIN = new System.Data.DataColumn("DIA_HEMIN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HEMIN);
                this.columnDIA_HE = new System.Data.DataColumn("DIA_HE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HE);
                this.columnDIA_HEMAX = new System.Data.DataColumn("DIA_HEMAX", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HEMAX);
                this.columnDIA_HERETARDO = new System.Data.DataColumn("DIA_HERETARDO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HERETARDO);
                this.columnDIA_HS = new System.Data.DataColumn("DIA_HS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HS);
                this.columnDIA_HSMAX = new System.Data.DataColumn("DIA_HSMAX", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HSMAX);
                this.columnDIA_HAYCOMIDA = new System.Data.DataColumn("DIA_HAYCOMIDA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HAYCOMIDA);
                this.columnDIA_HSMIN = new System.Data.DataColumn("DIA_HSMIN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HSMIN);
                this.columnDIA_HTIEMPO = new System.Data.DataColumn("DIA_HTIEMPO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HTIEMPO);
                this.columnDIA_HCR = new System.Data.DataColumn("DIA_HCR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HCR);
                this.columnDIA_HCS = new System.Data.DataColumn("DIA_HCS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HCS);
                this.columnDIA_HCTIEMPO = new System.Data.DataColumn("DIA_HCTIEMPO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HCTIEMPO);
                this.columnDIA_HCTOLERA = new System.Data.DataColumn("DIA_HCTOLERA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HCTOLERA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTURNO_DIA_ID}, true));
                this.columnTURNO_DIA_ID.AllowDBNull = false;
                this.columnTURNO_DIA_ID.Unique = true;
                this.columnDIA_HEMIN.ReadOnly = true;
                this.columnDIA_HE.ReadOnly = true;
                this.columnDIA_HEMAX.ReadOnly = true;
                this.columnDIA_HERETARDO.ReadOnly = true;
                this.columnDIA_HS.ReadOnly = true;
                this.columnDIA_HSMAX.ReadOnly = true;
                this.columnDIA_HAYCOMIDA.ReadOnly = true;
                this.columnDIA_HSMIN.ReadOnly = true;
                this.columnDIA_HTIEMPO.ReadOnly = true;
                this.columnDIA_HCR.ReadOnly = true;
                this.columnDIA_HCS.ReadOnly = true;
                this.columnDIA_HCTIEMPO.ReadOnly = true;
                this.columnDIA_HCTOLERA.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_DIARow NewEC_TURNOS_DIARow() {
                return ((EC_TURNOS_DIARow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_TURNOS_DIARow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_TURNOS_DIARow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_TURNOS_DIARowChanged != null)) {
                    this.EC_TURNOS_DIARowChanged(this, new EC_TURNOS_DIARowChangeEvent(((EC_TURNOS_DIARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_TURNOS_DIARowChanging != null)) {
                    this.EC_TURNOS_DIARowChanging(this, new EC_TURNOS_DIARowChangeEvent(((EC_TURNOS_DIARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_TURNOS_DIARowDeleted != null)) {
                    this.EC_TURNOS_DIARowDeleted(this, new EC_TURNOS_DIARowChangeEvent(((EC_TURNOS_DIARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_TURNOS_DIARowDeleting != null)) {
                    this.EC_TURNOS_DIARowDeleting(this, new EC_TURNOS_DIARowChangeEvent(((EC_TURNOS_DIARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_TURNOS_DIARow(EC_TURNOS_DIARow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_Turnos ds = new DS_Turnos();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_TURNOS_DIADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_TIPO_TURNOSDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTIPO_TURNO_NOMBRE;
            
            private System.Data.DataColumn columnTIPO_TURNO_ID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_TURNOSDataTable() {
                this.TableName = "EC_TIPO_TURNOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_TURNOSDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_TIPO_TURNOSDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_TURNO_NOMBREColumn {
                get {
                    return this.columnTIPO_TURNO_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_TURNO_IDColumn {
                get {
                    return this.columnTIPO_TURNO_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_TURNOSRow this[int index] {
                get {
                    return ((EC_TIPO_TURNOSRow)(this.Rows[index]));
                }
            }
            
            public event EC_TIPO_TURNOSRowChangeEventHandler EC_TIPO_TURNOSRowChanging;
            
            public event EC_TIPO_TURNOSRowChangeEventHandler EC_TIPO_TURNOSRowChanged;
            
            public event EC_TIPO_TURNOSRowChangeEventHandler EC_TIPO_TURNOSRowDeleting;
            
            public event EC_TIPO_TURNOSRowChangeEventHandler EC_TIPO_TURNOSRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_TIPO_TURNOSRow(EC_TIPO_TURNOSRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_TURNOSRow AddEC_TIPO_TURNOSRow(string TIPO_TURNO_NOMBRE, decimal TIPO_TURNO_ID) {
                EC_TIPO_TURNOSRow rowEC_TIPO_TURNOSRow = ((EC_TIPO_TURNOSRow)(this.NewRow()));
                rowEC_TIPO_TURNOSRow.ItemArray = new object[] {
                        TIPO_TURNO_NOMBRE,
                        TIPO_TURNO_ID};
                this.Rows.Add(rowEC_TIPO_TURNOSRow);
                return rowEC_TIPO_TURNOSRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_TURNOSRow FindByTIPO_TURNO_ID(decimal TIPO_TURNO_ID) {
                return ((EC_TIPO_TURNOSRow)(this.Rows.Find(new object[] {
                            TIPO_TURNO_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_TIPO_TURNOSDataTable cln = ((EC_TIPO_TURNOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_TIPO_TURNOSDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTIPO_TURNO_NOMBRE = base.Columns["TIPO_TURNO_NOMBRE"];
                this.columnTIPO_TURNO_ID = base.Columns["TIPO_TURNO_ID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTIPO_TURNO_NOMBRE = new System.Data.DataColumn("TIPO_TURNO_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_TURNO_NOMBRE);
                this.columnTIPO_TURNO_ID = new System.Data.DataColumn("TIPO_TURNO_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_TURNO_ID);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTIPO_TURNO_ID}, true));
                this.columnTIPO_TURNO_NOMBRE.AllowDBNull = false;
                this.columnTIPO_TURNO_ID.AllowDBNull = false;
                this.columnTIPO_TURNO_ID.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_TURNOSRow NewEC_TIPO_TURNOSRow() {
                return ((EC_TIPO_TURNOSRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_TIPO_TURNOSRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_TIPO_TURNOSRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_TIPO_TURNOSRowChanged != null)) {
                    this.EC_TIPO_TURNOSRowChanged(this, new EC_TIPO_TURNOSRowChangeEvent(((EC_TIPO_TURNOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_TIPO_TURNOSRowChanging != null)) {
                    this.EC_TIPO_TURNOSRowChanging(this, new EC_TIPO_TURNOSRowChangeEvent(((EC_TIPO_TURNOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_TIPO_TURNOSRowDeleted != null)) {
                    this.EC_TIPO_TURNOSRowDeleted(this, new EC_TIPO_TURNOSRowChangeEvent(((EC_TIPO_TURNOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_TIPO_TURNOSRowDeleting != null)) {
                    this.EC_TIPO_TURNOSRowDeleting(this, new EC_TIPO_TURNOSRowChangeEvent(((EC_TIPO_TURNOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_TIPO_TURNOSRow(EC_TIPO_TURNOSRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_Turnos ds = new DS_Turnos();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_TIPO_TURNOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_TURNOS_ComboDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTURNO_ID;
            
            private System.Data.DataColumn columnTURNO_NOMBRE;
            
            private System.Data.DataColumn columnTURNO_BORRADO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_ComboDataTable() {
                this.TableName = "EC_TURNOS_Combo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TURNOS_ComboDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_TURNOS_ComboDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_IDColumn {
                get {
                    return this.columnTURNO_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_NOMBREColumn {
                get {
                    return this.columnTURNO_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_BORRADOColumn {
                get {
                    return this.columnTURNO_BORRADO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_ComboRow this[int index] {
                get {
                    return ((EC_TURNOS_ComboRow)(this.Rows[index]));
                }
            }
            
            public event EC_TURNOS_ComboRowChangeEventHandler EC_TURNOS_ComboRowChanging;
            
            public event EC_TURNOS_ComboRowChangeEventHandler EC_TURNOS_ComboRowChanged;
            
            public event EC_TURNOS_ComboRowChangeEventHandler EC_TURNOS_ComboRowDeleting;
            
            public event EC_TURNOS_ComboRowChangeEventHandler EC_TURNOS_ComboRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_TURNOS_ComboRow(EC_TURNOS_ComboRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_ComboRow AddEC_TURNOS_ComboRow(decimal TURNO_ID, string TURNO_NOMBRE, decimal TURNO_BORRADO) {
                EC_TURNOS_ComboRow rowEC_TURNOS_ComboRow = ((EC_TURNOS_ComboRow)(this.NewRow()));
                rowEC_TURNOS_ComboRow.ItemArray = new object[] {
                        TURNO_ID,
                        TURNO_NOMBRE,
                        TURNO_BORRADO};
                this.Rows.Add(rowEC_TURNOS_ComboRow);
                return rowEC_TURNOS_ComboRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_ComboRow FindByTURNO_ID(decimal TURNO_ID) {
                return ((EC_TURNOS_ComboRow)(this.Rows.Find(new object[] {
                            TURNO_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_TURNOS_ComboDataTable cln = ((EC_TURNOS_ComboDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_TURNOS_ComboDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTURNO_ID = base.Columns["TURNO_ID"];
                this.columnTURNO_NOMBRE = base.Columns["TURNO_NOMBRE"];
                this.columnTURNO_BORRADO = base.Columns["TURNO_BORRADO"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTURNO_ID = new System.Data.DataColumn("TURNO_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_ID);
                this.columnTURNO_NOMBRE = new System.Data.DataColumn("TURNO_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_NOMBRE);
                this.columnTURNO_BORRADO = new System.Data.DataColumn("TURNO_BORRADO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_BORRADO);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTURNO_ID}, true));
                this.columnTURNO_ID.AllowDBNull = false;
                this.columnTURNO_ID.Unique = true;
                this.columnTURNO_NOMBRE.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_ComboRow NewEC_TURNOS_ComboRow() {
                return ((EC_TURNOS_ComboRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_TURNOS_ComboRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_TURNOS_ComboRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_TURNOS_ComboRowChanged != null)) {
                    this.EC_TURNOS_ComboRowChanged(this, new EC_TURNOS_ComboRowChangeEvent(((EC_TURNOS_ComboRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_TURNOS_ComboRowChanging != null)) {
                    this.EC_TURNOS_ComboRowChanging(this, new EC_TURNOS_ComboRowChangeEvent(((EC_TURNOS_ComboRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_TURNOS_ComboRowDeleted != null)) {
                    this.EC_TURNOS_ComboRowDeleted(this, new EC_TURNOS_ComboRowChangeEvent(((EC_TURNOS_ComboRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_TURNOS_ComboRowDeleting != null)) {
                    this.EC_TURNOS_ComboRowDeleting(this, new EC_TURNOS_ComboRowChangeEvent(((EC_TURNOS_ComboRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_TURNOS_ComboRow(EC_TURNOS_ComboRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_Turnos ds = new DS_Turnos();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_TURNOS_ComboDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_TURNOSDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTURNO_ID;
            
            private System.Data.DataColumn columnTIPO_TURNO_ID;
            
            private System.Data.DataColumn columnTURNO_NOMBRE;
            
            private System.Data.DataColumn columnTURNO_ASISTENCIA;
            
            private System.Data.DataColumn columnTURNO_BORRADO;
            
            private System.Data.DataColumn columnTIPO_TURNO_NOMBRE;
            
            private System.Data.DataColumn columnSTATUS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOSDataTable() {
                this.TableName = "EC_TURNOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TURNOSDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_TURNOSDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_IDColumn {
                get {
                    return this.columnTURNO_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_TURNO_IDColumn {
                get {
                    return this.columnTIPO_TURNO_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_NOMBREColumn {
                get {
                    return this.columnTURNO_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_ASISTENCIAColumn {
                get {
                    return this.columnTURNO_ASISTENCIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TURNO_BORRADOColumn {
                get {
                    return this.columnTURNO_BORRADO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_TURNO_NOMBREColumn {
                get {
                    return this.columnTIPO_TURNO_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOSRow this[int index] {
                get {
                    return ((EC_TURNOSRow)(this.Rows[index]));
                }
            }
            
            public event EC_TURNOSRowChangeEventHandler EC_TURNOSRowChanging;
            
            public event EC_TURNOSRowChangeEventHandler EC_TURNOSRowChanged;
            
            public event EC_TURNOSRowChangeEventHandler EC_TURNOSRowDeleting;
            
            public event EC_TURNOSRowChangeEventHandler EC_TURNOSRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_TURNOSRow(EC_TURNOSRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOSRow AddEC_TURNOSRow(decimal TURNO_ID, decimal TIPO_TURNO_ID, string TURNO_NOMBRE, decimal TURNO_ASISTENCIA, decimal TURNO_BORRADO, string TIPO_TURNO_NOMBRE, string STATUS) {
                EC_TURNOSRow rowEC_TURNOSRow = ((EC_TURNOSRow)(this.NewRow()));
                rowEC_TURNOSRow.ItemArray = new object[] {
                        TURNO_ID,
                        TIPO_TURNO_ID,
                        TURNO_NOMBRE,
                        TURNO_ASISTENCIA,
                        TURNO_BORRADO,
                        TIPO_TURNO_NOMBRE,
                        STATUS};
                this.Rows.Add(rowEC_TURNOSRow);
                return rowEC_TURNOSRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_TURNOSDataTable cln = ((EC_TURNOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_TURNOSDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTURNO_ID = base.Columns["TURNO_ID"];
                this.columnTIPO_TURNO_ID = base.Columns["TIPO_TURNO_ID"];
                this.columnTURNO_NOMBRE = base.Columns["TURNO_NOMBRE"];
                this.columnTURNO_ASISTENCIA = base.Columns["TURNO_ASISTENCIA"];
                this.columnTURNO_BORRADO = base.Columns["TURNO_BORRADO"];
                this.columnTIPO_TURNO_NOMBRE = base.Columns["TIPO_TURNO_NOMBRE"];
                this.columnSTATUS = base.Columns["STATUS"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTURNO_ID = new System.Data.DataColumn("TURNO_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_ID);
                this.columnTIPO_TURNO_ID = new System.Data.DataColumn("TIPO_TURNO_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_TURNO_ID);
                this.columnTURNO_NOMBRE = new System.Data.DataColumn("TURNO_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_NOMBRE);
                this.columnTURNO_ASISTENCIA = new System.Data.DataColumn("TURNO_ASISTENCIA", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_ASISTENCIA);
                this.columnTURNO_BORRADO = new System.Data.DataColumn("TURNO_BORRADO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTURNO_BORRADO);
                this.columnTIPO_TURNO_NOMBRE = new System.Data.DataColumn("TIPO_TURNO_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_TURNO_NOMBRE);
                this.columnSTATUS = new System.Data.DataColumn("STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnTURNO_ID.AllowDBNull = false;
                this.columnTURNO_NOMBRE.AllowDBNull = false;
                this.columnTURNO_ASISTENCIA.AllowDBNull = false;
                this.columnSTATUS.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOSRow NewEC_TURNOSRow() {
                return ((EC_TURNOSRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_TURNOSRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_TURNOSRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_TURNOSRowChanged != null)) {
                    this.EC_TURNOSRowChanged(this, new EC_TURNOSRowChangeEvent(((EC_TURNOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_TURNOSRowChanging != null)) {
                    this.EC_TURNOSRowChanging(this, new EC_TURNOSRowChangeEvent(((EC_TURNOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_TURNOSRowDeleted != null)) {
                    this.EC_TURNOSRowDeleted(this, new EC_TURNOSRowChangeEvent(((EC_TURNOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_TURNOSRowDeleting != null)) {
                    this.EC_TURNOSRowDeleting(this, new EC_TURNOSRowChangeEvent(((EC_TURNOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_TURNOSRow(EC_TURNOSRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_Turnos ds = new DS_Turnos();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_TURNOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_TURNOS_EDICIONRow : System.Data.DataRow {
            
            private EC_TURNOS_EDICIONDataTable tableEC_TURNOS_EDICION;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TURNOS_EDICIONRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_TURNOS_EDICION = ((EC_TURNOS_EDICIONDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TURNO_ID {
                get {
                    return ((decimal)(this[this.tableEC_TURNOS_EDICION.TURNO_IDColumn]));
                }
                set {
                    this[this.tableEC_TURNOS_EDICION.TURNO_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_TURNO_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableEC_TURNOS_EDICION.TIPO_TURNO_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TIPO_TURNO_ID\' de la tabla \'EC_TURNOS_EDICION\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_EDICION.TIPO_TURNO_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TURNO_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_TURNOS_EDICION.TURNO_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_TURNOS_EDICION.TURNO_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TURNO_ASISTENCIA {
                get {
                    return ((decimal)(this[this.tableEC_TURNOS_EDICION.TURNO_ASISTENCIAColumn]));
                }
                set {
                    this[this.tableEC_TURNOS_EDICION.TURNO_ASISTENCIAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TURNO_BORRADO {
                get {
                    try {
                        return ((decimal)(this[this.tableEC_TURNOS_EDICION.TURNO_BORRADOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TURNO_BORRADO\' de la tabla \'EC_TURNOS_EDICION\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_EDICION.TURNO_BORRADOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_TURNO_IDNull() {
                return this.IsNull(this.tableEC_TURNOS_EDICION.TIPO_TURNO_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_TURNO_IDNull() {
                this[this.tableEC_TURNOS_EDICION.TIPO_TURNO_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTURNO_BORRADONull() {
                return this.IsNull(this.tableEC_TURNOS_EDICION.TURNO_BORRADOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTURNO_BORRADONull() {
                this[this.tableEC_TURNOS_EDICION.TURNO_BORRADOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_TURNOS_DIARow : System.Data.DataRow {
            
            private EC_TURNOS_DIADataTable tableEC_TURNOS_DIA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TURNOS_DIARow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_TURNOS_DIA = ((EC_TURNOS_DIADataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TURNO_DIA_ID {
                get {
                    return ((decimal)(this[this.tableEC_TURNOS_DIA.TURNO_DIA_IDColumn]));
                }
                set {
                    this[this.tableEC_TURNOS_DIA.TURNO_DIA_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HEMIN {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HEMINColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HEMIN\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HEMINColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HE {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HE\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HEMAX {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HEMAXColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HEMAX\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HEMAXColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HERETARDO {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HERETARDOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HERETARDO\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HERETARDOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HS {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HS\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HSMAX {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HSMAXColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HSMAX\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HSMAXColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HAYCOMIDA {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HAYCOMIDAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HAYCOMIDA\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HAYCOMIDAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HSMIN {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HSMINColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HSMIN\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HSMINColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HTIEMPO {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HTIEMPOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HTIEMPO\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HTIEMPOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HCR {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HCRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HCR\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HCRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HCS {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HCSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HCS\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HCSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HCTIEMPO {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HCTIEMPOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HCTIEMPO\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HCTIEMPOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIA_HCTOLERA {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS_DIA.DIA_HCTOLERAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DIA_HCTOLERA\' de la tabla \'EC_TURNOS_DIA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_DIA.DIA_HCTOLERAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HEMINNull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HEMINColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HEMINNull() {
                this[this.tableEC_TURNOS_DIA.DIA_HEMINColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HENull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HENull() {
                this[this.tableEC_TURNOS_DIA.DIA_HEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HEMAXNull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HEMAXColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HEMAXNull() {
                this[this.tableEC_TURNOS_DIA.DIA_HEMAXColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HERETARDONull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HERETARDOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HERETARDONull() {
                this[this.tableEC_TURNOS_DIA.DIA_HERETARDOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HSNull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HSNull() {
                this[this.tableEC_TURNOS_DIA.DIA_HSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HSMAXNull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HSMAXColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HSMAXNull() {
                this[this.tableEC_TURNOS_DIA.DIA_HSMAXColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HAYCOMIDANull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HAYCOMIDAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HAYCOMIDANull() {
                this[this.tableEC_TURNOS_DIA.DIA_HAYCOMIDAColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HSMINNull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HSMINColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HSMINNull() {
                this[this.tableEC_TURNOS_DIA.DIA_HSMINColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HTIEMPONull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HTIEMPOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HTIEMPONull() {
                this[this.tableEC_TURNOS_DIA.DIA_HTIEMPOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HCRNull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HCRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HCRNull() {
                this[this.tableEC_TURNOS_DIA.DIA_HCRColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HCSNull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HCSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HCSNull() {
                this[this.tableEC_TURNOS_DIA.DIA_HCSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HCTIEMPONull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HCTIEMPOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HCTIEMPONull() {
                this[this.tableEC_TURNOS_DIA.DIA_HCTIEMPOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HCTOLERANull() {
                return this.IsNull(this.tableEC_TURNOS_DIA.DIA_HCTOLERAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HCTOLERANull() {
                this[this.tableEC_TURNOS_DIA.DIA_HCTOLERAColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_TIPO_TURNOSRow : System.Data.DataRow {
            
            private EC_TIPO_TURNOSDataTable tableEC_TIPO_TURNOS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_TURNOSRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_TIPO_TURNOS = ((EC_TIPO_TURNOSDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_TURNO_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_TIPO_TURNOS.TIPO_TURNO_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_TIPO_TURNOS.TIPO_TURNO_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_TURNO_ID {
                get {
                    return ((decimal)(this[this.tableEC_TIPO_TURNOS.TIPO_TURNO_IDColumn]));
                }
                set {
                    this[this.tableEC_TIPO_TURNOS.TIPO_TURNO_IDColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_TURNOS_ComboRow : System.Data.DataRow {
            
            private EC_TURNOS_ComboDataTable tableEC_TURNOS_Combo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TURNOS_ComboRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_TURNOS_Combo = ((EC_TURNOS_ComboDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TURNO_ID {
                get {
                    return ((decimal)(this[this.tableEC_TURNOS_Combo.TURNO_IDColumn]));
                }
                set {
                    this[this.tableEC_TURNOS_Combo.TURNO_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TURNO_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_TURNOS_Combo.TURNO_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_TURNOS_Combo.TURNO_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TURNO_BORRADO {
                get {
                    try {
                        return ((decimal)(this[this.tableEC_TURNOS_Combo.TURNO_BORRADOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TURNO_BORRADO\' de la tabla \'EC_TURNOS_Combo\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS_Combo.TURNO_BORRADOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTURNO_BORRADONull() {
                return this.IsNull(this.tableEC_TURNOS_Combo.TURNO_BORRADOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTURNO_BORRADONull() {
                this[this.tableEC_TURNOS_Combo.TURNO_BORRADOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_TURNOSRow : System.Data.DataRow {
            
            private EC_TURNOSDataTable tableEC_TURNOS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TURNOSRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_TURNOS = ((EC_TURNOSDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TURNO_ID {
                get {
                    return ((decimal)(this[this.tableEC_TURNOS.TURNO_IDColumn]));
                }
                set {
                    this[this.tableEC_TURNOS.TURNO_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_TURNO_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableEC_TURNOS.TIPO_TURNO_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TIPO_TURNO_ID\' de la tabla \'EC_TURNOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS.TIPO_TURNO_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TURNO_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_TURNOS.TURNO_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_TURNOS.TURNO_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TURNO_ASISTENCIA {
                get {
                    return ((decimal)(this[this.tableEC_TURNOS.TURNO_ASISTENCIAColumn]));
                }
                set {
                    this[this.tableEC_TURNOS.TURNO_ASISTENCIAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TURNO_BORRADO {
                get {
                    try {
                        return ((decimal)(this[this.tableEC_TURNOS.TURNO_BORRADOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TURNO_BORRADO\' de la tabla \'EC_TURNOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS.TURNO_BORRADOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_TURNO_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS.TIPO_TURNO_NOMBREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TIPO_TURNO_NOMBRE\' de la tabla \'EC_TURNOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS.TIPO_TURNO_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableEC_TURNOS.STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'STATUS\' de la tabla \'EC_TURNOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TURNOS.STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_TURNO_IDNull() {
                return this.IsNull(this.tableEC_TURNOS.TIPO_TURNO_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_TURNO_IDNull() {
                this[this.tableEC_TURNOS.TIPO_TURNO_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTURNO_BORRADONull() {
                return this.IsNull(this.tableEC_TURNOS.TURNO_BORRADOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTURNO_BORRADONull() {
                this[this.tableEC_TURNOS.TURNO_BORRADOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_TURNO_NOMBRENull() {
                return this.IsNull(this.tableEC_TURNOS.TIPO_TURNO_NOMBREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_TURNO_NOMBRENull() {
                this[this.tableEC_TURNOS.TIPO_TURNO_NOMBREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableEC_TURNOS.STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableEC_TURNOS.STATUSColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_TURNOS_EDICIONRowChangeEvent : System.EventArgs {
            
            private EC_TURNOS_EDICIONRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_EDICIONRowChangeEvent(EC_TURNOS_EDICIONRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_EDICIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_TURNOS_DIARowChangeEvent : System.EventArgs {
            
            private EC_TURNOS_DIARow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_DIARowChangeEvent(EC_TURNOS_DIARow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_DIARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_TIPO_TURNOSRowChangeEvent : System.EventArgs {
            
            private EC_TIPO_TURNOSRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_TURNOSRowChangeEvent(EC_TIPO_TURNOSRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_TURNOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_TURNOS_ComboRowChangeEvent : System.EventArgs {
            
            private EC_TURNOS_ComboRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_ComboRowChangeEvent(EC_TURNOS_ComboRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOS_ComboRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_TURNOSRowChangeEvent : System.EventArgs {
            
            private EC_TURNOSRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOSRowChangeEvent(EC_TURNOSRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TURNOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591