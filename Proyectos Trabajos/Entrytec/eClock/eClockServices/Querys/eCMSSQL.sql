-- ------------------------------------------------------------
-- Contiene el listado de accesos (checadas) por las terminales
-- El sistema dará de alta el registro ID = 0 con Terminal_ID = 0 y Tipo_Acceso_ID = 0
-- 
-- INSERT INTO EC_ACCESOS (ACCESO_ID, PERSONA_ID, TERMINAL_ID, ACCESO_FECHAHORA, TIPO_ACCESO_ID) VALUES(1,1,0,'09:05',1); 
-- ------------------------------------------------------------

CREATE TABLE EC_ACCESOS (
  ACCESO_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_ID INTEGER  NOT NULL  ,
  TERMINAL_ID INTEGER  NOT NULL  ,
  ACCESO_FECHAHORA DATETIME    ,
  TIPO_ACCESO_ID INTEGER UNSIGNED  NOT NULL  ,
  ACCESO_CALCULADO BOOL   DEFAULT 0   ,
PRIMARY KEY(ACCESO_ID)              );
GO


CREATE INDEX EC_ACCESOSFKI1 ON EC_ACCESOS (TIPO_ACCESO_ID);
GO
CREATE INDEX EC_ACCESOSFKI2 ON EC_ACCESOS (TERMINAL_ID);
GO
CREATE INDEX EC_ACCESOSFKI3 ON EC_ACCESOS (PERSONA_ID);
GO
CREATE INDEX EC_ACCESOSPFE ON EC_ACCESOS (ACCESO_FECHAHORA, PERSONA_ID);
GO
CREATE INDEX EC_ACCESOSI1 ON EC_ACCESOS (ACCESO_CALCULADO);
GO
CREATE INDEX EC_ACCESOS_FKI4 ON EC_ACCESOS (TIPO_ACCESO_ID, ACCESO_CALCULADO, TERMINAL_ID);
GO
CREATE INDEX EC_ACCESOS_FKI5 ON EC_ACCESOS (ACCESO_CALCULADO, TIPO_ACCESO_ID, TERMINAL_ID, ACCESO_ID);
GO



INSERT INTO EC_ACCESOS (ACCESO_ID, PERSONA_ID, TERMINAL_ID, TIPO_ACCESO_ID,ACCESO_CALCULADO) VALUES(0,0,0,0,1); 

GO









-- ------------------------------------------------------------
-- Contiene el identificador de todos los accesos que se han creado manualmente (justificado)
-- ------------------------------------------------------------

CREATE TABLE EC_ACCESOS_JUS (
  ACCESO_JUS_ID INTEGER UNSIGNED  NOT NULL  ,
  T_INC_ACCESO_ID INTEGER  NOT NULL  ,
  ACCESO_ID INTEGER UNSIGNED  NOT NULL  ,
  ACCESO_JUS_DIFF DATETIME    ,
  ACCESO_JUS_DESC VARCHAR(255)    ,
  ACCESO_JUS_INTER BOOL      ,
PRIMARY KEY(ACCESO_JUS_ID)    );
GO


CREATE INDEX EC_ACCESOS_JUST_FKIndex1 ON EC_ACCESOS_JUS (ACCESO_ID);
GO
CREATE INDEX EC_ACCESOS_JUS_FKIndex2 ON EC_ACCESOS_JUS (T_INC_ACCESO_ID);
GO








CREATE TABLE EC_ACTIVIDADES (
  ACTIVIDAD_ID INTEGER  NOT NULL  ,
  EDO_ACTIVIDAD_ID INTEGER  NOT NULL  ,
  ACTIVIDAD_NOMBRE VARCHAR(255)    ,
  ACTIVIDAD_DESCRIPCION VARCHAR(4000)    ,
  ACTIVIDAD_INVITADOS VARCHAR(255)    ,
  ACTIVIDAD_IMAGEN BLOB    ,
  ACTIVIDAD_DESDE DATETIME    ,
  ACTIVIDAD_HASTA DATETIME    ,
  ACTIVIDAD_INSCRIPDESDE DATETIME    ,
  ACTIVIDAD_INSCRIPHASTA DATETIME    ,
  ACTIVIDAD_PERSONAS VARCHAR(4000)    ,
  ACTIVIDAD_CUPO INTEGER UNSIGNED    ,
  ACTIVIDAD_RESUMEN VARCHAR(4000)    ,
  ACTIVIDAD_MOMENTO VARCHAR(4000)    ,
  ACTIVIDAD_CAMPOS VARCHAR(4000)    ,
  ACTIVIDAD_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(ACTIVIDAD_ID)  );
GO


CREATE INDEX EC_ACTIVIDADES_FKIndex1 ON EC_ACTIVIDADES (EDO_ACTIVIDAD_ID);
GO


















CREATE TABLE EC_ACTIVIDAD_INS (
  ACTIVIDAD_INS_ID INTEGER  NOT NULL  ,
  ACTIVIDAD_ID INTEGER  NOT NULL  ,
  PERSONA_ID INTEGER  NOT NULL  ,
  TIPO_INSCRIPCION_ID INTEGER  NOT NULL  ,
  ACTIVIDAD_INS_FECHA DATETIME    ,
  ACTIVIDAD_INS_DESCRIPCION VARCHAR(4000)      ,
PRIMARY KEY(ACTIVIDAD_INS_ID)      );
GO


CREATE INDEX EC_ACTIVIDAD_INS_FKIndex1 ON EC_ACTIVIDAD_INS (PERSONA_ID);
GO
CREATE INDEX EC_ACTIVIDAD_INS_FKIndex2 ON EC_ACTIVIDAD_INS (ACTIVIDAD_ID);
GO
CREATE INDEX EC_ACTIVIDAD_INS_FKIndex3 ON EC_ACTIVIDAD_INS (TIPO_INSCRIPCION_ID);
GO






CREATE TABLE EC_AGRUPACIONES (
  SUSCRIPCION_ID INTEGER  NOT NULL  ,
  AGRUPACION_NOMBRE VARCHAR(2000)        );
GO


CREATE INDEX Table_85_FKIndex1 ON EC_AGRUPACIONES (SUSCRIPCION_ID);
GO
CREATE UNIQUE INDEX EC_AGRUPACIONES_I ON EC_AGRUPACIONES (SUSCRIPCION_ID, AGRUPACION_NOMBRE);
GO




-- ------------------------------------------------------------
-- Indica los dias de vacaciones que ha disfrutado el trabajador
-- ------------------------------------------------------------

CREATE TABLE EC_ALMACEN_INC (
  ALMACEN_INC_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_INCIDENCIA_R_ID INTEGER  NOT NULL  ,
  TIPO_ALMACEN_INC_ID INTEGER  NOT NULL  ,
  PERSONA_ID INTEGER  NOT NULL  ,
  ALMACEN_INC_FECHA DATE    ,
  ALMACEN_INC_NO DECIMAL    ,
  ALMACEN_INC_SALDO DECIMAL    ,
  ALMACEN_INC_SIGUIENTE DATETIME    ,
  ALMACEN_INC_AUTOM BOOL    ,
  ALMACEN_INC_COMEN VARCHAR(255)    ,
  ALMACEN_INC_EXTRAS VARCHAR(255)      ,
PRIMARY KEY(ALMACEN_INC_ID)      );
GO


CREATE INDEX EC_VACA_DISFRUTA_FKIndex1 ON EC_ALMACEN_INC (PERSONA_ID);
GO
CREATE INDEX EC_ALMACEN_INC_FKIndex2 ON EC_ALMACEN_INC (TIPO_ALMACEN_INC_ID);
GO
CREATE INDEX EC_ALMACEN_INC_FKIndex3 ON EC_ALMACEN_INC (TIPO_INCIDENCIA_R_ID);
GO












-- ------------------------------------------------------------
-- Contiene los almacenes de vectores de huellas, palmas, retinas, caras, etc. donde se almacenará la información de cada dispositivo.
-- ------------------------------------------------------------

CREATE TABLE EC_ALMACEN_VEC (
  ALMACEN_VEC_ID INTEGER UNSIGNED  NOT NULL  ,
  ALMACEN_VEC_NOMBRE VARCHAR(45)    ,
  ALMACEN_VEC_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(ALMACEN_VEC_ID));
GO


INSERT INTO EC_ALMACEN_VEC (ALMACEN_VEC_ID, ALMACEN_VEC_NOMBRE,ALMACEN_VEC_BORRADO) VALUES(0, 'No requiere almacen' ,1); 
INSERT INTO EC_ALMACEN_VEC (ALMACEN_VEC_ID, ALMACEN_VEC_NOMBRE) VALUES(1, 'Almacen de Huellas Predeterminado' ); 
INSERT INTO EC_ALMACEN_VEC (ALMACEN_VEC_ID, ALMACEN_VEC_NOMBRE, ALMACEN_VEC_BORRADO) VALUES(3,'HandPunch',0); 
INSERT INTO EC_ALMACEN_VEC (ALMACEN_VEC_ID, ALMACEN_VEC_NOMBRE, ALMACEN_VEC_BORRADO) VALUES(4,'ZKSoftware',0); 
INSERT INTO EC_ALMACEN_VEC (ALMACEN_VEC_ID, ALMACEN_VEC_NOMBRE, ALMACEN_VEC_BORRADO) VALUES(5,'Anviz',0); 
INSERT INTO EC_ALMACEN_VEC (ALMACEN_VEC_ID, ALMACEN_VEC_NOMBRE, ALMACEN_VEC_BORRADO) VALUES(6,'Imagen Huella 1',0); 
INSERT INTO EC_ALMACEN_VEC (ALMACEN_VEC_ID, ALMACEN_VEC_NOMBRE, ALMACEN_VEC_BORRADO) VALUES(7,'Imagen Huella 2',0);

GO





-- ------------------------------------------------------------
-- Esta tabla contiene todos los campos autonuméricos generados desde el sistema
-- ------------------------------------------------------------

CREATE TABLE EC_AUTONUM (
  AUTONUM_TABLA VARCHAR(45)  NOT NULL  ,
  AUTONUM_CAMPO_ID VARCHAR(45)  NOT NULL  ,
  AUTONUM_TABLA_ID INTEGER  NOT NULL  ,
  SESION_ID INTEGER UNSIGNED  NOT NULL  ,
  AUTONUM_FECHAHORA DATETIME    ,
  SUSCRIPCION_ID INTEGER   DEFAULT 0 ,
  AUTONUM_FECHAHORAM DATETIME    ,
  SESION_ID_M INTEGER   DEFAULT 0 ,
  AUTONUM_FECHAHORAB DATETIME    ,
  SESION_ID_B INTEGER   DEFAULT 0 ,
  AUTONUM_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(AUTONUM_TABLA, AUTONUM_CAMPO_ID, AUTONUM_TABLA_ID)    );
GO


CREATE INDEX EC_AUTONUM_FKIndex1 ON EC_AUTONUM (SESION_ID);
GO
CREATE INDEX EC_AUTONUM ON EC_AUTONUM (AUTONUM_TABLA, AUTONUM_CAMPO_ID);
GO













-- ------------------------------------------------------------
-- Contiene un catalogo de calendarios
-- ------------------------------------------------------------

CREATE TABLE EC_CALENDARIOS_DF (
  CALENDARIO_DF_ID INTEGER  NOT NULL  ,
  CALENDARIO_DF_NOMBRE VARCHAR(45)  NOT NULL  ,
  CALENDARIO_DF_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(CALENDARIO_DF_ID));
GO


INSERT INTO EC_CALENDARIOS_DF (CALENDARIO_DF_ID, CALENDARIO_DF_NOMBRE, CALENDARIO_DF_BORRADO) VALUES(0,'Calendario predeterminado' , 0);
INSERT INTO EC_CALENDARIOS_DF (CALENDARIO_DF_ID, CALENDARIO_DF_NOMBRE, CALENDARIO_DF_BORRADO) VALUES(-1,'Calendario definido por el Tipo de nomina' , 0);

GO






-- ------------------------------------------------------------
-- Configuración de formatos y nombres de campos
-- ------------------------------------------------------------

CREATE TABLE EC_CAMPOS (
  CAMPO_NOMBRE VARCHAR(45)  NOT NULL  ,
  CAMPO_ETIQUETA VARCHAR(45)    ,
  CATALOGO_ID INTEGER  NOT NULL  ,
  MASCARA_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_DATO_ID INTEGER UNSIGNED  NOT NULL  ,
  CAMPO_LONGITUD INTEGER   DEFAULT 45 ,
  CAMPO_ANCHO_GRID INTEGER   DEFAULT 0 ,
  CAMPO_ALTO_GRID INTEGER   DEFAULT 0 ,
  CAMPO_ANCHO INTEGER   DEFAULT 0 ,
  CAMPO_ALTO INTEGER   DEFAULT 0 ,
  CAMPO_ES_TEMPLEADOS BOOL   DEFAULT 0   ,
PRIMARY KEY(CAMPO_NOMBRE)      );
GO


CREATE INDEX CAMPOS_FK1 ON EC_CAMPOS (TIPO_DATO_ID);
GO
CREATE INDEX CAMPOS_FK2 ON EC_CAMPOS (MASCARA_ID);
GO
CREATE INDEX EC_CAMPOS_FKIndex3 ON EC_CAMPOS (CATALOGO_ID);
GO











CREATE TABLE EC_CAMPOS_DATOS (
  CAMPO_DATO_ID INTEGER  NOT NULL  ,
  SUSCRIPCION_ID INTEGER  NOT NULL  ,
  TIPO_PERSONA_ID INTEGER  NOT NULL  ,
  TIPO_DATO_ID INTEGER UNSIGNED  NOT NULL  ,
  CAMPO_DATO_NOMBRE VARCHAR(45)    ,
  CAMPO_DATO_ETIQUETA VARCHAR(255)    ,
  CAMPO_DATO_AYUDA VARCHAR(555)    ,
  CAMPO_DATO_REPETIDOS BOOL    ,
  CAMPO_DATO_AGRUPADOR VARCHAR(45)    ,
  CAMPO_DATO_MULTIPLE VARCHAR(255)    ,
  CAMPO_DATO_MULTIPLEP BOOL   DEFAULT 0 ,
  CAMPO_DATO_USABILIDAD INTEGER   DEFAULT 0 ,
  CAMPO_DATO_MASCARA VARCHAR(255)    ,
  CAMPO_DATO_VALIDACION VARCHAR(255)    ,
  CAMPO_DATO_ORDEN INTEGER    ,
  CAMPO_DATO_DEFAULT VARCHAR(255)    ,
  CAMPO_DATO_DUPLICADO VARCHAR(555)    ,
  CAMPO_DATO_NUEVO BOOL   DEFAULT 1 ,
  CAMPO_DATO_EDITABLE BOOL   DEFAULT 1 ,
  CAMPO_DATO_IMPORTABLE BOOL   DEFAULT 1 ,
  CAMPO_DATO_AUTONUMERICO VARCHAR(255)      ,
PRIMARY KEY(CAMPO_DATO_ID)      );
GO


CREATE INDEX EC_CAMPOS_DATOS_FKIndex1 ON EC_CAMPOS_DATOS (SUSCRIPCION_ID);
GO
CREATE INDEX EC_CAMPOS_DATOS_FKIndex2 ON EC_CAMPOS_DATOS (TIPO_PERSONA_ID);
GO
CREATE INDEX EC_CAMPOS_DATOS_FKIndex3 ON EC_CAMPOS_DATOS (TIPO_DATO_ID);
GO





















-- ------------------------------------------------------------
-- Indica los campos que se deberán Capturar para la edicion/alta de una incidencia
-- ------------------------------------------------------------

CREATE TABLE EC_CAMPOS_INC_R (
  CAMPO_NOMBRE VARCHAR(45)  NOT NULL  ,
  TIPO_INCIDENCIA_R_ID INTEGER  NOT NULL  ,
  CAMPO_INC_R_OBL BOOL   DEFAULT 0 ,
  CAMPO_INC_R_DEST VARCHAR(255)    ,
  CAMPO_INC_R_EXP VARCHAR(255)    ,
  CAMPO_INC_R_ORD INTEGER   DEFAULT 0       );
GO


CREATE INDEX CAMPOS_INC_AVFKI1 ON EC_CAMPOS_INC_R (CAMPO_NOMBRE);
GO
CREATE INDEX EC_CAMPOS_INC_R_FKIndex2 ON EC_CAMPOS_INC_R (TIPO_INCIDENCIA_R_ID);
GO
CREATE UNIQUE INDEX EC_CAMPOS_INC_R_I1 ON EC_CAMPOS_INC_R (TIPO_INCIDENCIA_R_ID, CAMPO_NOMBRE);
GO








-- ------------------------------------------------------------
-- Datos adicionales de los campos de la tabla de empleados (EC_EMPLEADOS)
-- ------------------------------------------------------------

CREATE TABLE EC_CAMPOS_TE (
  CAMPO_NOMBRE VARCHAR(45)  NOT NULL  ,
  CAMPO_TE_ORDEN INTEGER UNSIGNED  NOT NULL  ,
  CAMPO_TE_ES_LLAVE BOOL    ,
  CAMPO_TE_ES_AUTONUM BOOL    ,
  CAMPO_TE_COLUMNA INTEGER UNSIGNED    ,
  CAMPO_TE_FILTRO BOOL    ,
  CAMPO_TE_INVISIBLE BOOL   DEFAULT 0 ,
  CAMPO_TE_INVISIBLEG BOOL   DEFAULT 0   );
GO


CREATE INDEX CAMPOS_TE_FKI1 ON EC_CAMPOS_TE (CAMPO_NOMBRE);
GO











CREATE TABLE EC_CANJES (
  CANJE_ID INTEGER UNSIGNED  NOT NULL  ,
  PROMOCION_ID INTEGER UNSIGNED  NOT NULL  ,
  CANJE_FECHAHORA DATETIME    ,
  CANJE_COMENTARIO VARCHAR(45)      ,
PRIMARY KEY(CANJE_ID)    );
GO


CREATE INDEX CANJES_FKI1 ON EC_CANJES (PROMOCION_ID);
GO
CREATE INDEX EC_CANJES_FKI1 ON EC_CANJES (PROMOCION_ID);
GO


INSERT INTO EC_CANJES (CANJE_ID, PROMOCION_ID, CANJE_COMENTARIO) VALUES(0,0 ,'No canjeado');

GO






-- ------------------------------------------------------------
-- Contiene el listado de catalogos permitidos
-- ------------------------------------------------------------

CREATE TABLE EC_CATALOGOS (
  CATALOGO_ID INTEGER  NOT NULL  ,
  CATALOGO_NOMBRE VARCHAR(45)    ,
  CATALOGO_TABLA VARCHAR(45)    ,
  CATALOGO_C_LLAVE VARCHAR(45)    ,
  CATALOGO_C_DESC VARCHAR(45)    ,
  CATALOGO_C_EXTRA VARCHAR(255)    ,
  CATALOGO_QA_SQL VARCHAR(255)    ,
  CATALOGO_M_NSEL BOOL   DEFAULT 0 ,
  CATALOGO_ALIAS VARCHAR(255)     IDENTITY ,
  CATALOGO_BORRADO BOOL  NOT NULL DEFAULT 0   ,
PRIMARY KEY(CATALOGO_ID));
GO


INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA) VALUES( 0, 'Sin Catalogo' , '', '', '', '');

INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA) VALUES( 1, 'AutoCatalogo' , '', '', '', ''); 

INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)  

 VALUES( 8, 'Catalogo' , 'EC_CATALOGOS', 'CATALOGO_ID', 'CATALOGO_NOMBRE', 1);    

INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)  

 VALUES( 9, 'Mascara' , 'EC_MASCARAS', 'MASCARA_ID', 'MASCARA_NOMBRE', 1);    

INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)  

 VALUES( 10, 'Tipo de dato' , 'EC_TIPO_DATOS', 'TIPO_DATO_ID', 'TIPO_DATO_NOMBRE', 1);    

INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA, CATALOGO_BORRADO) 

VALUES( 11, 'Tipo Borrado' , 'EC_TIPO_BORRADO', 'TIPO_BORRADO_ID', 'TIPO_BORRADO', '',1);  

INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA, CATALOGO_QA_SQL, CATALOGO_BORRADO)  

VALUES( 12, 'Turno' , 'EC_TURNOS', 'TURNO_ID', 'TURNO_NOMBRE', '','WHERE TURNO_BORRADO = 0',1);   

INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA, CATALOGO_QA_SQL, CATALOGO_BORRADO)   

VALUES( 13, 'Tipo de Turno' , 'EC_TIPO_TURNOS', 'TIPO_TURNO_ID', 'TIPO_TURNO_NOMBRE', '','WHERE TIPO_TURNO_ID > 0',1);   

INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA, CATALOGO_QA_SQL, CATALOGO_BORRADO)    

VALUES( 14, 'Perfiles' , 'EC_PERFILES', 'PERFIL_ID', 'PERFIL_NOMBRE', '','WHERE PERFIL_BORRADO = 0',1);    

INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA, CATALOGO_QA_SQL, CATALOGO_BORRADO)      

VALUES( 15, 'Terminales' , 'EC_TERMINALES', 'TERMINAL_ID', 'TERMINAL_NOMBRE', '','WHERE TERMINAL_BORRADO = 0',1);      

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_BORRADO) VALUES (16,'Tipo de Accesos','EC_TIPO_ACCESOS','TIPO_ACCESO_ID','TIPO_ACCESO_NOMBRE',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (17,'Tipo de Auditoria','EC_TIPO_AUDITORIA','TIPO_AUDITORIA_ID','TIPO_AUDITORIA_NOMBRE','',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (18,'Tipo de Cobro','EC_TIPO_COBRO','TIPO_COBRO_ID','TIPO_COBRO','',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (19,'Tipo de Comida','EC_TIPO_COMIDA','TIPO_COMIDA_ID','TIPO_COMIDA','',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (20,'Tipo de Error','EC_TIPO_ERROR','TIPO_ERROR_ID','TIPO_ERROR_NOMBRE','',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (21,'Tipo de Imagen','EC_TIPO_IMAGEN','TIPO_IMAGEN_ID','TIPO_IMAGEN','WHERE TIPO_IMAGEN_BORRADO = 0',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (22,'Tipo de Incidencias Comida Sistema','EC_TIPO_INC_COMIDA_SIS','TIPO_INC_C_SIS_ID','TIPO_INC_C_SIS_NOMBRE','',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (23,'Tipo de Incidencias','EC_TIPO_INCIDENCIAS','TIPO_INCIDENCIA_ID','TIPO_INCIDENCIA_NOMBRE','WHERE TIPO_INCIDENCIA_BORRADO = 0',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (24,'Tipo de Incidencias de Sistema','EC_TIPO_INC_SIS','TIPO_INC_SIS_ID','TIPO_INC_SIS_NOMBRE','',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (25,'Tipo de Personas','EC_TIPO_PERSONAS','TIPO_PERSONA_ID','TIPO_PERSONA_NOMBRE','',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (26,'Tipo de Tecnologias','EC_TIPO_TECNOLOGIAS','TIPO_TECNOLOGIA_ID','TIPO_TECNOLOGIA_NOMBRE','WHERE TIPO_TECNOLOGIA_BORRADO=0',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (27,'Tipo de Terminales Dextras','EC_TIPO_TERM_DEXTRAS','TIPO_TERM_DEXTRAS_ID','TIPO_TERM_DEXTRAS_NOMBRE','',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_M_NSEL,CATALOGO_BORRADO) VALUES (28,'Campo Empleado','EC_CAMPOS','CAMPO_NOMBRE','CAMPO_ETIQUETA','WHERE CAMPO_ES_TEMPLEADOS = 1',1,0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (29,'Sitio','EC_SITIOS','SITIO_ID','SITIO_NOMBRE','WHERE SITIO_BORRADO=0',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (30,'Almacen Vec','EC_ALMACEN_VEC','ALMACEN_VEC_ID','ALMACEN_VEC_NOMBRE','WHERE ALMACEN_VEC_BORRADO=0',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (31,'Modelos de Terminales','EC_MODELOS_TERMINALES','MODELO_TERMINAL_ID','MODELO_TERMINAL_NOMBRE','WHERE MODELO_TERMINAL_BORRADO=0',0); 

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (32,'Formato de Reporte','EC_FORMATOS_REP','FORMATO_REP_ID','FORMATO_REP_NOMBRE','WHERE FORMATO_REP_BORRADO=0',0); 

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (33,'Usuarios','EC_USUARIOS','USUARIO_ID','USUARIO_NOMBRE','WHERE USUARIO_BORRADO=0',0); 

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) VALUES (34,'Reportes','EC_REPORTES','REPORTE_ID','REPORTE_NOMBRE','WHERE REPORTE_BORRADO=0',0); 

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) 

VALUES (35,'Tipo de justificacion','EC_TIPO_FALTA_EX','TIPO_FALTA_EX_ID','TIPO_FALTA_EX_NOMBRE','',0); 

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) 
VALUES (36,'Incidencias de Nomina','EC_TIPO_INCIDENCIAS_EX','TIPO_INCIDENCIAS_EX_ID','TIPO_INCIDENCIAS_EX_NOMBRE','WHERE TIPO_INCIDENCIAS_EX_BORRADO=0 OR TIPO_INCIDENCIAS_EX_ID=1',0); 
UPDATE EC_CATALOGOS SET CATALOGO_C_DESC = 'TIPO_INCIDENCIA_NOMBRE' WHERE CATALOGO_ID = 23;
INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO)  
VALUES (37,'Reglas de vacaciones','EC_REGLAS_VACA','REGLA_VACA_ID','REGLA_VACA_NOMBRE','WHERE REGLA_VACA_BORRADO=0',0);  
INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO)   
VALUES (38,'Tipo de disfrute de vacaciones','EC_TIPOS_VACA_DISFRUTA','TIPO_VACA_DISFRUTA_ID','TIPO_VACA_DISFRUTA_NOMBRE','',0);  
INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) 
VALUES (39,'Usuarios con E-Mail','EC_USUARIOS','USUARIO_ID','USUARIO_NOMBRE','WHERE (USUARIO_EMAIL IS NOT NULL) AND (USUARIO_EMAIL <> '') AND (USUARIO_BORRADO = 0)',0);

INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO) 
VALUES (40,'Tipo de Permiso','EC_TIPO_PERMISOS','TIPO_PERMISO_ID','TIPO_PERMISO_NOMBRE','',0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA ,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_QA_SQL,CATALOGO_BORRADO)  
VALUES (41,'Tipo de registro','EC_TIPO_TERM_DEXTRAS','TIPO_TERM_DEXTRAS_ID','TIPO_TERM_DEXTRAS_NOMBRE','',0); 
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA, CATALOGO_QA_SQL, CATALOGO_BORRADO)     
 VALUES( 42, 'Perfiles Renta' , 'EC_PERFILES', 'PERFIL_ID', 'PERFIL_NOMBRE', '','WHERE PERFIL_BORRADO = 0 AND PERFIL_ID > 3',1);   
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)   
 VALUES( 43, 'Estado Periodo' , 'EC_EDO_PERIODO', 'EDO_PERIODO_ID', 'EDO_PERIODO_NOMBRE', 0);    
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)    
 VALUES( 44, 'Estado Solicitud' , 'EC_EDO_SOLICITUD', 'EDO_SOLICITUD_ID', 'EDO_SOLICITUD_NOMBRE', 0);   
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)     
 VALUES( 45, 'Tipo Mov' , 'EC_TIPO_ALMACEN_INC', 'TIPO_ALMACEN_INC_ID', 'TIPO_ALMACEN_INC_NOMBRE', 0);    
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)      
 VALUES( 46, 'Tipo Terminal Acc' , 'EC_TIPO_TERMINAL_ACCESO', 'TIPO_TERMINAL_ACCESO_ID', 'TIPO_TERMINAL_ACCESO_NOMBRE', 0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)     
 VALUES( 47, 'Nom. Periodo' , 'EC_PERIODOS_N', 'PERIODO_N_ID', 'PERIODO_N_NOM', 0);    
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)      
 VALUES( 48, 'Config. Usuario' , 'EC_CONFIG_USUARIO', 'CONFIG_USUARIO_ID', 'CONFIG_USUARIO_VARIABLE', 0);
 INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)        
 VALUES( 50, 'Suscripcion Precios' , 'EC_SUSCRIP_PRECIOS', 'SUSCRIP_PRECIO_ID', 'SUSCRIP_PRECIO_DESC', 0);
 INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)         
 VALUES( 51, 'Estado Suscripcion' , 'EC_EDO_SUSCRIPCION', 'EDO_SUSCRIPCION_ID', 'EDO_SUSCRIPCION', 0);
 INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)           
 VALUES( 52, 'Nombre Suscripcion' , 'EC_SUSCRIPCION', 'SUSCRIPCION_ID', 'SUSCRIPCION_NOMBRE', 0); 
 INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)           
 VALUES( 53, 'Tipo de Publicidad' , 'EC_TIPO_PUBLICIDAD', 'TIPO_PUBLICIDAD_ID', 'TIPO_PUBLICIDAD_NOMBRE', 0); 
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO) 
 VALUES (54, 'Recompensas', 'EC_RECOMPENSAS', 'RECOMPENSA_ID', 'RECOMPENSA_COMEN', 0);
INSERT INTO EC_CATALOGOS(CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO) 
 VALUES (55, 'Estado de las Suscripciones', 'EC_EDO_SUSCRIPCION', 'EDO_SUSCRIPCION_ID', 'EDO_SUSCRIPCION', 0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO) 
 VALUES (56, 'Origen de Licencias', 'EC_LICENCIAS_ORIGEN', 'LICENCIA_ORIGEN_ID', 'LICENCIA_ORIGEN', 0);
INSERT INTO EC_CATALOGOS ( CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO) 
 VALUES (57, 'Distribuidores de Licencias', 'EC_LICENCIAS_DISTRIBUIDORES', 'LICENCIA_DISTRIBUIDOR_ID', 'LICENCIA_DISTRIBUIDOR', 0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO) 
 VALUES (58, 'Estado de las Actividades', 'EC_EDO_ACTIVIDAD', 'EDO_ACTIVIDAD_ID', 'EDO_ACTIVIDAD_NOMBRE', 0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)  
 VALUES (59, 'Actividades', 'EC_ACTIVIDADES', 'ACTIVIDAD_ID', 'ACTIVIDAD_NOMBRE', 0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO) 
 VALUES (60, 'Tipos de Tramites', 'EC_TIPO_TRAMITE', 'TIPO_TRAMITE_ID', 'TIPO_TRAMITE_NOMBRE', 0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO) 
 VALUES (61, 'Tipos de Prioridades', 'EC_TIPO_PRIORIDADES', 'TIPO_PRIORIDAD_ID', 'TIPO_PRIORIDAD_NOMBRE',0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO) 
 VALUES (62, 'Servidores de Reportes', 'EC_REPORTES_SRV', 'REPORTE_SRV_ID', 'REPORTE_SRV_NOMBRE', 0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID ,CATALOGO_NOMBRE ,CATALOGO_TABLA ,CATALOGO_C_LLAVE , CATALOGO_C_DESC ,CATALOGO_C_EXTRA ,CATALOGO_QA_SQL ,CATALOGO_M_NSEL ,CATALOGO_BORRADO ,CATALOGO_ALIAS)
     VALUES (63, 'Intervalos de Tiempo', 'EC_TIMESPAN', 'TIMESPAN_ID', 'TIMESPAN_NOMBRE', '', '', 0, 0, '');
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA, CATALOGO_QA_SQL, CATALOGO_M_NSEL, CATALOGO_BORRADO, CATALOGO_ALIAS)
     VALUES (64, 'Tipos de Unidades', 'EC_TIPO_UNIDADES', 'TIPO_UNIDAD_ID', 'TIPO_UNIDAD_NOMBRE', '', '', 0, 0, '' );
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA, CATALOGO_QA_SQL, CATALOGO_M_NSEL, CATALOGO_BORRADO, CATALOGO_ALIAS)
     VALUES (65, 'Tipos de Redondeo', 'EC_TIPO_REDONDEO', 'TIPO_REDONDEO_ID', 'TIPO_REDONDEO_NOMBRE', '', '', 0, 0, '');
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA, CATALOGO_QA_SQL, CATALOGO_M_NSEL, CATALOGO_BORRADO, CATALOGO_ALIAS)
     VALUES (66, 'Tipos de Clendario', 'EC_CALENDARIOS_DF', 'CALENDARIO_DF_ID', 'CALENDARIO_DF_NOMBRE', '', '', 0, 0, '');
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA, CATALOGO_QA_SQL, CATALOGO_M_NSEL, CATALOGO_BORRADO, CATALOGO_ALIAS)
     VALUES (67, 'Tipos de reglas incidencias', 'EC_TIPO_INCIDENCIAS_R', 'TIPO_INCIDENCIA_R_ID', 'TIPO_INCIDENCIA_R_DESC', '', '', 0, 0, 'TIPO_INCIDENCIA_R_ID_INV');
DELETE FROM EC_CATALOGOS WHERE CATALOGO_ID = 59;
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_C_EXTRA, CATALOGO_QA_SQL, CATALOGO_M_NSEL, CATALOGO_BORRADO, CATALOGO_ALIAS) 
     VALUES (68, 'Tipos de incidencias de accesos', 'EC_T_INC_ACCESO', 'T_INC_ACCESO_ID', 'T_INC_ACCESO_NOMBRE', '', '', 0, 0, ''); 
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO) 
     VALUES (69, 'Tipos de Nominas', 'EC_TIPO_NOMINA', 'TIPO_NOMINA_ID', 'TIPO_NOMINA_NOMBRE', 0);
DELETE EC_CATALOGOS WHERE CATALOGO_ID IN (70,71,72);
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO) VALUES (70, 'Recibos de Nominas', 'EC_REC_NOMINAS', 'REC_NOMINA_ID', 'REC_NOMINA_COMENTARIOS', 0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO) VALUES (71, 'Tipos de Movimientos para Nomina', 'EC_CLASIFIC_MOV', 'CLASIFIC_MOV_ID', 'CLASIFIC_MOV_NOMBRE', 0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID, CATALOGO_NOMBRE, CATALOGO_TABLA, CATALOGO_C_LLAVE, CATALOGO_C_DESC, CATALOGO_BORRADO)  VALUES (72, 'Sistema de Nómina', 'EC_SISTEMAS_NOMINA', 'SISTEMA_NOMINA_ID', 'SISTEMA_NOMINA_NOMBRE', 0);
INSERT INTO EC_CATALOGOS (CATALOGO_ID,CATALOGO_NOMBRE,CATALOGO_TABLA,CATALOGO_C_LLAVE,CATALOGO_C_DESC,CATALOGO_C_EXTRA,CATALOGO_QA_SQL,CATALOGO_M_NSEL,CATALOGO_BORRADO,CATALOGO_ALIAS) VALUES(73,'Tablas de Suscripción','EC_TABLAS_SUS','TABLA_SUS_ID','TABLA_SUS_NOMBRE','','','0','0','');

GO













CREATE TABLE EC_CATALOGOS_DATOS (
  CATALOGO_DATO_ID INTEGER  NOT NULL  ,
  CATALOGO_DATO_LLAVE VARCHAR(45)    ,
  CATALOGO_DATO_DESC VARCHAR(255)      ,
PRIMARY KEY(CATALOGO_DATO_ID));
GO






CREATE TABLE EC_CLASIFIC_MOV (
  CLASIFIC_MOV_ID INTEGER  NOT NULL  ,
  CLASIFIC_MOV_NOMBRE VARCHAR(255)    ,
  CLASIFIC_MOV_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(CLASIFIC_MOV_ID));
GO


INSERT INTO EC_CLASIFIC_MOV (CLASIFIC_MOV_ID, CLASIFIC_MOV_NOMBRE) VALUES(0,'Sin Clasificacion');
INSERT INTO EC_CLASIFIC_MOV (CLASIFIC_MOV_ID, CLASIFIC_MOV_NOMBRE) VALUES(1,'Percepciones'); 
INSERT INTO EC_CLASIFIC_MOV (CLASIFIC_MOV_ID, CLASIFIC_MOV_NOMBRE) VALUES(2,'Deducciones'); 

GO






-- ------------------------------------------------------------
-- Los parámetros generales se deberán guardar en esta tabla
-- ------------------------------------------------------------

CREATE TABLE EC_CONFIG_USUARIO (
  CONFIG_USUARIO_ID INTEGER UNSIGNED  NOT NULL  ,
  USUARIO_ID INTEGER  NOT NULL  ,
  CONFIG_USUARIO_VARIABLE VARCHAR(1024)  NOT NULL  ,
  CONFIG_USUARIO_VALOR VARCHAR(4000)    ,
  CONFIG_USUARIO_VALOR_BIN BLOB      ,
PRIMARY KEY(CONFIG_USUARIO_ID)  );
GO


CREATE INDEX EC_CONFIG_USUARIOFKI1 ON EC_CONFIG_USUARIO (USUARIO_ID);
GO


 
INSERT INTO EC_CONFIG_USUARIO (CONFIG_USUARIO_ID, USUARIO_ID, CONFIG_USUARIO_VARIABLE, CONFIG_USUARIO_VALOR) VALUES (1,0,'SyncTimeOut','6'); 
 
INSERT INTO EC_CONFIG_USUARIO (CONFIG_USUARIO_ID, USUARIO_ID, CONFIG_USUARIO_VARIABLE, CONFIG_USUARIO_VALOR) VALUES (2,0,'TERMINAL_ID_ENROLA','1');  
INSERT INTO EC_CONFIG_USUARIO (CONFIG_USUARIO_ID, USUARIO_ID, CONFIG_USUARIO_VARIABLE, CONFIG_USUARIO_VALOR) VALUES (3,0,'CMd_Mails.Habilitado','True'); 

GO








-- ------------------------------------------------------------
-- Contiene un listado de todos los dias festivos asignados a los empleados y se deberan cargar para cada año, en un futuro se debería permitir elejir a quienes se les asignara estos dias festivos pero por ahora es a todos los empleados
--  
-- ------------------------------------------------------------

CREATE TABLE EC_DIAS_FESTIVOS (
  DIA_FESTIVO_ID INTEGER UNSIGNED  NOT NULL  ,
  CALENDARIO_DF_ID INTEGER   DEFAULT 0 ,
  DIA_FESTIVO_FECHA DATE  NOT NULL  ,
  DIA_FESTIVO_NOMBRE VARCHAR(45)  NOT NULL  ,
  DIA_FESTIVO_COLOR INTEGER    ,
  DIA_FESTIVO_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(DIA_FESTIVO_ID)  );
GO


CREATE INDEX EC_DIAS_FESTIVOS_FKIndex1 ON EC_DIAS_FESTIVOS (CALENDARIO_DF_ID);
GO



INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (1,0, Convert(datetime,'04/02/2008',103),'Aniversario de la constitución',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (2,0, Convert(datetime,'01/01/2008',103),'Año nuevo',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (3,0, Convert(datetime,'17/03/2008',103),'Natalicio de Benito Juarez',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (4,0, Convert(datetime,'01/05/2008',103),'Día del trabajo',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (5,0, Convert(datetime,'16/09/2008',103),'Aniversario de la Independencia de México',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (6,0, Convert(datetime,'17/11/2008',103),'Aniversario de la Revolución Mexicana',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (7,0, Convert(datetime,'25/12/2008',103),'Navidad',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (8,0, Convert(datetime,'02/02/2009',103),'Aniversario de la constitución',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (9,0, Convert(datetime,'01/01/2009',103),'Año nuevo',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (10,0, Convert(datetime,'16/03/2009',103),'Natalicio de Benito Juarez',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (11,0, Convert(datetime,'01/05/2009',103),'Día del trabajo',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (12,0, Convert(datetime,'16/09/2009',103),'Aniversario de la Independencia de México',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (13,0, Convert(datetime,'16/11/2009',103),'Aniversario de la Revolución Mexicana',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (14,0, Convert(datetime,'25/12/2009',103),'Navidad',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (15,0, Convert(datetime,'01/02/2010',103),'Aniversario de la constitución',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (16,0, Convert(datetime,'01/01/2010',103),'Año nuevo',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (17,0, Convert(datetime,'15/03/2010',103),'Natalicio de Benito Juarez',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (18,0, Convert(datetime,'01/05/2010',103),'Día del trabajo',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (19,0, Convert(datetime,'16/09/2010',103),'Aniversario de la Independencia de México',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (20,0, Convert(datetime,'15/11/2010',103),'Aniversario de la Revolución Mexicana',0);
INSERT INTO [EC_DIAS_FESTIVOS]
           ([DIA_FESTIVO_ID]
           ,[CALENDARIO_DF_ID]
           ,[DIA_FESTIVO_FECHA]
           ,[DIA_FESTIVO_NOMBRE]
           ,[DIA_FESTIVO_BORRADO])
     VALUES
           (21,0, Convert(datetime,'25/12/2010',103),'Navidad',0);

GO








-- ------------------------------------------------------------
-- Listados de los dias de la semana
-- 1. Domingo - 
-- 7. Sábado
-- 0. Ninguno
-- 8. Todos
-- 
-- ------------------------------------------------------------

CREATE TABLE EC_DIAS_SEMANA (
  DIA_SEMANA_ID INTEGER UNSIGNED  NOT NULL  ,
  DIA_SEMANA_NOMBRE VARCHAR(45)  NOT NULL  ,
  DIA_SEMANA_NORMAL BOOL  NOT NULL DEFAULT 0   ,
PRIMARY KEY(DIA_SEMANA_ID));
GO



INSERT INTO EC_DIAS_SEMANA (DIA_SEMANA_ID, DIA_SEMANA_NOMBRE, DIA_SEMANA_NORMAL) VALUES(0, 'Ninguno',0); 
INSERT INTO EC_DIAS_SEMANA (DIA_SEMANA_ID, DIA_SEMANA_NOMBRE, DIA_SEMANA_NORMAL) VALUES(1, 'Domingo',1); 
INSERT INTO EC_DIAS_SEMANA (DIA_SEMANA_ID, DIA_SEMANA_NOMBRE, DIA_SEMANA_NORMAL) VALUES(2, 'Lunes',1); 
INSERT INTO EC_DIAS_SEMANA (DIA_SEMANA_ID, DIA_SEMANA_NOMBRE, DIA_SEMANA_NORMAL) VALUES(3, 'Martes',1);  
INSERT INTO EC_DIAS_SEMANA (DIA_SEMANA_ID, DIA_SEMANA_NOMBRE, DIA_SEMANA_NORMAL) VALUES(4, 'Miercoles',1); 
INSERT INTO EC_DIAS_SEMANA (DIA_SEMANA_ID, DIA_SEMANA_NOMBRE, DIA_SEMANA_NORMAL) VALUES(5, 'Jueves',1);  
INSERT INTO EC_DIAS_SEMANA (DIA_SEMANA_ID, DIA_SEMANA_NOMBRE, DIA_SEMANA_NORMAL) VALUES(6, 'Viernes',1);   
INSERT INTO EC_DIAS_SEMANA (DIA_SEMANA_ID, DIA_SEMANA_NOMBRE, DIA_SEMANA_NORMAL) VALUES(7, 'Sabado',1);  
INSERT INTO EC_DIAS_SEMANA (DIA_SEMANA_ID, DIA_SEMANA_NOMBRE, DIA_SEMANA_NORMAL) VALUES(8, 'Todos los dias',0); 

GO






-- ------------------------------------------------------------
-- Contiene las Fecha de todos los dias desde 1-01-2004 hasta 01-01-2014 -1
-- ------------------------------------------------------------

CREATE TABLE EC_DIAS_TRABAJO (
  DIAS_TRABAJO DATE  NOT NULL    ,
PRIMARY KEY(DIAS_TRABAJO));
GO




-- ------------------------------------------------------------
-- En caso de que una persona tenga asignado el diseño 0 y existan otros diseños se puede imprimir con otro diseño si conincide el SQL del segundo
-- ------------------------------------------------------------

CREATE TABLE EC_DISENOS (
  DISENO_ID INTEGER UNSIGNED  NOT NULL  ,
  DISENO_NOMBRE VARCHAR(45)    ,
  DISENO_SQL VARCHAR(255)    ,
  DISENO_DISENO BLOB    ,
  DISENO_DISENO_IMA BLOB    ,
  DISENO_DISENO_IMA_REV BLOB    ,
  DISENO_DISENO_THUMB BLOB    ,
  DISENO_F_CREADO DATETIME    ,
  DISENO_F_EDITADO DATETIME    ,
  DISENO_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(DISENO_ID));
GO



INSERT INTO EC_DISENOS (DISENO_ID, DISENO_NOMBRE, DISENO_SQL) VALUES(0,'Diseño predeterminado','SELECT PERSONA_ID FROM EC_PERSONAS');

GO












CREATE TABLE EC_EDO_ACTIVIDAD (
  EDO_ACTIVIDAD_ID INTEGER  NOT NULL  ,
  EDO_ACTIVIDAD_NOMBRE VARCHAR(255)    ,
  EDO_ACTIVIDAD_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(EDO_ACTIVIDAD_ID));
GO


INSERT INTO EC_EDO_ACTIVIDAD (EDO_ACTIVIDAD_ID, EDO_ACTIVIDAD_NOMBRE, EDO_ACTIVIDAD_BORRADO) VALUES(
0,'No definido',1);
INSERT INTO EC_EDO_ACTIVIDAD (EDO_ACTIVIDAD_ID, EDO_ACTIVIDAD_NOMBRE, EDO_ACTIVIDAD_BORRADO) VALUES( 
1,'Disponible',0);
INSERT INTO EC_EDO_ACTIVIDAD (EDO_ACTIVIDAD_ID, EDO_ACTIVIDAD_NOMBRE, EDO_ACTIVIDAD_BORRADO) VALUES( 
2,'Cupo Agotado',0);
INSERT INTO EC_EDO_ACTIVIDAD (EDO_ACTIVIDAD_ID, EDO_ACTIVIDAD_NOMBRE, EDO_ACTIVIDAD_BORRADO) VALUES( 
3,'Cancelada',0);
INSERT INTO EC_EDO_ACTIVIDAD (EDO_ACTIVIDAD_ID, EDO_ACTIVIDAD_NOMBRE, EDO_ACTIVIDAD_BORRADO) VALUES(  
4,'Pospuesta',0);

GO





CREATE TABLE EC_EDO_PERIODO (
  EDO_PERIODO_ID INTEGER  NOT NULL  ,
  EDO_PERIODO_NOMBRE VARCHAR(50)      ,
PRIMARY KEY(EDO_PERIODO_ID));
GO


INSERT INTO EC_EDO_PERIODO (EDO_PERIODO_ID, EDO_PERIODO_NOMBRE) VALUES(0, 'No procesado' );
INSERT INTO EC_EDO_PERIODO (EDO_PERIODO_ID, EDO_PERIODO_NOMBRE) VALUES(1, 'Actual' );  
INSERT INTO EC_EDO_PERIODO (EDO_PERIODO_ID, EDO_PERIODO_NOMBRE) VALUES(2, 'Cerrado' );  

GO





CREATE TABLE EC_EDO_SOLICITUD (
  EDO_SOLICITUD_ID INTEGER  NOT NULL  ,
  EDO_SOLICITUD_NOMBRE VARCHAR(45)      ,
PRIMARY KEY(EDO_SOLICITUD_ID));
GO


INSERT INTO EC_EDO_SOLICITUD (EDO_SOLICITUD_ID, EDO_SOLICITUD_NOMBRE) VALUES(0, 'Pendiente');
INSERT INTO EC_EDO_SOLICITUD (EDO_SOLICITUD_ID, EDO_SOLICITUD_NOMBRE) VALUES(1, 'Revisado');
INSERT INTO EC_EDO_SOLICITUD (EDO_SOLICITUD_ID, EDO_SOLICITUD_NOMBRE) VALUES(2, 'Autorizado');
INSERT INTO EC_EDO_SOLICITUD (EDO_SOLICITUD_ID, EDO_SOLICITUD_NOMBRE) VALUES(3, 'Denegado');
INSERT INTO EC_EDO_SOLICITUD (EDO_SOLICITUD_ID, EDO_SOLICITUD_NOMBRE) VALUES(4, 'Cerrado');

GO




CREATE TABLE EC_EDO_SUSCRIPCION (
  EDO_SUSCRIPCION_ID INTEGER  NOT NULL  ,
  EDO_SUSCRIPCION VARCHAR(255)      ,
PRIMARY KEY(EDO_SUSCRIPCION_ID));
GO


INSERT INTO EC_EDO_SUSCRIPCION (EDO_SUSCRIPCION_ID, EDO_SUSCRIPCION) VALUES(0,'Inactivo');
INSERT INTO EC_EDO_SUSCRIPCION (EDO_SUSCRIPCION_ID, EDO_SUSCRIPCION) VALUES(1,'Evaluacion');
INSERT INTO EC_EDO_SUSCRIPCION (EDO_SUSCRIPCION_ID, EDO_SUSCRIPCION) VALUES(2,'SaS');
INSERT INTO EC_EDO_SUSCRIPCION (EDO_SUSCRIPCION_ID, EDO_SUSCRIPCION) VALUES(3,'Compra');
INSERT INTO EC_EDO_SUSCRIPCION (EDO_SUSCRIPCION_ID, EDO_SUSCRIPCION) VALUES(-1,'Suspendida');
INSERT INTO EC_EDO_SUSCRIPCION (EDO_SUSCRIPCION_ID, EDO_SUSCRIPCION) VALUES(-2,'Cancelada');

GO





-- ------------------------------------------------------------
-- Contiene las reglas para la ejecución del envío de reportes de forma periodica
-- ------------------------------------------------------------

CREATE TABLE EC_ENV_REPORTES (
  ENV_REPORTE_ID INTEGER UNSIGNED  NOT NULL  ,
  USUARIO_ID INTEGER  NOT NULL  ,
  ENV_REPORTE_EMAIL VARCHAR(45)    ,
  FORMATO_REP_ID INTEGER UNSIGNED  NOT NULL DEFAULT 0 ,
  REPORTE_ID INTEGER UNSIGNED  NOT NULL  ,
  ENV_REPORTE_DESCRIPCION VARCHAR(255)    ,
  ENV_REPORTE_FECHAHORA DATETIME    ,
  ENV_REPORTE_FECHAHORAC DATETIME    ,
  ENV_REPORTE_C_DIAS INTEGER    ,
  ENV_REPORTE_DIAS_INI INTEGER   DEFAULT 0 ,
  ENV_REPORTE_DIAS_FIN INTEGER   DEFAULT 0 ,
  ENV_REPORTE_EUVEZ BOOL    ,
  ENV_REPORTE_FECHAHORAE DATETIME    ,
  ENV_REPORTE_BORRADO BOOL      ,
PRIMARY KEY(ENV_REPORTE_ID)      );
GO


CREATE INDEX EC_ENV_REPORTES_FKIndex1 ON EC_ENV_REPORTES (REPORTE_ID);
GO
CREATE INDEX EC_ENV_REPORTES_FKIndex2 ON EC_ENV_REPORTES (FORMATO_REP_ID);
GO
CREATE INDEX EC_ENV_REPORTES_FKIndex3 ON EC_ENV_REPORTES (USUARIO_ID);
GO

















CREATE TABLE EC_FORMATOS_REP (
  FORMATO_REP_ID INTEGER UNSIGNED  NOT NULL  ,
  FORMATO_REP_NOMBRE VARCHAR(45)    ,
  FORMATO_REP_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(FORMATO_REP_ID));
GO



INSERT INTO EC_FORMATOS_REP (FORMATO_REP_ID, FORMATO_REP_NOMBRE) VALUES(0, 'PDF');
INSERT INTO EC_FORMATOS_REP (FORMATO_REP_ID, FORMATO_REP_NOMBRE) VALUES(1, 'XLS');

GO






-- ------------------------------------------------------------
-- En caso de que se realice una incidencia como incapacidad, vacaciones, etc existira un registro
-- 0. No hay incidencias adicionales (justificación), Tipo_Incidencia = 0
-- 
-- ------------------------------------------------------------

CREATE TABLE EC_INCIDENCIAS (
  INCIDENCIA_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_INCIDENCIA_ID INTEGER UNSIGNED  NOT NULL  ,
  INCIDENCIA_COMENTARIO VARCHAR(4000)    ,
  INCIDENCIA_FECHAHORA DATETIME    ,
  INCIDENCIA_EXTRAS VARCHAR(4000)    ,
  SESION_ID INTEGER UNSIGNED  NOT NULL    ,
PRIMARY KEY(INCIDENCIA_ID)    );
GO


CREATE INDEX EC_INCIDENCIASFKI1 ON EC_INCIDENCIAS (TIPO_INCIDENCIA_ID);
GO
CREATE INDEX EC_INCIDENCIASFKI2 ON EC_INCIDENCIAS (SESION_ID);
GO



INSERT INTO EC_INCIDENCIAS (INCIDENCIA_ID, TIPO_INCIDENCIA_ID, SESION_ID) VALUES(0, 0,0);

GO









CREATE TABLE EC_INCIDENCIAS_EX (
  INCIDENCIA_EX_ID INTEGER  NOT NULL  ,
  PERSONA_ID INTEGER  NOT NULL  ,
  TIPO_INCIDENCIAS_EX_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_ORIGEN_INC_EX_ID INTEGER  NOT NULL  ,
  INCIDENCIA_EX_ORIGEN_ID INTEGER   DEFAULT 0 ,
  INCIDENCIA_EX_FECHA DATE    ,
  INCIDENCIA_EX_VARIABLE1 DECIMAL    ,
  INCIDENCIA_EX_VARIABLE2 DECIMAL    ,
  INCIDENCIA_EX_VARIABLE3 DECIMAL    ,
  INCIDENCIA_EX_VARIABLE4 DECIMAL    ,
  INCIDENCIA_EX_VARIABLE5 DECIMAL    ,
  INCIDENCIA_EX_REFERENCIA1 VARCHAR(20)    ,
  INCIDENCIA_EX_REFERENCIA2 VARCHAR(20)    ,
  INCIDENCIA_EX_REFERENCIA3 VARCHAR(20)    ,
  INCIDENCIA_EX_REFERENCIA4 VARCHAR(20)    ,
  INCIDENCIA_EX_REFERENCIA5 VARCHAR(20)    ,
  INCIDENCIA_EX_ESTADO INTEGER   DEFAULT 0   ,
PRIMARY KEY(INCIDENCIA_EX_ID)      );
GO


CREATE INDEX EC_INCIDENCIAS_EX_FKIndex1 ON EC_INCIDENCIAS_EX (TIPO_ORIGEN_INC_EX_ID);
GO
CREATE INDEX EC_INCIDENCIAS_EX_FKIndex2 ON EC_INCIDENCIAS_EX (TIPO_INCIDENCIAS_EX_ID);
GO
CREATE INDEX EC_INCIDENCIAS_EX_FKIndex3 ON EC_INCIDENCIAS_EX (PERSONA_ID);
GO
















-- ------------------------------------------------------------
-- Detalle de tipo de inventario, reglas por año
-- ------------------------------------------------------------

CREATE TABLE EC_INC_REGLA_CICLOS (
  INC_REGLA_CICLO_ID INTEGER  NOT NULL  ,
  TIPO_INCIDENCIA_R_ID INTEGER  NOT NULL  ,
  INC_REGLA_CICLO_NO INTEGER    ,
  INC_REGLA_CICLO_INCR INTEGER      ,
PRIMARY KEY(INC_REGLA_CICLO_ID)  );
GO


CREATE INDEX EC_INVENTARIO_INC_REGLA_FKIndex1 ON EC_INC_REGLA_CICLOS (TIPO_INCIDENCIA_R_ID);
GO


INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(1,1,1,6);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(2,1,2,8);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(3,1,3,10);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(4,1,4,12);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(5,1,5,14);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(6,1,6,14);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(7,1,7,14);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(8,1,8,14);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(9,1,9,14);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(10,1,10,18);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(11,1,11,18);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(12,1,12,18);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(13,1,13,18);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(14,1,14,18);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(15,1,15,18);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(16,1,16,18);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(17,1,17,18);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(18,1,18,18);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(19,1,19,18);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(20,1,20,20);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(21,1,21,20);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(22,1,22,20);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(23,1,23,20);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(24,1,24,20);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(25,1,25,22);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(26,1,26,22);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(27,1,27,22);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(28,1,28,22);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(29,1,29,30);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(30,1,30,30);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(31,1,31,30);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(32,1,32,30);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(33,1,33,32);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(34,1,34,32);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(35,1,35,32);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(36,1,36,32);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(37,1,37,34);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(38,1,38,34);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(39,1,39,34);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(40,1,40,34);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(41,1,41,36);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(42,1,42,36);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(43,1,43,36);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(44,1,44,36);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(45,1,45,38);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(46,1,46,38);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(47,1,47,38);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(48,1,48,38);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(49,1,49,40);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(50,1,50,40);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(51,1,51,40);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(52,1,52,40);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(53,1,53,42);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(54,1,54,42);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(55,1,55,42);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(56,1,56,42);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(57,1,57,44);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(58,1,58,44);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(59,1,59,44);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(60,1,60,44);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(61,1,61,46);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(62,1,62,46);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(63,1,63,46);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(64,1,64,46);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(65,1,65,48);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(66,1,66,48);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(67,1,67,48);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(68,1,68,48);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(69,1,69,50);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(70,1,70,50);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(71,1,71,50);
INSERT INTO EC_INC_REGLA_CICLOS (INC_REGLA_CICLO_ID, TIPO_INCIDENCIA_R_ID, INC_REGLA_CICLO_NO, INC_REGLA_CICLO_INCR) VALUES(72,1,72,50);

GO






CREATE TABLE EC_LICENCIAS (
  LICENCIA_ID INTEGER  NOT NULL  ,
  LICENCIA_ORIGEN_ID INTEGER  NOT NULL  ,
  LICENCIA_DISTRIBUIDOR_ID INTEGER  NOT NULL  ,
  USUARIO_ID INTEGER  NOT NULL DEFAULT 0 ,
  SUSCRIPCION_ID INTEGER  NOT NULL DEFAULT 0 ,
  LICENCIA VARCHAR(255)    ,
  LICENCIA_CREACIONFH DATETIME    ,
  LICENCIA_VIGENCIAFH DATETIME    ,
  LICENCIA_INSTALACIONFH DATETIME    ,
  LICENCIA_COMPRAFH DATETIME    ,
  LICENCIA_INSTALACIONES INTEGER   DEFAULT 0 ,
  LICENCIA_USOFH DATETIME    ,
  LICENCIA_SOFTWARE VARCHAR(255)    ,
  LICENCIA_SOFTWARE_ACT BOOL    ,
  LICENCIA_MAQUINA VARCHAR(255)    ,
  LICENCIA_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(LICENCIA_ID)        );
GO


CREATE INDEX EC_LICENCIAS_FKIndex1 ON EC_LICENCIAS (SUSCRIPCION_ID);
GO
CREATE INDEX EC_LICENCIAS_FKIndex2 ON EC_LICENCIAS (USUARIO_ID);
GO
CREATE INDEX EC_LICENCIAS_FKIndex3 ON EC_LICENCIAS (LICENCIA_DISTRIBUIDOR_ID);
GO
CREATE INDEX EC_LICENCIAS_FKIndex4 ON EC_LICENCIAS (LICENCIA_ORIGEN_ID);
GO
















CREATE TABLE EC_LICENCIAS_DISTRIBUIDORES (
  LICENCIA_DISTRIBUIDOR_ID INTEGER  NOT NULL  ,
  LICENCIA_DISTRIBUIDOR VARCHAR(255)    ,
  SUSCRIPCION_ID INTEGER  NOT NULL  ,
  LICENCIA_DISTRIBUIDOR_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(LICENCIA_DISTRIBUIDOR_ID)  );
GO


CREATE INDEX EC_LICENCIAS_DISTRIBUIDORES_FKIndex1 ON EC_LICENCIAS_DISTRIBUIDORES (SUSCRIPCION_ID);
GO


INSERT INTO EC_LICENCIAS_DISTRIBUIDORES (LICENCIA_DISTRIBUIDOR_ID, LICENCIA_DISTRIBUIDOR, SUSCRIPCION_ID,LICENCIA_DISTRIBUIDOR_BORRADO) 
VALUES(0, 'EntryTec',0,0);

GO






CREATE TABLE EC_LICENCIAS_ORIGEN (
  LICENCIA_ORIGEN_ID INTEGER  NOT NULL  ,
  LICENCIA_ORIGEN VARCHAR(255)    ,
  LICENCIA_ORIGEN_BORRADO INTEGER UNSIGNED   DEFAULT 0   ,
PRIMARY KEY(LICENCIA_ORIGEN_ID));
GO


INSERT INTO EC_LICENCIAS_ORIGEN (LICENCIA_ORIGEN_ID, LICENCIA_ORIGEN, LICENCIA_ORIGEN_BORRADO) 
VALUES(0, 'Desconocido',0);
INSERT INTO EC_LICENCIAS_ORIGEN (LICENCIA_ORIGEN_ID, LICENCIA_ORIGEN, LICENCIA_ORIGEN_BORRADO) 
VALUES(1, 'Almacen',0);
INSERT INTO EC_LICENCIAS_ORIGEN (LICENCIA_ORIGEN_ID, LICENCIA_ORIGEN, LICENCIA_ORIGEN_BORRADO) 
VALUES(2, 'Postales',0);
INSERT INTO EC_LICENCIAS_ORIGEN (LICENCIA_ORIGEN_ID, LICENCIA_ORIGEN, LICENCIA_ORIGEN_BORRADO) 
VALUES(3, 'Aerogenerado',0);

GO






CREATE TABLE EC_LOCALIZACIONES (
  LOCALIZACION_ID INTEGER  NOT NULL  ,
  LOCALIZACION_IDIOMA VARCHAR(45)    ,
  LOCALIZACION_LLAVE VARCHAR(255)    ,
  LOCALIZACION_ETIQUETA VARCHAR(255)    ,
  LOCALIZACION_DESCRIPCION VARCHAR(255)    ,
  LOCALIZACION_AYUDA VARCHAR(255)    ,
  LOCALIZACION_IMAGEN VARCHAR(255)    ,
  LOCALIZACION_ALTMENU VARCHAR(45)    ,
  LOCALIZACION_HTML VARCHAR(255)      ,
PRIMARY KEY(LOCALIZACION_ID)  );
GO


CREATE UNIQUE INDEX EC_LOCALIZACIONES_I ON EC_LOCALIZACIONES (LOCALIZACION_IDIOMA, LOCALIZACION_LLAVE);
GO












-- ------------------------------------------------------------
-- Para las acciones que realiza un usuario se generara un registro en esta tabla
-- ------------------------------------------------------------

CREATE TABLE EC_LOG_AUDITORIA (
  LOG_AUDITORIA_ID INTEGER UNSIGNED  NOT NULL  ,
  SESION_ID INTEGER UNSIGNED  NOT NULL  ,
  LOG_AUDITORIA_FECHAHORA DATETIME  NOT NULL  ,
  TIPO_AUDITORIA_ID INTEGER UNSIGNED  NOT NULL DEFAULT 0 ,
  LOG_AUDITORIA_DESCRIPCION VARCHAR(255)  NOT NULL    ,
PRIMARY KEY(LOG_AUDITORIA_ID)    );
GO


CREATE INDEX EC_LOG_AUDITORIAFKI1 ON EC_LOG_AUDITORIA (TIPO_AUDITORIA_ID);
GO
CREATE INDEX EC_LOG_AUDITORIAFKI2 ON EC_LOG_AUDITORIA (SESION_ID);
GO







-- ------------------------------------------------------------
-- En esta tabla se guardara el log de errores ocurridos en el sistema
-- ------------------------------------------------------------

CREATE TABLE EC_LOG_ERRORES (
  LOG_ERROR_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_ERROR_ID INTEGER UNSIGNED   DEFAULT 0 ,
  LOG_ERROR_DESCRIPCION VARCHAR(255)  NOT NULL  ,
  LOR_ERROR_FECHAHORA DATETIME  NOT NULL  ,
  SESION_ID INTEGER UNSIGNED  NOT NULL    ,
PRIMARY KEY(LOG_ERROR_ID)    );
GO


CREATE INDEX EC_LOG_ERRORESFKI1 ON EC_LOG_ERRORES (SESION_ID);
GO
CREATE INDEX EC_LOG_ERRORESFKI2 ON EC_LOG_ERRORES (TIPO_ERROR_ID);
GO








CREATE TABLE EC_MAILS (
  MAIL_ID INTEGER  NOT NULL  ,
  MAIL_DESDE VARCHAR(1024)    ,
  MAIL_DESTINOS VARCHAR(1024)    ,
  MAIL_COPIAS VARCHAR(1024)    ,
  MAIL_TITULO VARCHAR(255)    ,
  MAIL_MENSAJE VARCHAR(8000)    ,
  MAIL_ADJUNTO BLOB    ,
  MAIL_ADJUNTO_NOMBRE VARCHAR(45)    ,
  MAIL_FECHAHORA DATETIME    ,
  MAIL_ENVIADO INTEGER   DEFAULT 0 ,
  MAIL_FECHAHORAE DATETIME    ,
  MAIL_TIPO INTEGER   DEFAULT 0   ,
PRIMARY KEY(MAIL_ID)  );
GO


CREATE INDEX EC_MAILS_I1 ON EC_MAILS (MAIL_ENVIADO);
GO















-- ------------------------------------------------------------
-- Contiene el listado de mascaras aplicables para los campos editables
-- ------------------------------------------------------------

CREATE TABLE EC_MASCARAS (
  MASCARA_ID INTEGER UNSIGNED  NOT NULL  ,
  MASCARA_NOMBRE VARCHAR(45)    ,
  MASCARA VARCHAR(45)    ,
  MASCARA_ANCHO INTEGER UNSIGNED      ,
PRIMARY KEY(MASCARA_ID));
GO


INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(0,'Sin Mascara', '', 100 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(1,'###,###,##0', '###,###,##0', 70 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(2,'###,###,##0.00', '###,###,##0.00', 90 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(3,'$###,###,##0', '$ ###,###,##0', 100 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(4,'$###,###,##0.00', '$ ###,###,##0.00',130 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(5,'0', '0', 15 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(6,'00', '00', 20 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(7,'000', '000', 25 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(8,'0000', '0000', 30 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(9,'00000', '00000', 40 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(10,'000000', '000000', 50 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(11, '0000000', '0000000', 55 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(12, '00000000', '00000000', 60 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(13, '000000000', '000000000', 65 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(14, '0000000000', '0000000000', 70 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(15, 'Moneda', 'C', 90 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(16, 'Decimal', 'D', 150 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(17, 'Científico (exponencial)', 'E', 100 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(18, 'Punto fijo', 'F', 80 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(19, 'General', 'G', 80 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(20, 'Hexadecimal', 'X', 100 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(21, '###,###,##0', '###,###,##0', 80 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(22, '###,###,##0.00', '###,###,##0.00', 90 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(23, '###,###,##0 MN', '###,###,##0 MN', 100 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(24, '###,###,##0.00 MN', '###,###,##0.00 MN', 110 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(25, '0.00', '0.00', 30 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(26, '00.00', '00.00', 35 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(27, '000.00', '000.00', 40 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(28, '0000.00', '0000.00', 45 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(29, '00000.00', '00000.00', 55 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(30, '000000.00', '000000.00', 60 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(31, '0000000.00', '0000000.00', 70 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(32, '00000000.00', '00000000.00', 75 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(33, '000000000.00', '000000000.00', 80 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(34, '0000000000.00', '0000000000.00', 85 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(35, '###,###,##0.0000', '###,###,##0.0000', 100 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(36, '$###,###,##0.0000', '$###,###,##0.0000', 110 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(37, 'TODO EN MAYÚSCULAS', 'MAYUS', 200 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(38, 'todo en minúsculas', 'minus', 200 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(39, 'Letra capital', 'Lcapital', 200 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(40, 'Primera En Mayúsculas', 'PMAYUS', 200 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(41, '23/09/06', 'dd/MM/yy', 60 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(42, '23-09-06', 'dd-MM-yy', 60 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(43, '23/09/2006', 'dd/MM/yyyy', 70 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(44, '23-09-2006', 'dd-MM-yyyy', 70 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(45, '23 de septiembre de 2006', 'dd \de MMM \de yyyy', 100 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(46, '09/23/2006','MM/dd/yyyy',70);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(47, '09/23/06','MM/dd/yy',60);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(48, '9/23/2006','M/dd/yyyy',60);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(49, '9/3/06','M/d/yy',60);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(50, '3/9/06 3:18 pm','d/M/yy hh:mm tt',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(51, '3/9/06 3:18:27 pm','d/M/yy hh:mm:ss tt',110);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(52, '3/9/06 15:18','d/M/yy HH:MM',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(53, '3/9/06 15:18:27','d/M/yy HH:MM:SS',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(54, '03/09/06 3:18 pm','dd/MM/yy hh:mm tt',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(55, '03/09/06 3:18:27 pm','dd/MM/yy hh:mm:ss tt',110);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(56, '03/09/06 15:18','ddM/M/yy HH:MM',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(57, '03/09/06 15:18:27','d/MM/yy HH:MM:SS',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(58, '3/9/2006 3:18 pm','d/M/yyyy hh:mm tt',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(59, '3/9/2006 3:18:27 pm','d/M/yyyy hh:mm:ss tt',110);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(60, '3/9/2006 15:18','d/M/yyyy HH:MM',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(61, '3/9/2006 15:18:27','d/M/yyyy HH:MM:SS',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(62, '03/09/2006 3:18 pm','dd/MM/yyyy hh:mm tt',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(63, '03/09/2006 3:18:27 pm','dd/MM/yyyy hh:mm:ss tt',110);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(64, '03/09/2006 15:18','dd/MM/yyyy HH:MM',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(65, '03/09/2006 15:18:27','dd/MM/yyyy HH:MM:SS',100);
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(66, 'Sabado, 3 de septiembre de 2006', 'dddd, d/MMMM/yyyy', 170 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(67, 'Sabado, septiembre 3,2006', 'dddd, MMMM d, yyyy', 150 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(68, 'Sabado, septiembre 03,2006', 'dddd, MMMM dd, yyyy', 160 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(69, 'Sabado, septiembre 23,2006 12:00:00 am', 'dddd, MMMM dd, yyyy h:mm:ss tt', 210 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(70, 'Sabado, septiembre 23,2006 23:00:00', 'dddd, MMMM dd, yyyy HH:mm:ss', 200 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(71, 'Enero 3 3:45 pm', 'MMMM d hh:mm tt', 50 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(72, 'Enero 03 15:45', 'MMMM dd HH:MM', 60 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(73, 'Enero 2006 7:12 pm', 'MMMM yyyy hh:mm tt', 80 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(74, 'Enero 06 19:12','MMMM yy HH:MM', 60 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(75, '18:15', 'HH:mm', 40 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(76, '06:15 pm', 'hh:mm tt', 60 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(77, '06:15:12 pm', 'hh:mm:ss tt', 60 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(78, '06:15 pm', 'HH:mm tt', 70 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(79, '18:15:10', 'HH:mm:ss', 70 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(80, '06:15:10 pm', 'hh:mm:ss tt', 70 );
INSERT INTO EC_MASCARAS (MASCARA_ID, MASCARA_NOMBRE, MASCARA, MASCARA_ANCHO) VALUES(81, '18', 'HH', 20 );

GO







-- ------------------------------------------------------------
-- Contiene el listado de Menus que usará para crearce
-- ------------------------------------------------------------

CREATE TABLE EC_MENUS (
  MENU_ID INTEGER  NOT NULL  ,
  TIPO_MENU_ID INTEGER  NOT NULL  ,
  MENU_ORDEN INTEGER    ,
  MENU_PADRE_ID INTEGER    ,
  MENU_CONTEXTUAL_ID INTEGER    ,
  MENU_3D_ID INTEGER    ,
  MENU_LINK VARCHAR(255)    ,
  MENU_HIJOS VARCHAR(512)    ,
  MENU_HERMANOS VARCHAR(512)    ,
  MENU_ETIQUETA VARCHAR(255)    ,
  MENU_DESCRIPCION VARCHAR(512)    ,
  MENU_AYUDA VARCHAR(255)    ,
  MENU_IMAGEN VARCHAR(255)    ,
  MENU_ALT VARCHAR(45)    ,
  MENU_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(MENU_ID)  );
GO


CREATE INDEX EC_MENUS_FKIndex1 ON EC_MENUS (TIPO_MENU_ID);
GO

















CREATE TABLE EC_MODELOS (
  MODELO_ID INTEGER  NOT NULL  ,
  ALMACEN_VEC_ID INTEGER UNSIGNED  NOT NULL  ,
  MODELO_MARCA VARCHAR(255)    ,
  MODELO_MODELO VARCHAR(255)    ,
  MODELO_COMENTARIO VARCHAR(255)    ,
  MODELO_CAMPO_LLAVE VARCHAR(255)    ,
  MODELO_CAMPO_ADICIONAL VARCHAR(255)    ,
  TIPO_TECNOLOGIA_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_TECNOLOGIA_ADD_ID INTEGER UNSIGNED  NOT NULL  ,
  MODELO_NO_HUELLAS INTEGER    ,
  MODELO_NO_TARJETAS INTEGER    ,
  MODELO_NO_ROSTROS INTEGER    ,
  MODELO_NO_PALMAS INTEGER    ,
  MODELO_NO_IRIS INTEGER    ,
  MODELO_TERMINAL_ID INTEGER UNSIGNED  NOT NULL  ,
  MODELO_PUERTO VARCHAR(45)    ,
  MODELO_BORRADO BOOL      ,
PRIMARY KEY(MODELO_ID)        );
GO


CREATE INDEX EC_MODELOS_FKIndex1 ON EC_MODELOS (MODELO_TERMINAL_ID);
GO
CREATE INDEX EC_MODELOS_FKIndex2 ON EC_MODELOS (TIPO_TECNOLOGIA_ID);
GO
CREATE INDEX EC_MODELOS_FKIndex3 ON EC_MODELOS (TIPO_TECNOLOGIA_ADD_ID);
GO
CREATE INDEX EC_MODELOS_FKIndex4 ON EC_MODELOS (ALMACEN_VEC_ID);
GO



















-- ------------------------------------------------------------
-- Contiene un listado de los modelos de terminales soportados por el sistema, para esta version solo será:
-- 0. No definido
-- 1.  EtherTrax
-- ------------------------------------------------------------

CREATE TABLE EC_MODELOS_TERMINALES (
  MODELO_TERMINAL_ID INTEGER UNSIGNED  NOT NULL  ,
  MODELO_TERMINAL_NOMBRE VARCHAR(45)  NOT NULL  ,
  MODELO_TERMINAL_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(MODELO_TERMINAL_ID));
GO



INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(0,'No definido',1); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(1,'TRAX',0);
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(2,'HandPunch',0);
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(3,'AC215',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(4,'AC115',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(5,'EnTRAX',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(6,'Lector de Huella (USB)',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(7,'Lector de Huella (MS)',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(8,'Lector 6055',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(9,'Lector Windows Chip',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(10,'Lector Serial CB/BM',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(11,'UlTRAX',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(12,'Prox',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(13,'SuperMax',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(14,'Max',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(15,'NeoMax',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(16,'Camara Usb',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(17,'Camara Intellinet',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(18,'Panel de Control Plumas',0); 
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(19,'BioEntryPlus',0);
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(20,'BioStation',0);
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(21,'ZK Color',0);
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(22,'eClock',0);
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(23,'ZK Blanco y Negro',0);
INSERT INTO EC_MODELOS_TERMINALES (MODELO_TERMINAL_ID, MODELO_TERMINAL_NOMBRE,MODELO_TERMINAL_BORRADO) VALUES(24,'ZkSoftware Pull',0)

GO






-- ------------------------------------------------------------
-- Contiene una liga de las relaciones validas entre modelos de terminales y tecnologías para la version 1.x ya que cuando se de de alta una nueva terminal se usará automáticamente la terminal ethertrax con huella y mifare
-- 
-- ------------------------------------------------------------

CREATE TABLE EC_MOD_TERM_T_TECNO (
  MODELO_TERMINAL_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_TECNOLOGIA_ID INTEGER UNSIGNED  NOT NULL    ,
PRIMARY KEY(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID)    );
GO


CREATE INDEX MODELOS_T_TIPO_TECNOFKI1 ON EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID);
GO
CREATE INDEX MODELOS_T_TIPO_TECNOFKI2 ON EC_MOD_TERM_T_TECNO (TIPO_TECNOLOGIA_ID);
GO


-- EtherTrax con Código de Barras  
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(1,1);   
-- EtherTrax con Banda Magnética  
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(1,2);   
-- EtherTrax con Proximidad 
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(1,3);   
-- EtherTrax con Mifare  
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(1,4);    
-- EtherTrax con Huella 
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(1,5);   
-- HandPunch con palma  
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(2,6);    
-- AC215 con Proximidad 
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(3,3);      
-- AC115 con Proximidad  
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(4,3);       
-- EnTrax con Código de Barras   
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(5,1);    
-- EnTrax con Banda Magnética   
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(5,2);    
-- EnTrax con Proximidad  
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(5,3);    
-- EnTrax con Mifare   
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(5,4);  
-- Lector de Huella USB
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(6,5);   
-- Lector de Huella Microsoft 
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(7,5);   
-- Lector Mifare 6055
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(8,4);   
-- Lector Windows Chip
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(9,7);  
-- Lector Serial Banda Magnetica
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(10,2);  
-- Lector Serial Código de Barras
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(10,1);  
-- UlTRAX con Código de Barras    
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(11,1);     
-- UlTRAX con Banda Magnética    
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(11,2);     
-- UlTRAX con Proximidad   
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(11,3);     
-- UlTRAX con Mifare    
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(11,4);  
-- UlTRAX con Huella     
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(11,5);  
-- UlTRAX con Rostro      
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(11,8);   
-- Prox con Código de Barras    
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(12,1);      
-- Prox con Banda Magnética     
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(12,2);      
-- Prox con Proximidad    
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(12,3);      
-- Prox con Mifare     
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(12,4);   
-- SuperMax con Código de Barras     
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(13,1);       
-- SuperMax con Banda Magnética      
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(13,2);       
-- SuperMax con Proximidad     
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(13,3);       
-- SuperMax con Mifare      
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(13,4);   
-- Max con Código de Barras     
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(14,1);       
-- Max con Banda Magnética      
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(14,2);       
-- Max con Proximidad     
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(14,3);       
-- Max con Mifare      
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(14,4);   
-- NeoMax con Código de Barras     
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(15,1);       
-- NeoMax con Banda Magnética      
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(15,2);       
-- NeoMax con Proximidad     
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(15,3);       
-- NeoMax con Mifare      
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(15,4);   
-- Camara Usb con Rostro       
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(16,8);   
-- Camara Intellinet con Rostro       
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(17,8);   
-- Panel de control de merck con tags 
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(18,3);   
-- BioEntry Plus Huella-Proximidad
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(19,5);     
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(19,3);    
-- BioStation Huella-Proximidad 
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(20,5);      
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(20,3);    
-- Zk con Proximidad  
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(21,3);    
-- Zk con Mifare   
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(21,4);     
-- Zk con Huella  
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(21,5);   
-- Zk Con Rostro
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(21,8);   
-- eClock con Proximidad   
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(22,3);     
-- eClock con Mifare    
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(22,4);      
-- eClock con Huella   
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(22,5);    
-- eClock Con Rostro 
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(22,8);  
-- Zk iClock con Proximidad   
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(23,3);     
-- Zk iClock con Mifare    
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(23,4);      
-- Zk iClock con Huella   
INSERT INTO EC_MOD_TERM_T_TECNO (MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(23,5);    
-- Zk iClock Con Rostro 
INSERT INTO EC_MOD_TERM_T_TECNO(MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID) VALUES(23,8);  

GO





-- ------------------------------------------------------------
-- Contiene el listado de todas las transacciones realizadas en el monedero
-- ------------------------------------------------------------

CREATE TABLE EC_MONEDERO (
  MONEDERO_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_COBRO_ID INTEGER UNSIGNED  NOT NULL DEFAULT 0 ,
  PERSONA_ID INTEGER  NOT NULL  ,
  SESION_ID INTEGER UNSIGNED  NOT NULL DEFAULT 0 ,
  MONEDERO_FECHA DATETIME    ,
  MONEDERO_CONSUMO DECIMAL    ,
  MONEDERO_SALDO DECIMAL      ,
PRIMARY KEY(MONEDERO_ID)      );
GO


CREATE INDEX MONEDERO_FKI1 ON EC_MONEDERO (PERSONA_ID);
GO
CREATE INDEX MONEDERO_FKI2 ON EC_MONEDERO (SESION_ID);
GO
CREATE INDEX MONEDERO_FKI3 ON EC_MONEDERO (TIPO_COBRO_ID);
GO










-- ------------------------------------------------------------
-- Contiene el listado de productos consumidos en una transaccion de monedero puede tener el mismo producto cargado varias veces en el Monedero_id
-- ------------------------------------------------------------

CREATE TABLE EC_MONEDERO_PROD (
  MONEDERO_ID INTEGER UNSIGNED  NOT NULL  ,
  MONEDERO_PROD_ORD INTEGER UNSIGNED  NOT NULL  ,
  PRODUCTO_ID INTEGER UNSIGNED  NOT NULL    ,
PRIMARY KEY(MONEDERO_ID, MONEDERO_PROD_ORD)    );
GO


CREATE INDEX MONEDERO_PROD_FKI1 ON EC_MONEDERO_PROD (MONEDERO_ID);
GO
CREATE INDEX MONEDERO_PROD_FKI2 ON EC_MONEDERO_PROD (PRODUCTO_ID);
GO




CREATE TABLE EC_MONEDERO_RECOM (
  MONEDERO_ID INTEGER UNSIGNED  NOT NULL  ,
  RECOMPENSA_ID INTEGER UNSIGNED  NOT NULL  ,
  MONEDERO_RECOM_ORD INTEGER UNSIGNED  NOT NULL  ,
  MONEDERO_RECOM_IMPORTE DECIMAL    ,
  MONEDERO_RECOM_PUNTOS DECIMAL    ,
  CANJE_ID INTEGER UNSIGNED   DEFAULT 0   ,
PRIMARY KEY(MONEDERO_ID, RECOMPENSA_ID, MONEDERO_RECOM_ORD)      );
GO


CREATE INDEX MONEDERO_RECOMFKI1 ON EC_MONEDERO_RECOM (MONEDERO_ID);
GO
CREATE INDEX MONEDERO_RECOMFKI2 ON EC_MONEDERO_RECOM (RECOMPENSA_ID);
GO
CREATE INDEX MONEDERO_RECOMFK3 ON EC_MONEDERO_RECOM (CANJE_ID, MONEDERO_ID, RECOMPENSA_ID);
GO







CREATE TABLE EC_NOMINAS (
  NOMINA_ID INTEGER  NOT NULL  ,
  TIPO_NOMINA_ID INTEGER  NOT NULL  ,
  NOMINA_NOMBRE VARCHAR(255)    ,
  NOMINA_DESCRIPCION VARCHAR(2000)    ,
  NOMINA_FECHA_IMP DATETIME    ,
  NOMINA_PERIODO_ANO INTEGER    ,
  NOMINA_PERIODO_NO INTEGER    ,
  NOMINA_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(NOMINA_ID)  );
GO


CREATE INDEX EC_NOMINAS_FKIndex1 ON EC_NOMINAS (TIPO_NOMINA_ID);
GO










-- ------------------------------------------------------------
-- Perfiles definidos para controlar a los Usuarios del sistema
-- 0. Ninguno
-- 1. Administrador
-- 2. Supervisor
-- 3. Reporteador
-- 
-- ------------------------------------------------------------

CREATE TABLE EC_PERFILES (
  PERFIL_ID INTEGER  NOT NULL  ,
  PERFIL_NOMBRE VARCHAR(45)  NOT NULL  ,
  PERFIL_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(PERFIL_ID));
GO



INSERT INTO EC_PERFILES (PERFIL_ID, PERFIL_NOMBRE, PERFIL_BORRADO) VALUES(0, 
'Ninguno',1); 
INSERT INTO EC_PERFILES (PERFIL_ID, PERFIL_NOMBRE) VALUES(1, 'Administrador'); 
INSERT INTO EC_PERFILES (PERFIL_ID, PERFIL_NOMBRE) VALUES(2, 'Supervisor'); 
INSERT INTO EC_PERFILES (PERFIL_ID, PERFIL_NOMBRE) VALUES(3, 'Reporteador');
INSERT INTO EC_PERFILES (PERFIL_ID, PERFIL_NOMBRE) VALUES(4, 'Administrador Suscripcion');  
INSERT INTO EC_PERFILES (PERFIL_ID, PERFIL_NOMBRE) VALUES(5, 'Supervisor Suscripcion');  
INSERT INTO EC_PERFILES (PERFIL_ID, PERFIL_NOMBRE) VALUES(6, 'Reporteador Suscripcion');
INSERT INTO EC_PERFILES (PERFIL_ID, PERFIL_NOMBRE) VALUES(7, 'Empleado');

GO






CREATE TABLE EC_PERIODOS (
  PERIODO_ID INTEGER  NOT NULL  ,
  PERIODO_N_ID INTEGER  NOT NULL DEFAULT 0 ,
  EDO_PERIODO_ID INTEGER  NOT NULL DEFAULT 0 ,
  PERIODO_NOM_INICIO DATE    ,
  PERIODO_NOM_FIN DATE    ,
  PERIODO_ASIS_INICIO DATE    ,
  PERIODO_ASIS_FIN DATE    ,
  PERIODO_ANO INTEGER UNSIGNED    ,
  PERIODO_NO INTEGER UNSIGNED      ,
PRIMARY KEY(PERIODO_ID)    );
GO


CREATE INDEX EC_PERIODOS_FKIndex1 ON EC_PERIODOS (EDO_PERIODO_ID);
GO
CREATE INDEX EC_PERIODOS_FKIndex2 ON EC_PERIODOS (PERIODO_N_ID);
GO










-- ------------------------------------------------------------
-- Nombre del periodo
-- ------------------------------------------------------------

CREATE TABLE EC_PERIODOS_N (
  PERIODO_N_ID INTEGER  NOT NULL  ,
  PERIODO_N_NOM VARCHAR(45)    ,
  PERIODO_N_DESC VARCHAR(255)    ,
  TIMESPAN_ID INTEGER  NOT NULL  ,
  PERIODO_N_FECHA DATE    ,
  PERIODO_N_PERSONAS VARCHAR(255)    ,
  PERIODO_N_DASIS INTEGER    ,
  PERIODO_N_COLOR INTEGER    ,
  PERIODO_N_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(PERIODO_N_ID)  );
GO


CREATE INDEX EC_PERIODOS_N_FKIndex1 ON EC_PERIODOS_N (TIMESPAN_ID);
GO


INSERT INTO EC_PERIODOS_N (PERIODO_N_ID, PERIODO_N_NOM, TIMESPAN_ID) 
VALUES(0,'Generico',0);
INSERT INTO EC_PERIODOS_N (PERIODO_N_ID, PERIODO_N_NOM, TIMESPAN_ID,PERIODO_N_FECHA,PERIODO_N_DASIS)  
VALUES(1,'Semanal HorasExt',4,TO_DATE('28/12/2009','DD/MM/YYYY'),0);
INSERT INTO EC_PERIODOS_N (PERIODO_N_ID, PERIODO_N_NOM, TIMESPAN_ID,PERIODO_N_FECHA,PERIODO_N_DASIS)   
VALUES(1,'Semanal HorasExt',4,convert(datetime,'28/12/2009',103),0);

GO











-- ------------------------------------------------------------
-- Relacion entre un usuario y la agrupación 1
-- ------------------------------------------------------------

CREATE TABLE EC_PERMISOS_SUSCRIP (
  USUARIO_ID INTEGER  NOT NULL  ,
  SUSCRIPCION_ID INTEGER  NOT NULL  ,
  PER_SUS_CONT_TOT BOOL   DEFAULT 1 ,
  PER_SUS_CONTROL VARCHAR(255)      ,
PRIMARY KEY(USUARIO_ID, SUSCRIPCION_ID)    );
GO


CREATE INDEX EC_USUARIOS_G1FKI1 ON EC_PERMISOS_SUSCRIP (USUARIO_ID);
GO
CREATE INDEX EC_PERMISOS_SUSCRIP_FKIndex2 ON EC_PERMISOS_SUSCRIP (SUSCRIPCION_ID);
GO





-- ------------------------------------------------------------
-- Listado de personas que contraolara el sistema Empleados, Visitantes, otro. Se requeriran agregar campos posteriormente para contemplar casos como visitantes y otros
-- 
-- 
-- ------------------------------------------------------------

CREATE TABLE EC_PERSONAS (
  PERSONA_ID INTEGER  NOT NULL  ,
  SUSCRIPCION_ID INTEGER  NOT NULL  ,
  PERSONA_LINK_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_PERSONA_ID INTEGER   DEFAULT 1 ,
  PERSONA_NOMBRE VARCHAR(255)    ,
  TURNO_ID INTEGER UNSIGNED   DEFAULT 0 ,
  CALENDARIO_DF_ID INTEGER   DEFAULT 0 ,
  PERSONA_EMAIL VARCHAR(45)   DEFAULT '' ,
  DISENO_ID INTEGER UNSIGNED   DEFAULT 0 ,
  AGRUPACION_NOMBRE VARCHAR(2000)   DEFAULT '' ,
  PERSONA_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(PERSONA_ID)            );
GO


CREATE INDEX EC_PERSONASFKI1 ON EC_PERSONAS (TIPO_PERSONA_ID);
GO
CREATE INDEX EC_PERSONASFKI6 ON EC_PERSONAS (TURNO_ID);
GO
CREATE INDEX EC_PERSONAS_PL ON EC_PERSONAS (PERSONA_LINK_ID);
GO
CREATE INDEX EC_PERSONAS_FKIndex6 ON EC_PERSONAS (CALENDARIO_DF_ID);
GO
CREATE INDEX EC_PERSONAS_FKIndex7 ON EC_PERSONAS (DISENO_ID);
GO
CREATE INDEX EC_PERSONAS_FKIndex5 ON EC_PERSONAS (SUSCRIPCION_ID);
GO



INSERT INTO EC_PERSONAS (PERSONA_ID, SUSCRIPCION_ID, PERSONA_LINK_ID,PERSONA_NOMBRE) VALUES(0,0,0,'Ninguna persona');

GO












-- ------------------------------------------------------------
-- Contiene los vectores de huella, palma, rostro, iris. etc.
-- ------------------------------------------------------------

CREATE TABLE EC_PERSONAS_A_VEC (
  PERSONA_ID INTEGER  NOT NULL  ,
  ALMACEN_VEC_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONAS_A_VEC_1 BLOB    ,
  PERSONAS_A_VEC_2 BLOB    ,
  PERSONAS_A_VEC_3 BLOB    ,
  PERSONAS_A_VEC_T1 VARCHAR(255)    ,
  PERSONAS_A_VEC_T2 VARCHAR(255)    ,
  PERSONAS_A_VEC_T3 VARCHAR(255)    ,
  PERSONAS_A_VEC_1_HASH VARCHAR(60)    ,
  PERSONAS_A_VEC_2_HASH VARCHAR(60)    ,
  PERSONAS_A_VEC_3_HASH VARCHAR(60)    ,
  PERSONAS_A_VEC_1_UMOD DATETIME    ,
  PERSONAS_A_VEC_2_UMOD DATETIME    ,
  PERSONAS_A_VEC_3_UMOD DATETIME      ,
PRIMARY KEY(PERSONA_ID, ALMACEN_VEC_ID)        );
GO


CREATE INDEX EC_PERSONAS_A_VEC_FKI1 ON EC_PERSONAS_A_VEC (PERSONA_ID);
GO
CREATE INDEX EC_PERSONAS_A_VEC_FKI2 ON EC_PERSONAS_A_VEC (ALMACEN_VEC_ID);
GO
CREATE INDEX PERSONAS_A_VEC_FKI3 ON EC_PERSONAS_A_VEC (PERSONAS_A_VEC_T1);
GO
CREATE INDEX PERSONAS_A_VEC_FKI4 ON EC_PERSONAS_A_VEC (PERSONAS_A_VEC_T2);
GO

















-- ------------------------------------------------------------
-- Contiene el registro de todas las comidas realizadas por persona
-- ------------------------------------------------------------

CREATE TABLE EC_PERSONAS_COMIDA (
  PERSONA_COMIDA_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_ID INTEGER  NOT NULL  ,
  TIPO_COMIDA_ID INTEGER  NOT NULL  ,
  TIPO_COMIDA_COSTOA DECIMAL    ,
  TIPO_COBRO_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_COMIDA_FECHA DATETIME  NOT NULL  ,
  SESION_ID INTEGER UNSIGNED  NOT NULL    ,
PRIMARY KEY(PERSONA_COMIDA_ID)                );
GO


CREATE INDEX PERSONAS_COMIDA_FKI2 ON EC_PERSONAS_COMIDA (PERSONA_ID);
GO
CREATE INDEX PERSONAS_COMIDA_FKI3 ON EC_PERSONAS_COMIDA (TIPO_COBRO_ID);
GO
CREATE INDEX PERSONAS_COMIDA_FKI4 ON EC_PERSONAS_COMIDA (TIPO_COMIDA_ID);
GO
CREATE INDEX PERSONAS_COMIDA_FKI5 ON EC_PERSONAS_COMIDA (SESION_ID);
GO
CREATE INDEX PERSONAS_COMIDA_FKI6 ON EC_PERSONAS_COMIDA (PERSONA_ID, PERSONA_COMIDA_FECHA);
GO
CREATE INDEX PERSONAS_COMIDA_FKI7 ON EC_PERSONAS_COMIDA (PERSONA_ID, TIPO_COMIDA_ID, PERSONA_COMIDA_FECHA);
GO
CREATE INDEX PERSONAS_COMIDA_FKI8 ON EC_PERSONAS_COMIDA (TIPO_COMIDA_ID, PERSONA_COMIDA_FECHA);
GO
CREATE INDEX PERSONAS_COMIDA_FKI9 ON EC_PERSONAS_COMIDA (PERSONA_ID, TIPO_COMIDA_ID);
GO








CREATE TABLE EC_PERSONAS_DATO (
  PERSONA_DATO_ID INTEGER UNSIGNED  NOT NULL  ,
  SESION_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_ID INTEGER  NOT NULL  ,
  CAMPO_NOMBRE VARCHAR(45)    ,
  PERSONA_DATO VARCHAR(4000)    ,
  PERSONA_DATO_FECHA DATETIME    ,
  PERSONA_DATO_B BLOB      ,
PRIMARY KEY(PERSONA_DATO_ID)      );
GO


CREATE INDEX EC_PERSONAS_DATO_FKIndex1 ON EC_PERSONAS_DATO (PERSONA_ID);
GO
CREATE INDEX EC_PERSONAS_DATO_FKIndex2 ON EC_PERSONAS_DATO (SESION_ID);
GO
CREATE INDEX EC_PERSONAS_DATO_FKIndex3 ON EC_PERSONAS_DATO (CAMPO_NOMBRE);
GO


INSERT INTO EC_PERSONAS_DATO(PERSONA_DATO_ID,SESION_ID,PERSONA_ID,CAMPO_NOMBRE,PERSONA_DATO) VALUES(1,0,0,'PERSONA_LINK_ID','');

GO










CREATE TABLE EC_PERSONAS_DATOS (
  PERSONA_ID INTEGER  NOT NULL  ,
  PERSONA_LINK_ID INTEGER  NOT NULL  ,
  NOMBRE_COMPLETO VARCHAR(256)    ,
  NOMBRE VARCHAR(255)    ,
  APATERNO VARCHAR(255)    ,
  AMATERNO VARCHAR(255)    ,
  FECHA_NAC DATE    ,
  RFC VARCHAR(45)    ,
  CURP VARCHAR(45)    ,
  IMSS VARCHAR(20)    ,
  ESTUDIOS VARCHAR(20)    ,
  SEXO VARCHAR(20)    ,
  NACIONALIDAD VARCHAR(20)    ,
  FECHA_INGRESO DATE    ,
  FECHA_BAJA DATE    ,
  DP_CALLE_NO VARCHAR(50)    ,
  DP_COLONIA VARCHAR(50)    ,
  DP_DELEGACION VARCHAR(50)    ,
  DP_CIUDAD VARCHAR(50)    ,
  DP_ESTADO VARCHAR(50)    ,
  DP_PAIS VARCHAR(50)    ,
  DP_CP VARCHAR(50)    ,
  DP_TELEFONO1 VARCHAR(25)    ,
  DP_TELEFONO2 VARCHAR(25)    ,
  DP_CELULAR1 VARCHAR(25)    ,
  DP_CELULAR2 VARCHAR(25)    ,
  DT_CALLE_NO VARCHAR(50)    ,
  DT_COLONIA VARCHAR(50)    ,
  DT_DELEGACION VARCHAR(50)    ,
  DT_CIUDAD VARCHAR(50)    ,
  DT_ESTADO VARCHAR(50)    ,
  DT_PAIS VARCHAR(50)    ,
  DT_CP VARCHAR(50)    ,
  DT_TELEFONO1 VARCHAR(25)    ,
  DT_TELEFONO2 VARCHAR(25)    ,
  DT_CELULAR1 VARCHAR(25)    ,
  DT_CELULAR2 VARCHAR(25)    ,
  CENTRO_DE_COSTOS VARCHAR(50)    ,
  AREA VARCHAR(50)    ,
  DEPARTAMENTO VARCHAR(50)    ,
  PUESTO VARCHAR(50)    ,
  GRUPO VARCHAR(50)    ,
  NO_CREDENCIAL VARCHAR(50)    ,
  LINEA_PRODUCCION VARCHAR(50)    ,
  CLAVE_EMPL VARCHAR(50)    ,
  COMPANIA VARCHAR(50)    ,
  DIVISION VARCHAR(50)    ,
  REGION VARCHAR(50)    ,
  TIPO_NOMINA VARCHAR(50)    ,
  ZONA VARCHAR(50)    ,
  CAMPO1 VARCHAR(80)    ,
  CAMPO2 VARCHAR(80)    ,
  CAMPO3 VARCHAR(80)    ,
  CAMPO4 VARCHAR(80)    ,
  CAMPO5 VARCHAR(80)    ,
  REGLA_VACA_ID INTEGER UNSIGNED    ,
  SUELDO_DIA DECIMAL      );
GO


CREATE INDEX EC_EMPLEADOS_FKIndex1 ON EC_PERSONAS_DATOS (PERSONA_ID);
GO



























































-- ------------------------------------------------------------
-- Contiene el registro diario de asistencias,  Por persona y fecha
-- ------------------------------------------------------------

CREATE TABLE EC_PERSONAS_DIARIO (
  PERSONA_DIARIO_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_D_HE_ID INTEGER  NOT NULL DEFAULT 0 ,
  ACCESO_E_ID INTEGER UNSIGNED  NOT NULL  ,
  ACCESO_S_ID INTEGER UNSIGNED  NOT NULL  ,
  ACCESO_CS_ID INTEGER UNSIGNED  NOT NULL  ,
  ACCESO_CR_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_ID INTEGER  NOT NULL  ,
  PERSONA_DIARIO_FECHA DATE  NOT NULL  ,
  TIPO_INC_SIS_ID INTEGER  NOT NULL  ,
  TIPO_INC_C_SIS_ID INTEGER UNSIGNED  NOT NULL  ,
  INCIDENCIA_ID INTEGER UNSIGNED  NOT NULL  ,
  TURNO_DIA_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_DIARIO_TT TIME    ,
  PERSONA_DIARIO_TE TIME    ,
  PERSONA_DIARIO_TC TIME    ,
  PERSONA_DIARIO_TDE TIME    ,
  PERSONA_DIARIO_TES TIME      ,
PRIMARY KEY(PERSONA_DIARIO_ID)                              );
GO


CREATE INDEX EC_P_DIARIOFKI1 ON EC_PERSONAS_DIARIO (TURNO_DIA_ID);
GO
CREATE INDEX EC_P_DIARIOFKI2 ON EC_PERSONAS_DIARIO (ACCESO_E_ID);
GO
CREATE INDEX EC_P_DIARIOFKI3 ON EC_PERSONAS_DIARIO (ACCESO_S_ID);
GO
CREATE INDEX EC_P_DIARIOFKI4 ON EC_PERSONAS_DIARIO (ACCESO_CS_ID);
GO
CREATE INDEX EC_P_DIARIOFKI5 ON EC_PERSONAS_DIARIO (ACCESO_CR_ID);
GO
CREATE INDEX EC_P_DIARIOFKI6 ON EC_PERSONAS_DIARIO (PERSONA_ID);
GO
CREATE INDEX EC_P_DIARIOFKI7 ON EC_PERSONAS_DIARIO (TIPO_INC_SIS_ID);
GO
CREATE INDEX EC_P_DIARIOFKI8 ON EC_PERSONAS_DIARIO (TIPO_INC_C_SIS_ID);
GO
CREATE INDEX EC_P_DIARIOFKI9 ON EC_PERSONAS_DIARIO (INCIDENCIA_ID);
GO
CREATE INDEX EC_P_DIARIO_PFE ON EC_PERSONAS_DIARIO (PERSONA_ID, PERSONA_DIARIO_FECHA);
GO
CREATE INDEX EC_P_DIARIO_FKI10 ON EC_PERSONAS_DIARIO (PERSONA_D_HE_ID);
GO
CREATE INDEX EC_P_DIARIO_I1 ON EC_PERSONAS_DIARIO (TURNO_DIA_ID, PERSONA_ID, PERSONA_DIARIO_FECHA);
GO
CREATE INDEX EC_P_DIARIO_I2 ON EC_PERSONAS_DIARIO (PERSONA_DIARIO_FECHA);
GO
CREATE INDEX EC_P_DIARIO_I3 ON EC_PERSONAS_DIARIO (PERSONA_ID, PERSONA_DIARIO_FECHA);
GO
CREATE INDEX EC_P_DIARIO_I4 ON EC_PERSONAS_DIARIO (PERSONA_D_HE_ID);
GO



















-- ------------------------------------------------------------
-- Contiene el registro de horas extras para un Persona_Diario_ID
-- ------------------------------------------------------------

CREATE TABLE EC_PERSONAS_D_HE (
  PERSONA_D_HE_ID INTEGER  NOT NULL  ,
  TIPO_INCIDENCIA_ID INTEGER UNSIGNED  NOT NULL DEFAULT 0 ,
  SESION_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_D_HE_SIS TIME    ,
  PERSONA_D_HE_SIS_A TIME    ,
  PERSONA_D_HE_SIS_D TIME    ,
  PERSONA_D_HE_CAL TIME    ,
  PERSONA_D_HE_APL TIME    ,
  PERSONA_D_HE_FH DATETIME    ,
  PERSONA_D_HE_SIMPLE DECIMAL    ,
  PERSONA_D_HE_DOBLE DECIMAL    ,
  PERSONA_D_HE_TRIPLE DECIMAL    ,
  PERSONA_D_HE_COMEN VARCHAR(255)      ,
PRIMARY KEY(PERSONA_D_HE_ID)    );
GO


CREATE INDEX EC_P_D_HE_FKI1 ON EC_PERSONAS_D_HE (SESION_ID);
GO
CREATE INDEX EC_PERSONAS_D_HE_FKIndex2 ON EC_PERSONAS_D_HE (TIPO_INCIDENCIA_ID);
GO


INSERT INTO EC_PERSONAS_D_HE (PERSONA_D_HE_ID, SESION_ID) VALUES(0,0);

GO













CREATE TABLE EC_PERSONAS_ES (
  PERSONA_ES_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_DIARIO_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_ES_ORD DATETIME  NOT NULL  ,
  ACCESO_E_ES_ID INTEGER UNSIGNED  NOT NULL  ,
  ACCESO_S_ES_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_ES_TE TIME    ,
  TIPO_INC_SIS_ID INTEGER  NOT NULL  ,
  INCIDENCIA_ID INTEGER UNSIGNED  NOT NULL    ,
PRIMARY KEY(PERSONA_ES_ID)          );
GO


CREATE INDEX EC_PERSONAS_ES_FKI2 ON EC_PERSONAS_ES (ACCESO_E_ES_ID);
GO
CREATE INDEX EC_PERSONAS_ES_FKI3 ON EC_PERSONAS_ES (ACCESO_S_ES_ID);
GO
CREATE INDEX EC_PERSONAS_ES_FKI3 ON EC_PERSONAS_ES (PERSONA_DIARIO_ID);
GO
CREATE INDEX EC_PERSONAS_ES_FKI4 ON EC_PERSONAS_ES (TIPO_INC_SIS_ID);
GO
CREATE INDEX EC_PERSONAS_ES_FKI5 ON EC_PERSONAS_ES (INCIDENCIA_ID);
GO









-- ------------------------------------------------------------
-- contiene el historial de datos modificados
-- ------------------------------------------------------------

CREATE TABLE EC_PERSONAS_HIST (
  PERSONA_HIST_ID INTEGER  NOT NULL  ,
  PERSONA_ID INTEGER    ,
  CAMPO_NOMBRE VARCHAR(45)  NOT NULL  ,
  SESION_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_HIST_VAL VARCHAR(4000)    ,
  PERSONA_HIST_FECHA DATE    ,
  PERSONA_HIST_FECHA_D DATE    ,
  PERSONA_HIST_FECHA_H DATE    ,
  PERSONA_HIST_COM VARCHAR(4000)    ,
  PERSONA_HIST_B BLOB      ,
PRIMARY KEY(PERSONA_HIST_ID)      );
GO


CREATE INDEX EC_PERSONAS_HIST_FKIndex1 ON EC_PERSONAS_HIST (CAMPO_NOMBRE);
GO
CREATE INDEX EC_PERSONAS_HIST_FKIndex2 ON EC_PERSONAS_HIST (SESION_ID);
GO
CREATE INDEX EC_PERSONAS_HIST_I ON EC_PERSONAS_HIST (PERSONA_HIST_FECHA_H, PERSONA_HIST_COM);
GO










-- ------------------------------------------------------------
-- Contiene el listado de imágenes de cada una de las personas
-- ------------------------------------------------------------

CREATE TABLE EC_PERSONAS_IMA (
  PERSONA_IMA_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_IMAGEN_ID INTEGER UNSIGNED  NOT NULL  ,
  PERSONA_ID INTEGER  NOT NULL  ,
  PERSONA_IMA BLOB    ,
  PERSONA_IMA_ORD INTEGER UNSIGNED   DEFAULT 0   ,
PRIMARY KEY(PERSONA_IMA_ID)    );
GO


CREATE INDEX EC_PERSONAS_IMA_FKIndex1 ON EC_PERSONAS_IMA (PERSONA_ID);
GO
CREATE INDEX EC_PERSONAS_IMA_FKIndex2 ON EC_PERSONAS_IMA (TIPO_IMAGEN_ID);
GO







-- ------------------------------------------------------------
-- Contiene el listado de todas las personas que se usaran de prueba, para que al momento de ejecutar una funcion todos sus datos sean borrados.
-- ------------------------------------------------------------

CREATE TABLE EC_PERSONAS_P (
  PERSONA_ID INTEGER  NOT NULL  ,
  PERSONA_P_EXTRA VARCHAR(255)      );
GO


CREATE UNIQUE INDEX EC_PERSONAS_P_FKIndex1 ON EC_PERSONAS_P (PERSONA_ID);
GO





-- ------------------------------------------------------------
-- Tabla usada para almacenar el Sha de la umtima importatación del empleado, de tal manera que si es diferente si importa el empleado, si es igual no lo importa.
-- ------------------------------------------------------------

CREATE TABLE EC_PERSONAS_SHA (
  PERSONA_ID INTEGER  NOT NULL  ,
  PERSONA_SHA VARCHAR(255)    ,
  PERSONA_SHA_FECHA DATETIME        );
GO


CREATE INDEX EC_PERSONAS_SHA_FKIndex1 ON EC_PERSONAS_SHA (PERSONA_ID);
GO
CREATE UNIQUE INDEX EC_PERSONAS_SHA_I ON EC_PERSONAS_SHA (PERSONA_ID);
GO





-- ------------------------------------------------------------
-- Contiene el listado de personas que checaran sin huella
-- ------------------------------------------------------------

CREATE TABLE EC_PERSONAS_S_HUELLA (
  PERSONA_ID INTEGER  NOT NULL  ,
  PERSONA_S_HUELLA_FECHA DATETIME    ,
  PERSONA_S_HUELLA_CLAVE VARCHAR(45)      );
GO


CREATE INDEX EC_PERSONAS_S_HUELLAFKI1 ON EC_PERSONAS_S_HUELLA (PERSONA_ID);
GO





-- ------------------------------------------------------------
-- Sirve para asignar que  personas tendran derecho a checar por que terminales ademas contiene:
--  1. el valor del ultimo campo llave enviado,
--  2. El valor del ultimo campo adicional
--  3. El hash del ultimo vector 1
--  4. El hash del ultimo vector 2 
--  5. El hash del ultimo arreglo de vectores
-- ------------------------------------------------------------

CREATE TABLE EC_PERSONAS_TERMINALES (
  PERSONA_ID INTEGER  NOT NULL  ,
  TERMINAL_ID INTEGER  NOT NULL  ,
  PERSONA_TERMINAL_CAMPO_L VARCHAR(255)    ,
  PERSONA_TERMINAL_CAMPO_A VARCHAR(255)    ,
  PERSONA_TERMINAL_V1_HASH VARCHAR(60)    ,
  PERSONA_TERMINAL_V2_HASH VARCHAR(60)    ,
  PERSONA_TERMINAL_V3_HASH VARCHAR(60)    ,
  PERSONA_TERMINAL_SV BOOL   DEFAULT 0 ,
  PERSONA_TERMINAL_UPDATE DATETIME    ,
  PERSONA_TERMINAL_L_FH_UC DATETIME    ,
  PERSONA_TERMINAL_A_FH_UC DATETIME    ,
  PERSONA_TERMINAL_V1_FH_UC DATETIME    ,
  PERSONA_TERMINAL_V2_FH_UC DATETIME    ,
  PERSONA_TERMINAL_V3_FH_UC DATETIME    ,
  PERSONA_TERMINAL_L_FH_UT DATETIME    ,
  PERSONA_TERMINAL_A_FH_UT DATETIME    ,
  PERSONA_TERMINAL_V1_FH_UT DATETIME    ,
  PERSONA_TERMINAL_V2_FH_UT DATETIME    ,
  PERSONA_TERMINAL_V3_FH_UT DATETIME    ,
  PERSONA_TERMINAL_BORRADO BOOL    ,
  PERSONA_TERMINAL_B_FH DATETIME    ,
  PERSONA_TERMINAL_B_APLICADO DATETIME    ,
  PERSONA_TERMINAL_SH_UC DATETIME    ,
  PERSONA_TERMINAL_SH_UT DATETIME    ,
   PERSONA_TERMINAL_ERRORFH DATETIME    ,
  PERSONA_TERMINAL_ERROR VARCHAR(255)      ,
PRIMARY KEY(PERSONA_ID, TERMINAL_ID)        );
GO


CREATE INDEX PERSONAS_TERMINALES_FKI1 ON EC_PERSONAS_TERMINALES (PERSONA_ID);
GO
CREATE INDEX PERSONAS_TERMINALES_FKI2 ON EC_PERSONAS_TERMINALES (TERMINAL_ID);
GO
CREATE INDEX PERSONAS_TERMINALES_FKI3 ON EC_PERSONAS_TERMINALES (PERSONA_TERMINAL_CAMPO_L);
GO
CREATE INDEX PERSONAS_TERMINALES_FK4 ON EC_PERSONAS_TERMINALES (PERSONA_TERMINAL_CAMPO_A);
GO





























-- ------------------------------------------------------------
-- Contiene la lista de procutos que se han cargado en el sistema,.
-- Nunca se podra modificar lel registro, para este caso, lo que se deberá hacer es crear una copia del registro y se le asignara un nuevo producto_id y al anterior se pondra el producto_borrado en true;
-- 
-- Para borrar el registro, se pondra el producto_borrado en true;
-- ------------------------------------------------------------

CREATE TABLE EC_PRODUCTOS (
  PRODUCTO_ID INTEGER UNSIGNED  NOT NULL  ,
  SESION_ID INTEGER UNSIGNED  NOT NULL  ,
  PRODUCTO_NO INTEGER UNSIGNED  NOT NULL  ,
  PRODUCTO VARCHAR(45)  NOT NULL  ,
  PRODUCTO_COSTO DECIMAL  NOT NULL  ,
  PRODUCTO_BORRADO BOOL  NOT NULL    ,
PRIMARY KEY(PRODUCTO_ID)  );
GO


CREATE INDEX EC_PRODUCTOS_FKIndex1 ON EC_PRODUCTOS (SESION_ID);
GO


INSERT INTO EC_PRODUCTOS (PRODUCTO_ID, SESION_ID, PRODUCTO_NO, PRODUCTO, PRODUCTO_COSTO, PRODUCTO_BORRADO) VALUES(0,0,0,'',0,1);

GO









-- ------------------------------------------------------------
-- Contiene el listado de promociones disponibles para carga a monedero
-- ------------------------------------------------------------

CREATE TABLE EC_PROMOCIONES (
  PROMOCION_ID INTEGER UNSIGNED  NOT NULL  ,
  RECOMPENSA_ID INTEGER UNSIGNED  NOT NULL  ,
  PROMOCION_NO_MOV INTEGER UNSIGNED    ,
  PROMOCION_NOMBRE VARCHAR(45)    ,
  PROMOCION_COMENTARIO VARCHAR(255)    ,
  PROMOCION_DESDE DATETIME    ,
  PROMOCION_HASTA DATETIME    ,
  PROMOCION_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(PROMOCION_ID)    );
GO


CREATE INDEX PROMOCIONES_FKI1 ON EC_PROMOCIONES (RECOMPENSA_ID);
GO
CREATE INDEX EC_PROMOCIONES_FKI1 ON EC_PROMOCIONES (RECOMPENSA_ID);
GO



INSERT INTO EC_PROMOCIONES (PROMOCION_ID, RECOMPENSA_ID, PROMOCION_NO_MOV, PROMOCION_NOMBRE, PROMOCION_COMENTARIO, PROMOCION_BORRADO) VALUES(0,0,0,'Sin promocion','',1);

GO







CREATE TABLE EC_PUBLICIDAD (
  PUBLICIDAD_ID INTEGER  NOT NULL  ,
  SUSCRIPCION_ID INTEGER  NOT NULL  ,
  TIPO_PUBLICIDAD_ID INTEGER  NOT NULL  ,
  PUBLICIDAD BLOB    ,
  PUBLICIDAD_NOMBRE VARCHAR(255)    ,
  PUBLICIDAD_COMENTARIO VARCHAR(4000)    ,
  PUBLICIDAD_LINK VARCHAR(4000)    ,
  PUBLICIDAD_ORDEN INTEGER UNSIGNED    ,
  PUBLICIDAD_DESDE DATETIME    ,
  PUBLICIDAD_HASTA DATETIME    ,
  PUBLICIDAD_SEGUNDOS INTEGER UNSIGNED    ,
  PUBLICIDAD_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(PUBLICIDAD_ID)    );
GO


CREATE INDEX EC_PUBLICIDAD_FKIndex1 ON EC_PUBLICIDAD (TIPO_PUBLICIDAD_ID);
GO
CREATE INDEX EC_PUBLICIDAD_FKIndex2 ON EC_PUBLICIDAD (SUSCRIPCION_ID);
GO











-- ------------------------------------------------------------
-- Contiene el listado de recompensas
-- ------------------------------------------------------------

CREATE TABLE EC_RECOMPENSAS (
  RECOMPENSA_ID INTEGER UNSIGNED  NOT NULL  ,
  RECOMPENSA_NOMBRE VARCHAR(45)  NOT NULL  ,
  RECOMPENSA_POR DECIMAL   DEFAULT 0 ,
  RECOMPENSA_PT DECIMAL   DEFAULT 0 ,
  RECOMPENSA_COMEN VARCHAR(255)    ,
  RECOMPENSA_PRECIO DECIMAL   DEFAULT 0 ,
  RECOMPENSA_PRECIO_MAX DECIMAL   DEFAULT -1 ,
  RECOMPENSA_CANTIDAD DECIMAL   DEFAULT 0 ,
  RECOMPENSA_CANTIDAD_MAX DECIMAL   DEFAULT -1 ,
  RECOMPENSA_M_PRECIO BOOL   DEFAULT 1 ,
  RECOMPENSA_M_CANTIDAD BOOL   DEFAULT 1 ,
  RECOMPENSA_FECHAHORA_I DATETIME    ,
  RECOMPENSA_FECHAHORA_F DATETIME    ,
  RECOMPENSA_HORAI TIME    ,
  RECOMPENSA_HORAF TIME    ,
  RECOMPENSA_TECLA VARCHAR(10)    ,
  RECOMPENSA_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(RECOMPENSA_ID));
GO


INSERT INTO EC_RECOMPENSAS (RECOMPENSA_ID, RECOMPENSA_NOMBRE, RECOMPENSA_POR, RECOMPENSA_PT, RECOMPENSA_COMEN, RECOMPENSA_BORRADO) VALUES(0,'Sin Recompensa',0,0,'',1);

GO



















CREATE TABLE EC_REC_NOMINAS (
  REC_NOMINA_ID INTEGER  NOT NULL  ,
  NOMINA_ID INTEGER  NOT NULL  ,
  TIPO_NOMINA_ID INTEGER  NOT NULL  ,
  PERSONA_ID INTEGER  NOT NULL  ,
  REC_NOMINA_ANO INTEGER    ,
  REC_NOMINA_NO INTEGER    ,
  REC_NOMINA_FECHA_GEN DATE    ,
  REC_NOMINA_FINICIO DATE    ,
  REC_NOMINA_FFIN DATE    ,
  REC_NOMINA_DIASPAG DECIMAL    ,
  REC_NOMINA_DESCTRAB DECIMAL    ,
  REC_NOMINA_VALES DECIMAL    ,
  REC_NOMINA_HEXTRAS DECIMAL    ,
  REC_NOMINA_N_PAGAR DECIMAL    ,
  REC_NOMINA_COMENTARIOS VARCHAR(4000)    ,
  REC_NOMINA_CONSULTADO INTEGER   DEFAULT 0 ,
  REC_NOMINA_FCONSULTA DATETIME    ,
  REC_NOMINA_IMPRESO INTEGER   DEFAULT 0 ,
  REC_NOMINA_DATOS VARCHAR(4000)    ,
  REC_NOMINA_PDF BLOB    ,
  REC_NOMINA_XML BLOB      ,
PRIMARY KEY(REC_NOMINA_ID)        );
GO


CREATE INDEX EC_REC_NOMINAS_FKIndex1 ON EC_REC_NOMINAS (PERSONA_ID);
GO
CREATE INDEX EC_REC_NOMINAS_FKIndex2 ON EC_REC_NOMINAS (TIPO_NOMINA_ID);
GO
CREATE INDEX EC_REC_NOMINAS_FKIndex3 ON EC_REC_NOMINAS (NOMINA_ID);
GO
CREATE UNIQUE INDEX EC_REC_NOMINAS_I ON EC_REC_NOMINAS (NOMINA_ID, PERSONA_ID);
GO




















CREATE TABLE EC_REC_NOMI_MOV (
  REC_NOMI_MOV_ID INTEGER  NOT NULL  ,
  CLASIFIC_MOV_ID INTEGER  NOT NULL  ,
  REC_NOMINA_ID INTEGER  NOT NULL  ,
  REC_NOMI_MOV_CVE VARCHAR(45)    ,
  REC_NOMI_MOV_CONCEPTO VARCHAR(255)    ,
  REC_NOMI_MOV_VALOR DECIMAL    ,
  REC_NOMI_MOV_UNIDAD DECIMAL    ,
  REC_NOMI_MOV_IMPORTE DECIMAL    ,
  REC_NOMI_MOV_SALDO DECIMAL      ,
PRIMARY KEY(REC_NOMI_MOV_ID)    );
GO


CREATE INDEX EC_REC_NOMI_MOV_FKIndex1 ON EC_REC_NOMI_MOV (REC_NOMINA_ID);
GO
CREATE INDEX EC_REC_NOMI_MOV_FKIndex2 ON EC_REC_NOMI_MOV (CLASIFIC_MOV_ID);
GO








-- ------------------------------------------------------------
-- Esta tabla contiene el listado de todos los reportes que podrán ser enviados por mail, en un futoro estarán todos los reportes de eClock
-- ------------------------------------------------------------

CREATE TABLE EC_REPORTES (
  REPORTE_ID INTEGER UNSIGNED  NOT NULL  ,
  REPORTE_SRV_ID INTEGER  NOT NULL  ,
  REPORTE_TITULO VARCHAR(255)    ,
  REPORTE_DESCRIP VARCHAR(1024)    ,
  REPORTE_IDIOMA VARCHAR(255)    ,
  REPORTE_CLASE VARCHAR(1024)    ,
  REPORTE_MODELO VARCHAR(1024)    ,
  REPORTE_IMAGEN BLOB    ,
  REPORTE_PRECIO DECIMAL    ,
  REPORTE_TAMANO VARCHAR(255)    ,
  REPORTE_PARAM VARCHAR(4000)    ,
  REPORTE_CONFIG VARCHAR(4000)    ,
  REPORTE_FORMATOS VARCHAR(255)    ,
  REPORTE_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(REPORTE_ID)  );
GO


CREATE INDEX EC_REPORTES_FKIndex1 ON EC_REPORTES (REPORTE_SRV_ID);
GO

















CREATE TABLE EC_REPORTES_SRV (
  REPORTE_SRV_ID INTEGER  NOT NULL  ,
  REPORTE_SRV_NOMBRE VARCHAR(255)    ,
  REPORTE_SRV_URL VARCHAR(1024)    ,
  REPORTE_SRV_EMPR VARCHAR(1024)    ,
  REPORTE_SRV_DESC VARCHAR(1024)    ,
  REPORTE_SRV_BORRADO BOOL      ,
PRIMARY KEY(REPORTE_SRV_ID));
GO









CREATE TABLE EC_REPORTES_USUARIOS (
  REPORTE_ID INTEGER UNSIGNED  NOT NULL  ,
  USUARIO_ID INTEGER  NOT NULL  ,
  REPORTE_USUARIO_CFG BLOB    ,
  REPORTE_USUARIO_INST DATETIME    ,
  REPORTE_USUARIO_SPAGO DATETIME    ,
  REPORTE_USUARIO_UUSO DATETIME    ,
  REPORTE_USUARIO_UMOD DATETIME    ,
  REPORTE_USUARIO_ORD INTEGER    ,
  REPORTE_USUARIO_EDO INTEGER   DEFAULT 0   ,
PRIMARY KEY(REPORTE_ID, USUARIO_ID)    );
GO


CREATE INDEX EC_REPORTES_has_EC_USUARIOS_FKIndex1 ON EC_REPORTES_USUARIOS (REPORTE_ID);
GO
CREATE INDEX EC_REPORTES_has_EC_USUARIOS_FKIndex2 ON EC_REPORTES_USUARIOS (USUARIO_ID);
GO










-- ------------------------------------------------------------
-- Contiene el listado de restricciones validas en el sistema
-- ------------------------------------------------------------

CREATE TABLE EC_RESTRICCIONES (
  RESTRICCION_ID INTEGER UNSIGNED  NOT NULL  ,
  RESTRICCION VARCHAR(255)    ,
  RESTRICCION_NOMBRE VARCHAR(255)    ,
  RESTRICCION_BORRADO BOOL      ,
PRIMARY KEY(RESTRICCION_ID));
GO


-- Ahora se encuentran en el archivo Querys\ec_Restricciones en el Services

GO







-- ------------------------------------------------------------
-- Indica que restricciones tendra permitido un determinado perfil
-- ------------------------------------------------------------

CREATE TABLE EC_RESTRICCIONES_PERFILES (
  RESTRICCION_ID INTEGER UNSIGNED  NOT NULL  ,
  PERFIL_ID INTEGER  NOT NULL    ,
PRIMARY KEY(RESTRICCION_ID, PERFIL_ID)    );
GO


CREATE INDEX EC_RESTRICCIONESFKI1 ON EC_RESTRICCIONES_PERFILES (RESTRICCION_ID);
GO
CREATE INDEX EC_PERFILESFKI2 ON EC_RESTRICCIONES_PERFILES (PERFIL_ID);
GO


INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(1,1 );
INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(1,4 );
INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(999,1 );
INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(999,1 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(1000,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(1100,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(1200,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(1300,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(1500,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(1800,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(2000,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(2100,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(2200,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(2300,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(2500,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(2600,4 );

INSERT INTO EC_RESTRICCIONES_PERFILES (RESTRICCION_ID, PERFIL_ID) VALUES(2900,4 );

GO




-- ------------------------------------------------------------
-- Existira un registro por cada sesión iniciada en el servidor, para la versión 2.0 se prevee agregar datos adicionales a la sesion como la maquina, explorador, ip, etc.
-- ------------------------------------------------------------

CREATE TABLE EC_SESIONES (
  SESION_ID INTEGER UNSIGNED  NOT NULL  ,
  USUARIO_ID INTEGER  NOT NULL  ,
  SESION_INICIO_FECHAHORA DATETIME    ,
  SESION_FIN_FECHAHORA DATETIME    ,
  SESION_TERMINAL_ID INTEGER   DEFAULT 0   ,
PRIMARY KEY(SESION_ID)  );
GO


CREATE INDEX EC_SESIONESFKI1 ON EC_SESIONES (USUARIO_ID);
GO



INSERT INTO EC_SESIONES (SESION_ID, USUARIO_ID) VALUES(0,0);

GO







CREATE TABLE EC_SESIONES_VAR (
  SESION_VAR_ID INTEGER  NOT NULL  ,
  SESION_ID INTEGER UNSIGNED  NOT NULL  ,
  SESION_VAR_VARIABLE VARCHAR(255)    ,
  SESION_VAR_VALOR VARCHAR(255)    ,
  SESION_VAR_BIN BLOB      ,
PRIMARY KEY(SESION_VAR_ID)    );
GO


CREATE INDEX EC_SESIONES_VAR_FKI1 ON EC_SESIONES_VAR (SESION_ID);
GO
CREATE INDEX EC_SESIONES_VAR_I ON EC_SESIONES_VAR (SESION_ID, SESION_VAR_VARIABLE);
GO







-- ------------------------------------------------------------
-- Listado de los sitemas de nomina soportados para interfases
-- ------------------------------------------------------------

CREATE TABLE EC_SISTEMAS_NOMINA (
  SISTEMA_NOMINA_ID INTEGER  NOT NULL  ,
  SISTEMA_NOMINA_NOMBRE VARCHAR(255)    ,
  SISTEMA_NOMINA_DESCRIPCION VARCHAR(4000)    ,
  SISTEMA_NOMINA_CAMPOS VARCHAR(4000)    ,
  SISTEMA_NOMINA_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(SISTEMA_NOMINA_ID));
GO


INSERT INTO EC_SISTEMAS_NOMINA (SISTEMA_NOMINA_ID, SISTEMA_NOMINA_NOMBRE, SISTEMA_NOMINA_DESCRIPCION, SISTEMA_NOMINA_CAMPOS, SISTEMA_NOMINA_BORRADO) VALUES(0,'Sin Interfaz de nomina','','',0);
INSERT INTO EC_SISTEMAS_NOMINA (SISTEMA_NOMINA_ID, SISTEMA_NOMINA_NOMBRE, SISTEMA_NOMINA_DESCRIPCION, SISTEMA_NOMINA_CAMPOS, SISTEMA_NOMINA_BORRADO) VALUES(1,'Oracle BS','','',0);
INSERT INTO EC_SISTEMAS_NOMINA (SISTEMA_NOMINA_ID, SISTEMA_NOMINA_NOMBRE, SISTEMA_NOMINA_DESCRIPCION, SISTEMA_NOMINA_CAMPOS, SISTEMA_NOMINA_BORRADO) VALUES(2,'Adam','','',0);
INSERT INTO EC_SISTEMAS_NOMINA (SISTEMA_NOMINA_ID, SISTEMA_NOMINA_NOMBRE, SISTEMA_NOMINA_DESCRIPCION, SISTEMA_NOMINA_CAMPOS, SISTEMA_NOMINA_BORRADO) VALUES(3,'Sicoss','','',0);
INSERT INTO EC_SISTEMAS_NOMINA (SISTEMA_NOMINA_ID, SISTEMA_NOMINA_NOMBRE, SISTEMA_NOMINA_DESCRIPCION, SISTEMA_NOMINA_CAMPOS, SISTEMA_NOMINA_BORRADO) VALUES(4,'Noi','','',0);
INSERT INTO EC_SISTEMAS_NOMINA (SISTEMA_NOMINA_ID, SISTEMA_NOMINA_NOMBRE, SISTEMA_NOMINA_DESCRIPCION, SISTEMA_NOMINA_CAMPOS, SISTEMA_NOMINA_BORRADO) VALUES(5,'Nomipaq','','',0);

GO








-- ------------------------------------------------------------
-- Contiene el listado de sitios o lugares de trabajo al que pertenecen las terminales
-- ------------------------------------------------------------

CREATE TABLE EC_SITIOS (
  SITIO_ID INTEGER  NOT NULL  ,
  SITIO_NOMBRE VARCHAR(45)    ,
  SITIO_RESPONSABLE VARCHAR(256)    ,
  SITIO_TELEFONOS VARCHAR(256)    ,
  SITIO_EMAIL VARCHAR(256)    ,
  SITIO_DIRECCION_1 VARCHAR(256)    ,
  SITIO_DIRECCION_2 VARCHAR(256)    ,
  SITIO_CP VARCHAR(256)    ,
  SITIO_CIUDAD VARCHAR(255)    ,
  SITIO_ESTADO VARCHAR(255)    ,
  SITIO_PAIS VARCHAR(255)    ,
  SITIO_REFERENCIAS VARCHAR(256)    ,
  SITIO_COMENTARIOS VARCHAR(256)    ,
  SITIO_CONSULTA VARCHAR(1024)    ,
  SITIO_HDESDE_SVEC TIME    ,
  SITIO_HHASTA_SVEC TIME    ,
  SITIO_SEGUNDOS_SYNC INTEGER UNSIGNED   DEFAULT 1200 ,
  SITIO_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(SITIO_ID));
GO


INSERT INTO EC_SITIOS (SITIO_ID, SITIO_NOMBRE, SITIO_CONSULTA,SITIO_BORRADO) VALUES(0, 'Sitio no asignado', '',1);
INSERT INTO EC_SITIOS (SITIO_ID, SITIO_NOMBRE, SITIO_CONSULTA) VALUES(1, 'Sitio predeterminado', 'SELECT PERSONA_ID FROM EC_PERSONAS');

GO





















-- ------------------------------------------------------------
-- Solicutud de movimiento o transaccion
-- ------------------------------------------------------------

CREATE TABLE EC_SOLICITUDES (
  SOLICITUD_ID INTEGER  NOT NULL  ,
  EDO_SOLICITUD_ID INTEGER  NOT NULL  ,
  TIPO_PRIORIDAD_ID INTEGER  NOT NULL  ,
  SOLICITUD_TITULO VARCHAR(45)    ,
  SOLICITUD_DESC VARCHAR(255)    ,
  SOLICITUD_EXTRAS VARCHAR(1024)    ,
  SOLICITUD_FECHAHORA DATETIME    ,
  SOLICITUD_ANTESDE DATETIME    ,
  SOLICITUD_VISTO BOOL   DEFAULT 0 ,
  PERSONA_ID INTEGER    ,
  SOLICITUD_EXTRA_ID VARCHAR(45)    ,
  SOLICITUD_PDIDS VARCHAR(500)      ,
PRIMARY KEY(SOLICITUD_ID)    );
GO


CREATE INDEX EC_SOLICITUDES_FKIndex1 ON EC_SOLICITUDES (TIPO_PRIORIDAD_ID);
GO
CREATE INDEX EC_SOLICITUDES_FKIndex3 ON EC_SOLICITUDES (EDO_SOLICITUD_ID);
GO













CREATE TABLE EC_SOLICITUDES_P_DIARIO (
  SOLICITUD_ID INTEGER  NOT NULL  ,
  PERSONA_DIARIO_ID INTEGER UNSIGNED  NOT NULL    ,
PRIMARY KEY(SOLICITUD_ID, PERSONA_DIARIO_ID)    );
GO


CREATE INDEX EC_SOLICITUDES_has_EC_PERSONAS_DIARIO_FKIndex1 ON EC_SOLICITUDES_P_DIARIO (SOLICITUD_ID);
GO
CREATE INDEX EC_SOLICITUDES_has_EC_PERSONAS_DIARIO_FKIndex2 ON EC_SOLICITUDES_P_DIARIO (PERSONA_DIARIO_ID);
GO



CREATE TABLE EC_SOLICITUDES_USUARIOS (
  SOLICITUD_ID INTEGER  NOT NULL  ,
  USUARIO_ID INTEGER  NOT NULL  ,
  SOLICITUD_USUARIO VARCHAR(255)      ,
PRIMARY KEY(SOLICITUD_ID, USUARIO_ID)    );
GO


CREATE INDEX SOLICITUDES_USUARIOSFKI1 ON EC_SOLICITUDES_USUARIOS (SOLICITUD_ID);
GO
CREATE INDEX SOLICITUDES_USUARIOSFKI2 ON EC_SOLICITUDES_USUARIOS (USUARIO_ID);
GO




-- ------------------------------------------------------------
-- Contiene un listado de todos los valores usados en la primer agrupación
-- ------------------------------------------------------------

CREATE TABLE EC_SUSCRIPCION (
  SUSCRIPCION_ID INTEGER  NOT NULL  ,
  EDO_SUSCRIPCION_ID INTEGER  NOT NULL  ,
  SUSCRIP_PRECIO_ID INTEGER  NOT NULL  ,
  SUSCRIPCION_NOMBRE VARCHAR(45)  NOT NULL  ,
  SUSCRIPCION_RAZON VARCHAR(255)    ,
  SUSCRIPCION_RFC VARCHAR(255)    ,
  SUSCRIPCION_DIRECCION1 VARCHAR(255)    ,
  SUSCRIPCION_DIRECCION2 VARCHAR(255)    ,
  SUSCRIPCION_CP VARCHAR(255)    ,
  SUSCRIPCION_CIUDAD VARCHAR(255)    ,
  SUSCRIPCION_ESTADO VARCHAR(255)    ,
  SUSCRIPCION_PAIS VARCHAR(255)    ,
  SUSCRIPCION_FACTURAR BOOL    ,
  SUSCRIPCION_CONTRATACION DATETIME    ,
  SUSCRIPCION_EMPLEADOS INTEGER    ,
  SUSCRIPCION_TERMINALES INTEGER    ,
  SUSCRIPCION_USUARIOS INTEGER    ,
  SUSCRIPCION_ALUMNOS INTEGER    ,
  SUSCRIPCION_VISITANTES INTEGER    ,
  SUSCRIPCION_ADICIONALES BOOL    ,
  SUSCRIPCION_OTROS VARCHAR(255)    ,
  SUSCRIPCION_MENSUAL DECIMAL    ,
  SUSCRIPCION_FINAL DATETIME    ,
  SUSCRIPCION_URL VARCHAR(512)    ,
  SUSCRIPCION_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(SUSCRIPCION_ID)    );
GO


CREATE INDEX EC_SUSCRIPCION_FKIndex1 ON EC_SUSCRIPCION (SUSCRIP_PRECIO_ID);
GO
CREATE INDEX EC_SUSCRIPCION_FKIndex2 ON EC_SUSCRIPCION (EDO_SUSCRIPCION_ID);
GO


INSERT INTO EC_SUSCRIPCION (SUSCRIPCION_ID,SUSCRIP_PRECIO_ID,SUSCRIPCION_NOMBRE,EDO_SUSCRIPCION_ID) VALUES(0,0,'Sin Suscripcion',0);

GO




























CREATE TABLE EC_SUSCRIP_PRECIOS (
  SUSCRIP_PRECIO_ID INTEGER  NOT NULL  ,
  SUSCRIP_PRECIO_DESC VARCHAR(255)    ,
  SUSCRIP_PRECIO_EMPLEADOS DECIMAL    ,
  SUSCRIP_PRECIO_TERMINALES DECIMAL    ,
  SUSCRIP_PRECIO_USUARIOS DECIMAL    ,
  SUSCRIP_PRECIO_ALUMNOS DECIMAL    ,
  SUSCRIP_PRECIO_VISITANTES DECIMAL    ,
  SUSCRIP_PRECIO_BORRADOS BOOL      ,
PRIMARY KEY(SUSCRIP_PRECIO_ID));
GO


INSERT INTO EC_SUSCRIP_PRECIOS (SUSCRIP_PRECIO_ID, SUSCRIP_PRECIO_DESC, SUSCRIP_PRECIO_EMPLEADOS, SUSCRIP_PRECIO_TERMINALES, SUSCRIP_PRECIO_USUARIOS, SUSCRIP_PRECIO_ALUMNOS, SUSCRIP_PRECIO_VISITANTES, SUSCRIP_PRECIO_BORRADOS)
 VALUES(0, 'Precio Predeterminado', 0, 0, 0, 0, 0, 0);

GO











CREATE TABLE EC_TABLAS (
  TABLA_NOMBRE VARCHAR(45)  NOT NULL  ,
  TABLA_ETIQUETA VARCHAR(45)  NOT NULL  ,
  TABLA_PLURAL VARCHAR(45)    ,
  TABLA_SINGULAR VARCHAR(45)    ,
  TABLA_DESCRIPCION VARCHAR(255)    ,
  TABLA_LLAVE VARCHAR(255)    ,
  TABLA_GRID_QRY VARCHAR(2048)    ,
  TABLA_ICONO16 VARCHAR(255)    ,
  TABLA_ICONO24 VARCHAR(255)    ,
  TABLA_ICONO32 VARCHAR(255)    ,
  TABLA_ICONO64 VARCHAR(255)    ,
  TABLA_C_BORRADO VARCHAR(45)    ,
  TABLA_HISTORICO BOOL   DEFAULT 1 ,
  TABLA_NUEVO BOOL   DEFAULT 1 ,
  TABLA_EDICION BOOL   DEFAULT 1 ,
  TABLA_BORRAR BOOL   DEFAULT 1 ,
  TABLA_HIJOS VARCHAR(255)    ,
  TABLA_VAL_SUSCRIPCION BOOL   DEFAULT 1 ,
  TABLA_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TABLA_NOMBRE));
GO






















CREATE TABLE EC_TABLAS_CAMPOS (
  CAMPO_NOMBRE VARCHAR(45)  NOT NULL  ,
  TABLA_NOMBRE VARCHAR(45)  NOT NULL  ,
  TIPO_AUTONUMERICO_ID INTEGER  NOT NULL  ,
  TABLA_CAMPO_ORDEN INTEGER   DEFAULT 0 ,
  TABLA_CAMPO_DEFAULT VARCHAR(255)    ,
  TABLA_CAMPO_NO_NULO BOOL   DEFAULT 0 ,
  TABLA_CAMPO_DUPLICADO VARCHAR(255)    ,
  TABLA_CAMPO_VISIBLE BOOL   DEFAULT 1 ,
  TABLA_CAMPO_NUEVO BOOL  NOT NULL DEFAULT 1 ,
  TABLA_CAMPO_EDITABLE BOOL   DEFAULT 0 ,
  TABLA_CAMPO_IMPORTABLE BOOL   DEFAULT 1 ,
  TABLA_CAMPO_VALIDACION VARCHAR(255)    ,
  TABLA_CAMPO_AYUDA VARCHAR(255)    ,
  TABLA_CAMPO_COLUMNA INTEGER    ,
  TABLA_CAMPO_FILA INTEGER    ,
  TABLA_CAMPO_COLUMNAS INTEGER    ,
  TABLA_CAMPO_FILAS INTEGER      ,
PRIMARY KEY(CAMPO_NOMBRE, TABLA_NOMBRE)      );
GO


CREATE INDEX EC_TABLAS_CAMPOS_FKI2 ON EC_TABLAS_CAMPOS (CAMPO_NOMBRE);
GO
CREATE INDEX EC_TABLAS_CAMPOS_FKIndex2 ON EC_TABLAS_CAMPOS (TABLA_NOMBRE);
GO
CREATE INDEX EC_TABLAS_CAMPOS_FKIndex3 ON EC_TABLAS_CAMPOS (TIPO_AUTONUMERICO_ID);
GO




















-- ------------------------------------------------------------
-- Contiene los comandos o acciones que estarán permitidas para realizar en determinada tabla
-- ------------------------------------------------------------

CREATE TABLE EC_TABLAS_COMANDOS (
  TABLA_COMANDO_ID INTEGER  NOT NULL  ,
  TABLA_NOMBRE VARCHAR(45)  NOT NULL  ,
  CATALOGO_ID INTEGER  NOT NULL DEFAULT 0 ,
  TABLA_COMANDO_NOMBRE VARCHAR(45)    ,
  TABLA_COMANDO_CODIGO VARCHAR(255)    ,
  TABLA_COMANDO_ETIQUETA VARCHAR(255)    ,
  TABLA_COMANDO_TOOLTIP VARCHAR(255)    ,
  TABLA_COMANDO_MULTIPLE BOOL   DEFAULT 1 ,
  TABLA_COMANDO_GRUPAL BOOL   DEFAULT 1 ,
  TABLA_COMANDO_GRID BOOL   DEFAULT 1 ,
  TABLA_COMANDO_EDICION BOOL   DEFAULT 1 ,
  TABLA_COMANDO_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TABLA_COMANDO_ID)    );
GO


CREATE INDEX EC_TABLAS_COMANDOS_FKIndex2 ON EC_TABLAS_COMANDOS (CATALOGO_ID);
GO
CREATE INDEX EC_TABLAS_COMANDOS_FKIndex2 ON EC_TABLAS_COMANDOS (TABLA_NOMBRE);
GO


INSERT INTO EC_TABLAS_COMANDOS (TABLA_COMANDO_ID, TABLA_NOMBRE, CATALOGO_ID, TABLA_COMANDO_NOMBRE, TABLA_COMANDO_CODIGO, TABLA_COMANDO_ETIQUETA, TABLA_COMANDO_TOOLTIP, TABLA_COMANDO_MULTIPLE, TABLA_COMANDO_GRUPAL, TABLA_COMANDO_GRID, TABLA_COMANDO_EDICION, TABLA_COMANDO_BORRADO)
VALUES(1, 'EC_PERSONAS', 0, 'Nuevo', 'URL(WF_EmpleadosEd.aspx?Parametros=<IDS></IDS>)', '', '', 0, 0, 1, 0, 0);
INSERT INTO EC_TABLAS_COMANDOS (TABLA_COMANDO_ID, TABLA_NOMBRE, CATALOGO_ID, TABLA_COMANDO_NOMBRE, TABLA_COMANDO_CODIGO, TABLA_COMANDO_ETIQUETA, TABLA_COMANDO_TOOLTIP, TABLA_COMANDO_MULTIPLE, TABLA_COMANDO_GRUPAL, TABLA_COMANDO_GRID, TABLA_COMANDO_EDICION, TABLA_COMANDO_BORRADO)
VALUES(2, 'EC_PERSONAS', 0, 'Editar', 'URL(WF_EmpleadosEd.aspx?Parametros=<IDS></IDS>)', '', '', 0, 0, 1, 0, 0);
INSERT INTO EC_TABLAS_COMANDOS (TABLA_COMANDO_ID, TABLA_NOMBRE, CATALOGO_ID, TABLA_COMANDO_NOMBRE, TABLA_COMANDO_CODIGO, TABLA_COMANDO_ETIQUETA, TABLA_COMANDO_TOOLTIP, TABLA_COMANDO_MULTIPLE, TABLA_COMANDO_GRUPAL, TABLA_COMANDO_GRID, TABLA_COMANDO_EDICION, TABLA_COMANDO_BORRADO)
VALUES(3, 'EC_PERIODOS', 0, 'Nuevo', 'URL(WF_PeriodosE.aspx?Parametros=<IDS></IDS>)', '', '', 0, 0, 1, 0, 0);
INSERT INTO EC_TABLAS_COMANDOS (TABLA_COMANDO_ID, TABLA_NOMBRE, CATALOGO_ID, TABLA_COMANDO_NOMBRE, TABLA_COMANDO_CODIGO, TABLA_COMANDO_ETIQUETA, TABLA_COMANDO_TOOLTIP, TABLA_COMANDO_MULTIPLE, TABLA_COMANDO_GRUPAL, TABLA_COMANDO_GRID, TABLA_COMANDO_EDICION, TABLA_COMANDO_BORRADO)
VALUES(4, 'EC_PERIODOS', 0, 'Editar', 'URL(WF_PeriodosE.aspx?Parametros=<IDS></IDS>)', '', '', 0, 0, 1, 0, 0);
INSERT INTO EC_TABLAS_COMANDOS (TABLA_COMANDO_ID, TABLA_NOMBRE, CATALOGO_ID, TABLA_COMANDO_NOMBRE, TABLA_COMANDO_CODIGO, TABLA_COMANDO_ETIQUETA, TABLA_COMANDO_TOOLTIP, TABLA_COMANDO_MULTIPLE, TABLA_COMANDO_GRUPAL, TABLA_COMANDO_GRID, TABLA_COMANDO_EDICION, TABLA_COMANDO_BORRADO)
VALUES(5, 'EC_CONFIG_USUARIO', 0, 'Nuevo', 'URL(WF_ConfigUsuarioE.aspx?Parametros=<IDS></IDS>)', '', '', 0, 0, 1, 0, 0);
INSERT INTO EC_TABLAS_COMANDOS (TABLA_COMANDO_ID, TABLA_NOMBRE, CATALOGO_ID, TABLA_COMANDO_NOMBRE, TABLA_COMANDO_CODIGO, TABLA_COMANDO_ETIQUETA, TABLA_COMANDO_TOOLTIP, TABLA_COMANDO_MULTIPLE, TABLA_COMANDO_GRUPAL, TABLA_COMANDO_GRID, TABLA_COMANDO_EDICION, TABLA_COMANDO_BORRADO)
VALUES(6, 'EC_CONFIG_USUARIO', 0, 'Editar', 'URL(WF_ConfigUsuarioE.aspx?Parametros=<IDS></IDS>)', '', '', 0, 0, 1, 0, 0);
INSERT INTO EC_TABLAS_COMANDOS (TABLA_COMANDO_ID, TABLA_NOMBRE, CATALOGO_ID, TABLA_COMANDO_NOMBRE, TABLA_COMANDO_CODIGO, TABLA_COMANDO_ETIQUETA, TABLA_COMANDO_TOOLTIP, TABLA_COMANDO_MULTIPLE, TABLA_COMANDO_GRUPAL, TABLA_COMANDO_GRID, TABLA_COMANDO_EDICION, TABLA_COMANDO_BORRADO)
VALUES(7, 'EC_SITIOS', 0, 'Nuevo', 'URL(WF_SitiosE.aspx?Parametros=<IDS></IDS>)', '', '', 0, 0, 1, 0, 0);
INSERT INTO EC_TABLAS_COMANDOS (TABLA_COMANDO_ID, TABLA_NOMBRE, CATALOGO_ID, TABLA_COMANDO_NOMBRE, TABLA_COMANDO_CODIGO, TABLA_COMANDO_ETIQUETA, TABLA_COMANDO_TOOLTIP, TABLA_COMANDO_MULTIPLE, TABLA_COMANDO_GRUPAL, TABLA_COMANDO_GRID, TABLA_COMANDO_EDICION, TABLA_COMANDO_BORRADO)
VALUES(8, 'EC_SITIOS', 0, 'Editar', 'URL(WF_SitiosE.aspx?Parametros=<IDS></IDS>)', '', '', 0, 0, 1, 0, 0);

GO














CREATE TABLE EC_TABLAS_SUS (
  TABLA_SUS_ID INTEGER  NOT NULL  ,
  SUSCRIPCION_ID INTEGER  NOT NULL  ,
  TABLA_SUS_NOMBRE VARCHAR(255)    ,
  TABLA_SUS_ETIQUETA VARCHAR(255)    ,
  TABLA_SUS_CAMPOS VARCHAR(4000)    ,
  TABLA_SUS_LLAVE VARCHAR(255)    ,
  TABLA_SUS_DESCRIPCION VARCHAR(4000)    ,
  TABLA_SUS_HISTORICO BOOL    ,
  TABLA_SUS_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TABLA_SUS_ID)  );
GO


CREATE INDEX EC_TABLAS_SUS_FKIndex1 ON EC_TABLAS_SUS (SUSCRIPCION_ID);
GO












CREATE TABLE EC_TABLAS_SUS_DATO (
  TABLA_SUS_DATO_ID INTEGER  NOT NULL  ,
  TABLA_SUS_ID INTEGER  NOT NULL  ,
  TABLA_SUS_DATO_LLAVE VARCHAR(255)    ,
  TABLA_SUS_DATO_CAMPO VARCHAR(255)    ,
  TABLA_SUS_DATO VARCHAR(4000)    ,
  TABLA_SUS_DATO_B BLOB    ,
  TABLA_SUS_DATO_FECHA DATETIME      ,
PRIMARY KEY(TABLA_SUS_DATO_ID)        );
GO


CREATE INDEX EC_TABLAS_SUS_DATO_FKIndex1 ON EC_TABLAS_SUS_DATO (TABLA_SUS_ID);
GO
CREATE INDEX EC_TABLAS_SUS_DATO_I ON EC_TABLAS_SUS_DATO (TABLA_SUS_ID, TABLA_SUS_DATO_LLAVE);
GO
CREATE INDEX EC_TABLAS_SUS_DATO_I2 ON EC_TABLAS_SUS_DATO (TABLA_SUS_ID, TABLA_SUS_DATO_LLAVE, TABLA_SUS_DATO_CAMPO);
GO
CREATE INDEX EC_TABLAS_SUS_DATO_I3 ON EC_TABLAS_SUS_DATO (TABLA_SUS_ID, TABLA_SUS_DATO);
GO










CREATE TABLE EC_TABLAS_SUS_HIST (
  TABLA_SUS_HIST_ID INTEGER UNSIGNED  NOT NULL   IDENTITY ,
  TABLA_SUS_ID INTEGER  NOT NULL  ,
  TABLA_SUS_HIST_LLAVE VARCHAR(255)    ,
  TABLA_SUS_HIST_CAMPO VARCHAR(255)    ,
  TABLA_SUS_HIST VARCHAR(4000)    ,
  TABLA_SUS_HIST_B BLOB    ,
  TABLA_SUS_HIST_FECHA DATETIME      ,
PRIMARY KEY(TABLA_SUS_HIST_ID)  );
GO


CREATE INDEX EC_TABLAS_SUS_HIST_FKIndex1 ON EC_TABLAS_SUS_HIST (TABLA_SUS_ID);
GO









CREATE TABLE EC_TAREAS (
  TAREA_ID INTEGER UNSIGNED  NOT NULL  ,
  TIMESPAN_ID INTEGER  NOT NULL  ,
  TAREA_NOMBRE VARCHAR(45)    ,
  TAREA_DESCRIPCION VARCHAR(255)    ,
  TAREA_INICIO DATETIME    ,
  TAREA_FIN DATETIME    ,
  TAREA_ULTIMA DATETIME    ,
  TAREA_SIGUIENTE DATETIME    ,
  TAREA_BORRADO INTEGER UNSIGNED      ,
PRIMARY KEY(TAREA_ID)  );
GO


CREATE INDEX EC_TAREAS_FKIndex1 ON EC_TAREAS (TIMESPAN_ID);
GO










-- ------------------------------------------------------------
-- Contiene el listado de tipos de cambios
-- ------------------------------------------------------------

CREATE TABLE EC_TC_PUNTOS (
  TC_PUNTO_ID INTEGER UNSIGNED  NOT NULL  ,
  TC_PUNTO_FECHAHORA DATETIME    ,
  TC_PUNTO_VALOR DECIMAL      ,
PRIMARY KEY(TC_PUNTO_ID));
GO


INSERT INTO EC_TC_PUNTOS (TC_PUNTO_ID, TC_PUNTO_FECHAHORA, TC_PUNTO_VALOR) VALUES(0,'01/01/2007',1);

GO



-- ------------------------------------------------------------
-- Contiene las terminales dadas de alta en el sistema.
-- 0. Sin Terminal
-- 1.Terminal de Prueba
-- ------------------------------------------------------------

CREATE TABLE EC_TERMINALES (
  TERMINAL_ID INTEGER  NOT NULL  ,
  TIPO_TERMINAL_ACCESO_ID INTEGER  NOT NULL  ,
  TERMINAL_NOMBRE VARCHAR(45)  NOT NULL  ,
  ALMACEN_VEC_ID INTEGER UNSIGNED   DEFAULT 1 ,
  SITIO_ID INTEGER   DEFAULT 0 ,
  MODELO_TERMINAL_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_TECNOLOGIA_ID INTEGER UNSIGNED   DEFAULT 0 ,
  TIPO_TECNOLOGIA_ADD_ID INTEGER UNSIGNED   DEFAULT 0 ,
  TERMINAL_SINCRONIZACION INTEGER UNSIGNED  NOT NULL  ,
  TERMINAL_CAMPO_LLAVE VARCHAR(255)    ,
  TERMINAL_CAMPO_ADICIONAL VARCHAR(255)    ,
  TERMINAL_ENROLA BOOL   DEFAULT 1 ,
  TERMINAL_DIR VARCHAR(255)   DEFAULT '127.0.0.1' ,
  TERMINAL_ASISTENCIA BOOL   DEFAULT 1 ,
  TERMINAL_COMIDA BOOL   DEFAULT 0 ,
  TERMINAL_MINUTOS_DIF INTEGER   DEFAULT 0 ,
  TERMINAL_VALIDAHORARIOE BOOL   DEFAULT 0 ,
  TERMINAL_VALIDAHORARIOS BOOL   DEFAULT 0 ,
  TERMINAL_DESCRIPCION VARCHAR(255)    ,
  TERMINAL_BIN BLOB    ,
  TERMINAL_MODELO VARCHAR(255)    ,
  TERMINAL_NO_SERIE VARCHAR(255)    ,
  TERMINAL_FIRMWARE_VER VARCHAR(255)    ,
  TERMINAL_NO_HUELLAS INTEGER    ,
  TERMINAL_NO_EMPLEADOS INTEGER    ,
  TERMINAL_NO_TARJETAS INTEGER    ,
  TERMINAL_NO_ROSTROS INTEGER    ,
  TERMINAL_NO_CHECADAS INTEGER    ,
  TERMINAL_NO_PALMAS INTEGER    ,
  TERMINAL_NO_IRIS INTEGER    ,
  TERMINAL_GARANTIA_INICIO DATE    ,
  TERMINAL_GARANTIA_FIN DATE    ,
  TERMINAL_AGRUPACION VARCHAR(255)    ,
  SITIO_HIJO_ID INTEGER   DEFAULT 0 ,
  TERMINAL_ESENTRADA BOOL   DEFAULT 0 ,
  TERMINAL_ESSALIDA BOOL   DEFAULT 0 ,
  TERMINAL_ACEPTA_TA BOOL   DEFAULT 0 ,
  TERMINAL_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TERMINAL_ID)              );
GO


CREATE INDEX EC_TERMINALESFKI1 ON EC_TERMINALES (MODELO_TERMINAL_ID);
GO
CREATE INDEX EC_TERMINALESFKI2 ON EC_TERMINALES (TIPO_TECNOLOGIA_ID);
GO
CREATE INDEX EC_TERMINALESFKI3 ON EC_TERMINALES (TIPO_TECNOLOGIA_ADD_ID);
GO
CREATE INDEX EC_TERMINALESFKI4 ON EC_TERMINALES (SITIO_ID);
GO
CREATE INDEX EC_TERMINALES_FKIndex5 ON EC_TERMINALES (ALMACEN_VEC_ID);
GO
CREATE INDEX EC_TERMINALES_FKIndex6 ON EC_TERMINALES (TIPO_TERMINAL_ACCESO_ID);
GO
CREATE INDEX EC_TERMINALESFKI7 ON EC_TERMINALES (TERMINAL_BORRADO);
GO


INSERT INTO EC_TERMINALES (TERMINAL_ID, SITIO_ID, ALMACEN_VEC_ID, TERMINAL_NOMBRE, MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_ADD_ID,TERMINAL_SINCRONIZACION,  
TERMINAL_CAMPO_LLAVE, TERMINAL_CAMPO_ADICIONAL, TERMINAL_BORRADO,TIPO_TERMINAL_ACCESO_ID) VALUES(-1, 0, 0, 'Asistencia Automatica',1,1,0,0,'','',1,0); 
INSERT INTO EC_TERMINALES (TERMINAL_ID, SITIO_ID, ALMACEN_VEC_ID, TERMINAL_NOMBRE, MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_ADD_ID,TERMINAL_SINCRONIZACION, 
TERMINAL_CAMPO_LLAVE, TERMINAL_CAMPO_ADICIONAL, TERMINAL_BORRADO,TIPO_TERMINAL_ACCESO_ID) VALUES(0, 0, 0, 'Sin Terminal',1,1,0,0,'','',1,0); 
INSERT INTO EC_TERMINALES (TERMINAL_ID, SITIO_ID, ALMACEN_VEC_ID, TERMINAL_NOMBRE, MODELO_TERMINAL_ID, TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_ADD_ID,TERMINAL_SINCRONIZACION,  
TERMINAL_CAMPO_LLAVE, TERMINAL_CAMPO_ADICIONAL, TERMINAL_BORRADO,TIPO_TERMINAL_ACCESO_ID) VALUES(1, 1, 1, 'Lector de huella USB',7,5,0,0,'NO_EMPLEADO','',0,0); 
 

GO







































CREATE TABLE EC_TERMINALES_COM (
  TERMINAL_ID INTEGER  NOT NULL  ,
  TERMINAL_COM_CONEXIONOK DATETIME    ,
  TERMINAL_COM_CONEXIONNOK DATETIME    ,
  TERMINAL_COM_COMUNICAOK DATETIME    ,
  TERMINAL_COM_COMUNICANOK DATETIME    ,
  TERMINAL_COM_LOG BLOB    ,
  TERMINAL_COM_FECHAHORAOK DATETIME    ,
  TERMINAL_COM_FECHAHORANOK DATETIME    ,
  TERMINAL_COM_CHECADASOK DATETIME    ,
  TERMINAL_COM_CHECADASNOK DATETIME    ,
  TERMINAL_COM_NVECTORESOK DATETIME    ,
  TERMINAL_COM_NVECTORESNOK DATETIME    ,
  TERMINAL_COM_VECTORESOK DATETIME    ,
  TERMINAL_COM_VECTORESNOK DATETIME      );
GO


CREATE INDEX EC_TERMINALES_COM_FKIndex1 ON EC_TERMINALES_COM (TERMINAL_ID);
GO
















-- ------------------------------------------------------------
-- Contiene datos adicionales para cada terminal, como por ej: Las huellas que se han descargado de los equipos y no se conose a quien pertenecen
-- ------------------------------------------------------------

CREATE TABLE EC_TERMINALES_DEXTRAS (
  TERMINALES_DEXTRAS_ID INTEGER UNSIGNED  NOT NULL  ,
  TERMINAL_ID INTEGER  NOT NULL  ,
  TIPO_TERM_DEXTRAS_ID INTEGER UNSIGNED  NOT NULL  ,
  TERMINALES_DEXTRAS_TEXTO1 VARCHAR(255)  NOT NULL  ,
  TERMINALES_DEXTRAS_TEXTO2 VARCHAR(255)    ,
  TERMINALES_DEXTRAS_BIN BLOB      ,
PRIMARY KEY(TERMINALES_DEXTRAS_ID)    );
GO


CREATE INDEX EC_TERMINALES_DEXTRASFKI1 ON EC_TERMINALES_DEXTRAS (TERMINAL_ID);
GO
CREATE INDEX EC_TERMINALES_DEXTRASFKI2 ON EC_TERMINALES_DEXTRAS (TIPO_TERM_DEXTRAS_ID);
GO






-- ------------------------------------------------------------
-- Contiene datos adicionales para cada terminal, como por ej: Las huellas que se han descargado de los equipos y no se conose a quien pertenecen, se guardan los respaldos
-- ------------------------------------------------------------

CREATE TABLE EC_TERMINALES_DEXTRAS_BAK (
  TERMINALES_DEXTRAS_ID INTEGER UNSIGNED  NOT NULL  ,
  TERMINAL_ID INTEGER  NOT NULL  ,
  TIPO_TERM_DEXTRAS_ID INTEGER UNSIGNED  NOT NULL  ,
  TERMINALES_DEXTRAS_TEXTO1 VARCHAR(255)  NOT NULL  ,
  TERMINALES_DEXTRAS_TEXTO2 VARCHAR(255)    ,
  TERMINALES_DEXTRAS_BIN BLOB      ,
PRIMARY KEY(TERMINALES_DEXTRAS_ID)    );
GO


CREATE INDEX EC_TERMINALES_DEXTRAS_BAK_FKIndex1 ON EC_TERMINALES_DEXTRAS_BAK (TERMINAL_ID);
GO
CREATE INDEX EC_TERMINALES_DEXTRAS_BAK_FKIndex2 ON EC_TERMINALES_DEXTRAS_BAK (TIPO_TERM_DEXTRAS_ID);
GO






CREATE TABLE EC_TERMINALES_EDO_MTTO (
  TERMINAL_EDO_MTTO_ID INTEGER UNSIGNED  NOT NULL  ,
  TERMINAL_EDO_MTTO_NOMBRE VARCHAR(255)      ,
PRIMARY KEY(TERMINAL_EDO_MTTO_ID));
GO


INSERT INTO EC_TERMINALES_EDO_MTTO (TERMINAL_EDO_MTTO_ID, TERMINAL_EDO_MTTO_NOMBRE) VALUES(0, 'Pendiente' );
INSERT INTO EC_TERMINALES_EDO_MTTO (TERMINAL_EDO_MTTO_ID, TERMINAL_EDO_MTTO_NOMBRE) VALUES(1, 'Abierto' );  
INSERT INTO EC_TERMINALES_EDO_MTTO (TERMINAL_EDO_MTTO_ID, TERMINAL_EDO_MTTO_NOMBRE) VALUES(2, 'Cerrado' );

GO





CREATE TABLE EC_TERMINALES_MTTO (
  TERMINAL_MTTO_ID INTEGER  NOT NULL  ,
  TERMINAL_ID INTEGER  NOT NULL  ,
  TERMINAL_TIPO_FALLA_ID INTEGER UNSIGNED  NOT NULL  ,
  TERMINAL_EDO_MTTO_ID INTEGER UNSIGNED  NOT NULL  ,
  TERMINAL_MTTO_REPORTO VARCHAR(255)    ,
  TERMINAL_MTTO_REVISO VARCHAR(255)    ,
  TERMINAL_MTTO_SOLUCIONO VARCHAR(255)    ,
  TERMINAL_MTTO_FALLA VARCHAR(255)    ,
  TERMINAL_MTTO_DIAGNOSTICO VARCHAR(255)    ,
  TERMINAL_MTTO_FECHA_REPORTE DATETIME    ,
  TERMINAL_MTTO_FECHA_REVISION DATETIME    ,
  TERMINAL_MTTO_FECHA_ENTREGA DATETIME    ,
  TERMINAL_MTTO_SOLUCION VARCHAR(255)    ,
  TERMINAL_MTTO_ID_ANT INTEGER    ,
  TERMINAL_MTTO_ARCHIVO BLOB      ,
PRIMARY KEY(TERMINAL_MTTO_ID)      );
GO


CREATE INDEX EC_TERMINALES_MTTO_FKIndex1 ON EC_TERMINALES_MTTO (TERMINAL_ID);
GO
CREATE INDEX EC_TERMINALES_MTTO_FKIndex2 ON EC_TERMINALES_MTTO (TERMINAL_EDO_MTTO_ID);
GO
CREATE INDEX EC_TERMINALES_MTTO_FKIndex3 ON EC_TERMINALES_MTTO (TERMINAL_TIPO_FALLA_ID);
GO















-- ------------------------------------------------------------
-- Contendra un listado de parametros variables por terminal dada de alta en EC_TERMINALES, entre los parametros que se podran guardar seran: Tipo de comunicación (seria, modem, ip), Dirección IP (IP), No. Puerto Serial, Velocidad Puerto Serial, etc.
-- 
-- INSERT INTO EC_TERMINALES_PARAM (TERMINALES_PARAM_ID, TERMINAL_ID, TERMINALES_PARAM_NOMBRE, TERMINALES_PARAM_VALOR) VALUES(1,1,'DireccionIP','192.168.17.169');
-- ------------------------------------------------------------

CREATE TABLE EC_TERMINALES_PARAM (
  TERMINALES_PARAM_ID INTEGER UNSIGNED  NOT NULL  ,
  TERMINAL_ID INTEGER  NOT NULL  ,
  TERMINALES_PARAM_NOMBRE VARCHAR(45)    ,
  TERMINALES_PARAM_VALOR VARCHAR(255)      ,
PRIMARY KEY(TERMINALES_PARAM_ID)  );
GO


CREATE INDEX EC_TERMINALES_PARAMFKI1 ON EC_TERMINALES_PARAM (TERMINAL_ID);
GO






CREATE TABLE EC_TERMINALES_TIPO_FALLA (
  TERMINAL_TIPO_FALLA_ID INTEGER UNSIGNED  NOT NULL  ,
  TERMINAL_TIPO_FALLA_NOMBRE VARCHAR(255)      ,
PRIMARY KEY(TERMINAL_TIPO_FALLA_ID));
GO


INSERT INTO EC_TERMINALES_TIPO_FALLA (TERMINAL_TIPO_FALLA_ID, TERMINAL_TIPO_FALLA_NOMBRE) VALUES(0, 'No procesado' );
INSERT INTO EC_TERMINALES_TIPO_FALLA (TERMINAL_TIPO_FALLA_ID, TERMINAL_TIPO_FALLA_NOMBRE) VALUES(1, 'Software' );  
INSERT INTO EC_TERMINALES_TIPO_FALLA (TERMINAL_TIPO_FALLA_ID, TERMINAL_TIPO_FALLA_NOMBRE) VALUES(2, 'Hardware' );
INSERT INTO EC_TERMINALES_TIPO_FALLA (TERMINAL_TIPO_FALLA_ID, TERMINAL_TIPO_FALLA_NOMBRE) VALUES(3, 'Uso' );

GO




CREATE TABLE EC_TIEMPOXTIEMPOS (
  TIPO_INCIDENCIA_ID INTEGER UNSIGNED  NOT NULL  ,
  TIEMPOXTIEMPO_UNIDADES INTEGER    ,
  TIEMPOXTIEMPO_FRACCIONES INTEGER   DEFAULT 0 ,
  TIEMPOXTIEMPO_SUMAR BOOL   DEFAULT 1 ,
  TIPO_INCIDENCIA_ID_RESTAR INTEGER   DEFAULT 0 ,
  TIEMPOXTIEMPO_QRYVAL VARCHAR(255)   DEFAULT ''   );
GO


CREATE INDEX EC_TIEMPOXTIEMPOS_FKIndex1 ON EC_TIEMPOXTIEMPOS (TIPO_INCIDENCIA_ID);
GO








-- ------------------------------------------------------------
-- Intervalo de tiempo
-- ------------------------------------------------------------

CREATE TABLE EC_TIMESPAN (
  TIMESPAN_ID INTEGER  NOT NULL  ,
  TIMESPAN_NOMBRE VARCHAR(255)    ,
  TIMESPAN_MESES INTEGER   DEFAULT 0 ,
  TIMESPAN_DIAS INTEGER   DEFAULT 0 ,
  TIMESPAN_HORAS INTEGER   DEFAULT 0 ,
  TIMESPAN_MINUTOS INTEGER   DEFAULT 0 ,
  TIMESPAN_SEGUNDOS INTEGER   DEFAULT 0 ,
  TIMESPAN_QUINCENAS INTEGER   DEFAULT 0 ,
  TIMESPAN_QADV VARCHAR(255)    ,
  TIMESPAN_HABIL INTEGER   DEFAULT 0 ,
  TIMESPAN_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIMESPAN_ID));
GO


--Ninguno
INSERT INTO EC_TIMESPAN (TIMESPAN_ID,TIMESPAN_NOMBRE) VALUES(0,'Nunca');
--Anual
INSERT INTO EC_TIMESPAN (TIMESPAN_ID, TIMESPAN_MESES) VALUES(1,12,'Cada 12 meses');
--Mensual
INSERT INTO EC_TIMESPAN (TIMESPAN_ID, TIMESPAN_MESES) VALUES(2,1,'Cada mese'); 
--Quincenal
INSERT INTO EC_TIMESPAN (TIMESPAN_ID, TIMESPAN_QUINCENAS) VALUES(3,1,'Cada quincena'); 
--Semanal
INSERT INTO EC_TIMESPAN (TIMESPAN_ID, TIMESPAN_DIAS) VALUES(4,7,'Cada semana'); 
--Diario
INSERT INTO EC_TIMESPAN (TIMESPAN_ID, TIMESPAN_DIAS) VALUES(5,1,'Cada dia'); 
--Catorcenal
INSERT INTO EC_TIMESPAN (TIMESPAN_ID, TIMESPAN_DIAS) VALUES(6,14,'Cada catorcena'); 
--Semestrar
INSERT INTO EC_TIMESPAN (TIMESPAN_ID, TIMESPAN_MESES) VALUES(7,6,'Cada semestre'); 

GO














-- ------------------------------------------------------------
-- Tipos de acceso preconfigurados por el sistema
-- 0. No definido
-- 1. Correcto
-- 2. Entrada
-- 3. Salida
-- 4. Salida a Comer
-- 5. Regreso de comer
-- 6. Incorrecto
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_ACCESOS (
  TIPO_ACCESO_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_ACCESO_NOMBRE VARCHAR(45)  NOT NULL  ,
  TIPO_ACCESO_COLOR INTEGER      ,
PRIMARY KEY(TIPO_ACCESO_ID));
GO


INSERT INTO EC_TIPO_ACCESOS (TIPO_ACCESO_ID, TIPO_ACCESO_NOMBRE) VALUES(0, 'No definido'); 
INSERT INTO EC_TIPO_ACCESOS (TIPO_ACCESO_ID, TIPO_ACCESO_NOMBRE) VALUES(1, 'Correcto'); 
INSERT INTO EC_TIPO_ACCESOS (TIPO_ACCESO_ID, TIPO_ACCESO_NOMBRE) VALUES(2, 'Entrada'); 
INSERT INTO EC_TIPO_ACCESOS (TIPO_ACCESO_ID, TIPO_ACCESO_NOMBRE) VALUES(3, 'Salida'); 
INSERT INTO EC_TIPO_ACCESOS (TIPO_ACCESO_ID, TIPO_ACCESO_NOMBRE) VALUES(4, 'Salida a Comer'); 
INSERT INTO EC_TIPO_ACCESOS (TIPO_ACCESO_ID, TIPO_ACCESO_NOMBRE) VALUES(5, 'Regreso de comer'); 
INSERT INTO EC_TIPO_ACCESOS (TIPO_ACCESO_ID, TIPO_ACCESO_NOMBRE) VALUES(6, 'Incorrecto');
INSERT INTO EC_TIPO_ACCESOS (TIPO_ACCESO_ID, TIPO_ACCESO_NOMBRE) VALUES(7, 'Regreso Descanso');  
INSERT INTO EC_TIPO_ACCESOS (TIPO_ACCESO_ID, TIPO_ACCESO_NOMBRE) VALUES(8, 'Regreso Llamada');

GO






CREATE TABLE EC_TIPO_ALMACEN_INC (
  TIPO_ALMACEN_INC_ID INTEGER  NOT NULL  ,
  TIPO_ALMACEN_INC_NOMBRE VARCHAR(45)      ,
PRIMARY KEY(TIPO_ALMACEN_INC_ID));
GO


INSERT INTO EC_TIPO_ALMACEN_INC (TIPO_ALMACEN_INC_ID, TIPO_ALMACEN_INC_NOMBRE) VALUES(-1,'Automatico');
INSERT INTO EC_TIPO_ALMACEN_INC (TIPO_ALMACEN_INC_ID, TIPO_ALMACEN_INC_NOMBRE) VALUES(0,'Inicial');
INSERT INTO EC_TIPO_ALMACEN_INC (TIPO_ALMACEN_INC_ID, TIPO_ALMACEN_INC_NOMBRE) VALUES(1,'Normal');
INSERT INTO EC_TIPO_ALMACEN_INC (TIPO_ALMACEN_INC_ID, TIPO_ALMACEN_INC_NOMBRE) VALUES(2,'Proporcional');
INSERT INTO EC_TIPO_ALMACEN_INC (TIPO_ALMACEN_INC_ID, TIPO_ALMACEN_INC_NOMBRE) VALUES(3,'Adelantada');
INSERT INTO EC_TIPO_ALMACEN_INC (TIPO_ALMACEN_INC_ID, TIPO_ALMACEN_INC_NOMBRE) VALUES(4,'Limpiado');
INSERT INTO EC_TIPO_ALMACEN_INC (TIPO_ALMACEN_INC_ID, TIPO_ALMACEN_INC_NOMBRE) VALUES(5,'Descontado');
INSERT INTO EC_TIPO_ALMACEN_INC (TIPO_ALMACEN_INC_ID, TIPO_ALMACEN_INC_NOMBRE) VALUES(6,'Correccion');

GO





-- ------------------------------------------------------------
-- Esta tabla contiene el listado de tipos de eventos de auditoria reconocidos por el sistema, existira el TIPO_AUDITORIA_ID == 0 con descripcion "" y en la version 2.0 se aumentara este listado
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_AUDITORIA (
  TIPO_AUDITORIA_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_AUDITORIA_NOMBRE VARCHAR(45)      ,
PRIMARY KEY(TIPO_AUDITORIA_ID));
GO


INSERT INTO EC_TIPO_AUDITORIA (TIPO_AUDITORIA_ID, TIPO_AUDITORIA_NOMBRE) VALUES(0,'');

GO





CREATE TABLE EC_TIPO_AUTONUMERICO (
  TIPO_AUTONUMERICO_ID INTEGER  NOT NULL  ,
  TIPO_AUTONUMERICO_NOMBRE VARCHAR(45)    ,
  TIPO_AUTONUMERICO_DESC VARCHAR(255)    ,
  TIPO_AUTONUMERICO_PROP VARCHAR(255)      ,
PRIMARY KEY(TIPO_AUTONUMERICO_ID));
GO


INSERT INTO EC_TIPO_AUTONUMERICO (TIPO_AUTONUMERICO_ID, TIPO_AUTONUMERICO_NOMBRE) VALUES(0,'No es autonumerico' );
INSERT INTO EC_TIPO_AUTONUMERICO (TIPO_AUTONUMERICO_ID, TIPO_AUTONUMERICO_NOMBRE) VALUES(1,'Autonumerico General' ); 
INSERT INTO EC_TIPO_AUTONUMERICO (TIPO_AUTONUMERICO_ID, TIPO_AUTONUMERICO_NOMBRE) VALUES(2,'Autonumerico Suscripcion' ); 

GO







-- ------------------------------------------------------------
-- Esta tabla contentra 2 tipos
-- 0. Activo
-- 1. Inactivo
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_BORRADO (
  TIPO_BORRADO_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_BORRADO VARCHAR(45)      ,
PRIMARY KEY(TIPO_BORRADO_ID));
GO


INSERT INTO EC_TIPO_BORRADO (TIPO_BORRADO_ID, TIPO_BORRADO) VALUES(0,  'Activo' );
INSERT INTO EC_TIPO_BORRADO (TIPO_BORRADO_ID, TIPO_BORRADO) VALUES(1,  'Inactivo' ); 

GO





-- ------------------------------------------------------------
-- Contiene el listado de los tipos de cobro posibles 
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_COBRO (
  TIPO_COBRO_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_COBRO VARCHAR(45)      ,
PRIMARY KEY(TIPO_COBRO_ID));
GO


INSERT INTO EC_TIPO_COBRO (TIPO_COBRO_ID, TIPO_COBRO) VALUES(0, 'Manual (Software)' );
INSERT INTO EC_TIPO_COBRO (TIPO_COBRO_ID, TIPO_COBRO) VALUES(1, 'Tarjeta Mifare'); 
INSERT INTO EC_TIPO_COBRO (TIPO_COBRO_ID, TIPO_COBRO) VALUES(2, 'Tarjeta Mifare y CB'); 
INSERT INTO EC_TIPO_COBRO (TIPO_COBRO_ID, TIPO_COBRO) VALUES(3, 'Huella'); 
INSERT INTO EC_TIPO_COBRO (TIPO_COBRO_ID, TIPO_COBRO) VALUES(4, 'Supervisor'); 
INSERT INTO EC_TIPO_COBRO (TIPO_COBRO_ID, TIPO_COBRO) VALUES(5, 'Recompensa'); 
INSERT INTO EC_TIPO_COBRO (TIPO_COBRO_ID, TIPO_COBRO) VALUES(6, 'Abono'); 
INSERT INTO EC_TIPO_COBRO (TIPO_COBRO_ID, TIPO_COBRO) VALUES(7, 'Redencion de puntos'); 
INSERT INTO EC_TIPO_COBRO (TIPO_COBRO_ID, TIPO_COBRO) VALUES(8, 'Compra de Regalos'); 

GO





-- ------------------------------------------------------------
-- Contiene el listado de tipos de comida
-- 1. Primera Comida ($7.00)
-- 2. Segunda Comida ($50.00)
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_COMIDA (
  TIPO_COMIDA_ID INTEGER  NOT NULL  ,
  TIPO_COMIDA VARCHAR(45)  NOT NULL  ,
  TIPO_COMIDA_COSTO DECIMAL   DEFAULT 0   ,
PRIMARY KEY(TIPO_COMIDA_ID));
GO



INSERT INTO EC_TIPO_COMIDA (TIPO_COMIDA_ID, TIPO_COMIDA) VALUES(1,'Primera Comida');
INSERT INTO EC_TIPO_COMIDA (TIPO_COMIDA_ID, TIPO_COMIDA) VALUES(2,'Segunda Comida');

GO






-- ------------------------------------------------------------
-- Contiene  el listado de tipos de datos que permite el sistema
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_DATOS (
  TIPO_DATO_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_DATO_NOMBRE VARCHAR(45)    ,
  TIPO_DATO_DS VARCHAR(45)    ,
  TIPO_DATO_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIPO_DATO_ID));
GO


INSERT INTO EC_TIPO_DATOS (TIPO_DATO_ID, TIPO_DATO_NOMBRE, TIPO_DATO_DS, TIPO_DATO_BORRADO) VALUES( 0, 'Desconocido' , '', 1); 
INSERT INTO EC_TIPO_DATOS (TIPO_DATO_ID, TIPO_DATO_NOMBRE, TIPO_DATO_DS, TIPO_DATO_BORRADO) VALUES( 1, 'Texto' , 'System.String', 0);  
INSERT INTO EC_TIPO_DATOS (TIPO_DATO_ID, TIPO_DATO_NOMBRE, TIPO_DATO_DS, TIPO_DATO_BORRADO) VALUES( 2, 'Entero' , 'System.Int32', 0);  
INSERT INTO EC_TIPO_DATOS (TIPO_DATO_ID, TIPO_DATO_NOMBRE, TIPO_DATO_DS, TIPO_DATO_BORRADO) VALUES( 3, 'Decimal' , 'System.Decimal', 0);  
INSERT INTO EC_TIPO_DATOS (TIPO_DATO_ID, TIPO_DATO_NOMBRE, TIPO_DATO_DS, TIPO_DATO_BORRADO) VALUES( 4, 'Imagen' , 'System.Byte[]', 0);  
INSERT INTO EC_TIPO_DATOS (TIPO_DATO_ID, TIPO_DATO_NOMBRE, TIPO_DATO_DS, TIPO_DATO_BORRADO) VALUES( 5, 'Fecha' , 'System.DateTime', 1);  
INSERT INTO EC_TIPO_DATOS (TIPO_DATO_ID, TIPO_DATO_NOMBRE, TIPO_DATO_DS, TIPO_DATO_BORRADO) VALUES( 6, 'Fecha y Hora' , 'System.DateTime', 0);  
INSERT INTO EC_TIPO_DATOS (TIPO_DATO_ID, TIPO_DATO_NOMBRE, TIPO_DATO_DS, TIPO_DATO_BORRADO) VALUES( 7, 'Hora' , 'System.DateTime', 1);  
INSERT INTO EC_TIPO_DATOS (TIPO_DATO_ID, TIPO_DATO_NOMBRE, TIPO_DATO_DS, TIPO_DATO_BORRADO) VALUES( 8, 'Boleano' , 'System.Boolean', 0);   
INSERT INTO EC_TIPO_DATOS (TIPO_DATO_ID, TIPO_DATO_NOMBRE, TIPO_DATO_DS, TIPO_DATO_BORRADO) VALUES( 9, 'Horas' , 'System.DateTime', 0);   
INSERT INTO EC_TIPO_DATOS (TIPO_DATO_ID, TIPO_DATO_NOMBRE, TIPO_DATO_DS, TIPO_DATO_BORRADO) VALUES( 10, 'Catalogo Texto' , 'System.String', 0);  

GO






CREATE TABLE EC_TIPO_DATOS_MASCARAS (
  TIPO_DATO_ID INTEGER UNSIGNED  NOT NULL  ,
  MASCARA_ID INTEGER UNSIGNED  NOT NULL    ,
PRIMARY KEY(TIPO_DATO_ID, MASCARA_ID)    );
GO


CREATE INDEX TIPOS_DATOS_MASCARAS_FKI1 ON EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID);
GO
CREATE INDEX TIPOS_DATOS_MASCARAS_FKI2 ON EC_TIPO_DATOS_MASCARAS (MASCARA_ID);
GO


INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(0,0);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(1,0);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(1,37);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(1,38);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(1,39);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(1,40);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,0);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,1);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,2);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,3);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,4);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,5);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,6);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,7);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,8);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,9);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,10);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,11);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,12);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,13);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,14);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,15);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,16);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,17);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,18);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,19);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,20);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,21);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,22);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,23);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,24);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,25);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,26);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,27);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,28);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,29);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,30);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,31);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,32);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,33);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,34);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,35);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(2,36);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,0);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,1);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,2);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,3);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,4);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,5);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,6);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,7);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,8);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,9);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,10);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,11);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,12);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,13);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,14);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,15);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,16);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,17);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,18);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,19);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,21);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,22);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,23);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,24);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,25);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,26);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,27);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,28);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,29);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,30);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,31);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,32);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,33);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,34);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,35);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(3,36);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(4,0);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,0);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,41);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,42);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,43);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,44);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,45);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,46);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,47);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,48);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,49);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,50);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,51);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,52);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,55);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,56);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,57);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(5,58);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,0);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,41);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,42);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,43);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,44);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,45);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,46);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,47);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,48);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,49);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,50);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,51);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,52);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,53);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,54);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,55);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,56);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,57);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,58);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,59);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,60);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,61);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,62);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,63);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,64);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,65);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,66);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,67);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,68);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,69);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,70);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,71);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,72);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,73);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(6,74);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(7,0);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(7,75);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(7,76);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(7,77);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(7,78);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(7,79);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(7,80);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(8,0);
INSERT INTO EC_TIPO_DATOS_MASCARAS (TIPO_DATO_ID, MASCARA_ID) VALUES(9,81);

GO



-- ------------------------------------------------------------
-- Esta tabla contiene el listado de tipos de errores reconocidos por el sistema, existira el TIPO_ERROR_ID == 0 con descripcion "" y en la version 2.0 se aumentara este listado
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_ERROR (
  TIPO_ERROR_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_ERROR_NOMBRE VARCHAR(45)      ,
PRIMARY KEY(TIPO_ERROR_ID));
GO


INSERT INTO EC_TIPO_ERROR (TIPO_ERROR_ID, TIPO_ERROR_NOMBRE) VALUES(0,'');

GO





-- ------------------------------------------------------------
-- 0: Indica que la incidencia no es reemplazable; 
-- 1: Indica que la incidencia es falta y será reemplazable por una incidencia 2; 
-- 2:Indica que la incidencia actual puede reemplazar a cualquier incidencia tipo 1
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_FALTA_EX (
  TIPO_FALTA_EX_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_FALTA_EX_NOMBRE VARCHAR(45)    ,
  TIPO_FALTA_EX_DESC VARCHAR(255)      ,
PRIMARY KEY(TIPO_FALTA_EX_ID));
GO


INSERT INTO EC_TIPO_FALTA_EX (TIPO_FALTA_EX_ID, TIPO_FALTA_EX_NOMBRE, TIPO_FALTA_EX_DESC) VALUES(0, 'Extra', '');
INSERT INTO EC_TIPO_FALTA_EX (TIPO_FALTA_EX_ID, TIPO_FALTA_EX_NOMBRE, TIPO_FALTA_EX_DESC) VALUES(1, 'Falta', '');  
INSERT INTO EC_TIPO_FALTA_EX (TIPO_FALTA_EX_ID, TIPO_FALTA_EX_NOMBRE, TIPO_FALTA_EX_DESC) VALUES(2, 'Justificacion', '');  

GO






-- ------------------------------------------------------------
-- Contiene el listado de tipos de imagen validos para el sistema
-- 0. No definido
-- 1. Foto
-- 2. Firma
-- 3. Huella
-- 4. Documento
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_IMAGEN (
  TIPO_IMAGEN_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_IMAGEN VARCHAR(45)    ,
  TIPO_IMAGEN_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIPO_IMAGEN_ID));
GO


INSERT INTO EC_TIPO_IMAGEN (TIPO_IMAGEN_ID, TIPO_IMAGEN, TIPO_IMAGEN_BORRADO) VALUES(0,'No definido',1);
INSERT INTO EC_TIPO_IMAGEN (TIPO_IMAGEN_ID, TIPO_IMAGEN, TIPO_IMAGEN_BORRADO) VALUES(1,'Foto',0);
INSERT INTO EC_TIPO_IMAGEN (TIPO_IMAGEN_ID, TIPO_IMAGEN, TIPO_IMAGEN_BORRADO) VALUES(2,'Firma',1);
INSERT INTO EC_TIPO_IMAGEN (TIPO_IMAGEN_ID, TIPO_IMAGEN, TIPO_IMAGEN_BORRADO) VALUES(3,'Huella',1);
INSERT INTO EC_TIPO_IMAGEN (TIPO_IMAGEN_ID, TIPO_IMAGEN, TIPO_IMAGEN_BORRADO) VALUES(4,'Documento',1);

GO






-- ------------------------------------------------------------
-- Tipos de Incidencias definidas por el Usuario
-- 0. No hay justificación y Borrado = 1
-- 1. Otro tipo de justificacion y Borrado = 1
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_INCIDENCIAS (
  TIPO_INCIDENCIA_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_INCIDENCIA_NOMBRE VARCHAR(45)  NOT NULL  ,
  TIPO_INCIDENCIA_ABR VARCHAR(2)    ,
  TIPO_INCIDENCIA_COLOR INTEGER    ,
  TIPO_INCIDENCIA_AGRUPADOR VARCHAR(45)    ,
  TIPO_INCIDENCIA_CAMPOS VARCHAR(4000)    ,
  TIPO_INCIDENCIA_KIOSCO BOOL   DEFAULT 0 ,
  TIPO_INCIDENCIA_HORAS BOOL   DEFAULT 0 ,
  T_INC_ACCESO_ID INTEGER    ,
  TIPO_INCIDENCIA_REGLAS BOOL   DEFAULT 0 ,
  TIPO_INCIDENCIA_RESUMEN VARCHAR(4000)    ,
  TIPO_INCIDENCIA_MOMENTO VARCHAR(4000)    ,
  TIPO_INCIDENCIA_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIPO_INCIDENCIA_ID));
GO



INSERT INTO EC_TIPO_INCIDENCIAS (TIPO_INCIDENCIA_ID, TIPO_INCIDENCIA_NOMBRE, TIPO_INCIDENCIA_BORRADO) VALUES(0, 'No hay justificación', 1); 
INSERT INTO EC_TIPO_INCIDENCIAS (TIPO_INCIDENCIA_ID, TIPO_INCIDENCIA_NOMBRE,TIPO_INCIDENCIA_ABR, TIPO_INCIDENCIA_BORRADO) VALUES(1, 'Otro tipo de justificacion', 'J',1);
INSERT INTO EC_TIPO_INCIDENCIAS (TIPO_INCIDENCIA_ID, TIPO_INCIDENCIA_NOMBRE,TIPO_INCIDENCIA_ABR, TIPO_INCIDENCIA_BORRADO) VALUES(2, 'Vacaciones', 'V',0);

GO
















-- ------------------------------------------------------------
-- Contiene la configuración de incidencias extras (interfaz con el sistema de nomina)
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_INCIDENCIAS_EX (
  TIPO_INCIDENCIAS_EX_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_INCIDENCIAS_EX_TXT VARCHAR(255)    ,
  TIPO_INCIDENCIAS_EX_NOMBRE VARCHAR(255)    ,
  TIPO_INCIDENCIAS_EX_DESC VARCHAR(4000)   DEFAULT 0 ,
  TIPO_INCIDENCIAS_EX_PARAM VARCHAR(255)   DEFAULT '' ,
  TIPO_FALTA_EX_ID INTEGER UNSIGNED   DEFAULT 0 ,
  TIPO_INCIDENCIAS_EX_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIPO_INCIDENCIAS_EX_ID)  );
GO


CREATE INDEX TIPO_INCIDENCIAS_EX_FKI1 ON EC_TIPO_INCIDENCIAS_EX (TIPO_FALTA_EX_ID);
GO


INSERT INTO EC_TIPO_INCIDENCIAS_EX (TIPO_INCIDENCIAS_EX_ID, TIPO_INCIDENCIAS_EX_TXT, TIPO_INCIDENCIAS_EX_NOMBRE, TIPO_INCIDENCIAS_EX_DESC, TIPO_INCIDENCIAS_EX_PARAM, TIPO_FALTA_EX_ID, TIPO_INCIDENCIAS_EX_BORRADO) 
VALUES(0,'0' ,'Sin Incidencia Extra' , 0, '', 1 , 1);

GO










-- ------------------------------------------------------------
-- Contiene la liga entre las incidencias externas y las incidencias personalizadas
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_INCIDENCIAS_EX_INC (
  TIPO_INCIDENCIAS_EX_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_INCIDENCIA_ID INTEGER UNSIGNED  NOT NULL    ,
PRIMARY KEY(TIPO_INCIDENCIAS_EX_ID, TIPO_INCIDENCIA_ID)    );
GO


CREATE INDEX TIPO_INC_EX_INC_FKIndex1 ON EC_TIPO_INCIDENCIAS_EX_INC (TIPO_INCIDENCIAS_EX_ID);
GO
CREATE INDEX TIPO_INC_EX_INC_FKIndex2 ON EC_TIPO_INCIDENCIAS_EX_INC (TIPO_INCIDENCIA_ID);
GO



-- ------------------------------------------------------------
-- Contiene la equivalencia entre los tipos de incidencias del sistema y los tipos de incidencia externos, de estos ultimos solo se usaran los que TIPO_INCIDENCIAS_EX_Falta sea igual a 1
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_INCIDENCIAS_EX_INC_SIS (
  TIPO_INCIDENCIAS_EX_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_INC_SIS_ID INTEGER  NOT NULL  ,
  SUSCRIPCION_ID INTEGER  NOT NULL    ,
PRIMARY KEY(TIPO_INCIDENCIAS_EX_ID, TIPO_INC_SIS_ID)      );
GO


CREATE INDEX TIPO_INC_EX_INC_SIS_FKI1 ON EC_TIPO_INCIDENCIAS_EX_INC_SIS (TIPO_INCIDENCIAS_EX_ID);
GO
CREATE INDEX TIPO_INC_EX_INC_SIS_FKI2 ON EC_TIPO_INCIDENCIAS_EX_INC_SIS (TIPO_INC_SIS_ID);
GO
CREATE INDEX EC_TIPO_INCIDENCIAS_EX_INC_SIS_FKIndex3 ON EC_TIPO_INCIDENCIAS_EX_INC_SIS (SUSCRIPCION_ID);
GO



-- ------------------------------------------------------------
-- Controla reglas de captura y validaciones para la captura de tipos de incidencias, controlando inventario, campos, etc
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_INCIDENCIAS_R (
  TIPO_INCIDENCIA_R_ID INTEGER  NOT NULL  ,
  TIPO_INCIDENCIA_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_INCIDENCIA_R_DESC VARCHAR(4000)    ,
  TIPO_INCIDENCIA_R_CNF BOOL    ,
  TIPO_INCIDENCIA_R_PER VARCHAR(255)   DEFAULT 'SELECT PERSONA_ID FROM EC_PERSONAS WHERE PERSONA_BORRADO = 0' ,
  TIPO_INCIDENCIA_R_CORR BOOL   DEFAULT 0 ,
  TIPO_INCIDENCIA_R_EMAIL BOOL   DEFAULT 0 ,
  TIPO_INCIDENCIA_R_INV BOOL   DEFAULT 0 ,
  TIPO_INCIDENCIA_R_ID_INV INTEGER   DEFAULT 0 ,
  TIMESPAN_ID INTEGER  NOT NULL  ,
  TIPO_INCIDENCIA_R_LIMPIAR BOOL   DEFAULT 0 ,
  TIPO_UNIDAD_ID INTEGER  NOT NULL  ,
  TIPO_REDONDEO_ID INTEGER  NOT NULL  ,
  TIPO_INCIDENCIA_R_SUMAR BOOL   DEFAULT 0 ,
  TIPO_INCIDENCIA_R_FIQRY VARCHAR(255)   DEFAULT 'SELECT FECHA_INGRESO FROM EC_PERSONAS_DATOS WHERE PERSONA_ID = @PERSONA_ID' ,
  TIPO_INCIDENCIA_R_CRED INTEGER   DEFAULT 0 ,
  TIPO_INCIDENCIA_R_BORRADO BOOL      ,
PRIMARY KEY(TIPO_INCIDENCIA_R_ID)        );
GO


CREATE INDEX EC_TIPO_INCIDENCIAS_R_FKI1 ON EC_TIPO_INCIDENCIAS_R (TIPO_INCIDENCIA_ID);
GO
CREATE INDEX EC_TIPO_INCIDENCIAS_R_FKIndex2 ON EC_TIPO_INCIDENCIAS_R (TIMESPAN_ID);
GO
CREATE INDEX EC_TIPO_INCIDENCIAS_R_FKIndex3 ON EC_TIPO_INCIDENCIAS_R (TIPO_UNIDAD_ID);
GO
CREATE INDEX EC_TIPO_INCIDENCIAS_R_FKIndex4 ON EC_TIPO_INCIDENCIAS_R (TIPO_REDONDEO_ID);
GO


INSERT INTO EC_TIPO_INCIDENCIAS_R (
TIPO_INCIDENCIA_R_ID, TIMESPAN_ID, TIPO_INCIDENCIA_ID, TIPO_INCIDENCIA_R_CNF, TIPO_INCIDENCIA_R_PER, TIPO_INCIDENCIA_R_CORR, TIPO_INCIDENCIA_R_EMAIL, TIPO_INCIDENCIA_R_INV, TIPO_INCIDENCIA_R_LIMPIAR, TIPO_INCIDENCIA_R_FRAC, TIPO_INCIDENCIA_R_FIQRY, TIPO_INCIDENCIA_R_BORRADO) VALUES(
1,1,2,0,'SELECT PERSONA_ID FROM EC_PERSONAS WHERE PERSONA_BORRADO = 0',0,0,1,0,0,'SELECT FECHA_INGRESO FROM EC_PERSONAS_DATOS WHERE PERSONA_ID = @PERSONA_ID',0);

GO

















-- ------------------------------------------------------------
-- Tipos de Incidencias que maneja internamente el sistema para las comidas
-- 0. Sin calcular 
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_INC_COMIDA_SIS (
  TIPO_INC_C_SIS_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_INC_C_SIS_NOMBRE VARCHAR(45)  NOT NULL  ,
  TIPO_INC_C_SIS_ABR VARCHAR(2)    ,
  TIPO_INC_C_SIS_COLOR INTEGER      ,
PRIMARY KEY(TIPO_INC_C_SIS_ID));
GO



 
INSERT INTO EC_TIPO_INC_COMIDA_SIS (TIPO_INC_C_SIS_ID, TIPO_INC_C_SIS_NOMBRE) VALUES(0,'Sin calcular');
INSERT INTO EC_TIPO_INC_COMIDA_SIS (TIPO_INC_C_SIS_ID, TIPO_INC_C_SIS_NOMBRE,TIPO_INC_C_SIS_ABR) VALUES(1,'Correcta','OK');
INSERT INTO EC_TIPO_INC_COMIDA_SIS (TIPO_INC_C_SIS_ID, TIPO_INC_C_SIS_NOMBRE,TIPO_INC_C_SIS_ABR) VALUES(2,'No hay comida','SC');
INSERT INTO EC_TIPO_INC_COMIDA_SIS (TIPO_INC_C_SIS_ID, TIPO_INC_C_SIS_NOMBRE,TIPO_INC_C_SIS_ABR) VALUES(3,'Excedio el tiempo','ET');
INSERT INTO EC_TIPO_INC_COMIDA_SIS (TIPO_INC_C_SIS_ID, TIPO_INC_C_SIS_NOMBRE,TIPO_INC_C_SIS_ABR) VALUES(4,'Registro Incompleto','RI');

GO







-- ------------------------------------------------------------
-- Tipos de Incidencias que maneja internamente el sistema para el dia
-- 0. Sin calcular
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_INC_SIS (
  TIPO_INC_SIS_ID INTEGER  NOT NULL  ,
  TIPO_INC_SIS_NOMBRE VARCHAR(45)  NOT NULL  ,
  TIPO_INC_SIS_ABR VARCHAR(2)    ,
  TIPO_INC_SIS_COLOR INTEGER      ,
PRIMARY KEY(TIPO_INC_SIS_ID));
GO


INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(-2,'Asistencia Automatica','AA');  
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(-1,'No Activo','DB');  
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE) VALUES(0,'Sin calcular'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(1,'Asistencia Normal','A'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(2,'Retardo','R'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(3,'Falta Entrada','FE'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(4,'Falta Salida','FS'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(5,'Salida Temprano','RS'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(6,'Falta Entrada y Salida','FC'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(7,'Falta Entrada y Salida Temprano','FT'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(8,'Retardo y Falta Salida','RF'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(9,'Retardo y Salida Temprano','RT'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(10,'Dia de descanso','D'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(11,'Dia Festivo','FD'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(12,'Falta','F'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(13,'No Checa','NC'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(14,'Descanso Trabajado','TD'); 
INSERT INTO EC_TIPO_INC_SIS (TIPO_INC_SIS_ID, TIPO_INC_SIS_NOMBRE, TIPO_INC_SIS_ABR) VALUES(15,'Festivo Trabajado','TF'); 

GO







CREATE TABLE EC_TIPO_INSCRIPCION (
  TIPO_INSCRIPCION_ID INTEGER  NOT NULL  ,
  TIPO_INSCRIPCION_NOMBRE VARCHAR(255)    ,
  TIPO_INSCRIPCION_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIPO_INSCRIPCION_ID));
GO


INSERT INTO EC_TIPO_INSCRIPCION (TIPO_INSCRIPCION_ID, TIPO_INSCRIPCION_NOMBRE, TIPO_INSCRIPCION_BORRADO) VALUES(
0,'Desconocido',1);
INSERT INTO EC_TIPO_INSCRIPCION (TIPO_INSCRIPCION_ID, TIPO_INSCRIPCION_NOMBRE, TIPO_INSCRIPCION_BORRADO) VALUES( 
1,'Kiosco',0); 
INSERT INTO EC_TIPO_INSCRIPCION (TIPO_INSCRIPCION_ID, TIPO_INSCRIPCION_NOMBRE, TIPO_INSCRIPCION_BORRADO) VALUES( 
2,'eClock',0); 

GO





CREATE TABLE EC_TIPO_MENU (
  TIPO_MENU_ID INTEGER  NOT NULL  ,
  TIPO_MENU VARCHAR(45)    ,
  TIPO_MENU_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIPO_MENU_ID));
GO


INSERT INTO EC_TIPO_MENU (TIPO_MENU_ID, TIPO_MENU, TIPO_MENU_BORRADO) VALUES(0,'No definido',0);
INSERT INTO EC_TIPO_MENU (TIPO_MENU_ID, TIPO_MENU, TIPO_MENU_BORRADO) VALUES(1,'ListBar',0);
INSERT INTO EC_TIPO_MENU (TIPO_MENU_ID, TIPO_MENU, TIPO_MENU_BORRADO) VALUES(2,'Tree',0);
INSERT INTO EC_TIPO_MENU (TIPO_MENU_ID, TIPO_MENU, TIPO_MENU_BORRADO) VALUES(3,'Menu',0);
INSERT INTO EC_TIPO_MENU (TIPO_MENU_ID, TIPO_MENU, TIPO_MENU_BORRADO) VALUES(4,'SubMenu',0);
INSERT INTO EC_TIPO_MENU (TIPO_MENU_ID, TIPO_MENU, TIPO_MENU_BORRADO) VALUES(5,'SubMenuLinea',0);
INSERT INTO EC_TIPO_MENU (TIPO_MENU_ID, TIPO_MENU, TIPO_MENU_BORRADO) VALUES(6,'Tab',0);
INSERT INTO EC_TIPO_MENU (TIPO_MENU_ID, TIPO_MENU, TIPO_MENU_BORRADO) VALUES(7,'MenuContextual',0);

GO






CREATE TABLE EC_TIPO_NOMINA (
  TIPO_NOMINA_ID INTEGER  NOT NULL  ,
  CALENDARIO_DF_ID INTEGER  NOT NULL  ,
  PERIODO_N_ID INTEGER  NOT NULL  ,
  TIPO_NOMINA_NOMBRE VARCHAR(45)    ,
  TIPO_NOMINA_IDEX VARCHAR(45)    ,
  TIPO_NOMINA_BORRADO BOOL    ,
  TIPO_NOMINA_HE INTEGER    ,
  TIPO_NOMINA_COLOR INTEGER      ,
PRIMARY KEY(TIPO_NOMINA_ID)    );
GO


CREATE INDEX EC_TIPO_NOMINA_FKIndex1 ON EC_TIPO_NOMINA (PERIODO_N_ID);
GO
CREATE INDEX EC_TIPO_NOMINA_FKIndex2 ON EC_TIPO_NOMINA (CALENDARIO_DF_ID);
GO










CREATE TABLE EC_TIPO_ORIGEN_INC_EX (
  TIPO_ORIGEN_INC_EX_ID INTEGER  NOT NULL  ,
  TIPO_ORIGEN_INC_EX_NOMBRE VARCHAR(255)    ,
  TIPO_ORIGEN_INC_EX_DESC VARCHAR(255)      ,
PRIMARY KEY(TIPO_ORIGEN_INC_EX_ID));
GO


INSERT INTO EC_TIPO_ORIGEN_INC_EX (TIPO_ORIGEN_INC_EX_ID, TIPO_ORIGEN_INC_EX_NOMBRE) VALUES(0,'Desconocido');
INSERT INTO EC_TIPO_ORIGEN_INC_EX (TIPO_ORIGEN_INC_EX_ID, TIPO_ORIGEN_INC_EX_NOMBRE) VALUES(1,'Persona Diario');
INSERT INTO EC_TIPO_ORIGEN_INC_EX (TIPO_ORIGEN_INC_EX_ID, TIPO_ORIGEN_INC_EX_NOMBRE) VALUES(2,'PD Horas Extras');
INSERT INTO EC_TIPO_ORIGEN_INC_EX (TIPO_ORIGEN_INC_EX_ID, TIPO_ORIGEN_INC_EX_NOMBRE) VALUES(3,'Regla');
INSERT INTO EC_TIPO_ORIGEN_INC_EX (TIPO_ORIGEN_INC_EX_ID, TIPO_ORIGEN_INC_EX_NOMBRE) VALUES(4,'Manual');

GO




-- ------------------------------------------------------------
-- Contiene el listado de tipos de permiso de usuarios para agrupaciones
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_PERMISOS (
  TIPO_PERMISO_ID INTEGER  NOT NULL  ,
  TIPO_PERMISO_NOMBRE VARCHAR(45)      ,
PRIMARY KEY(TIPO_PERMISO_ID));
GO


INSERT INTO EC_TIPO_PERMISOS (TIPO_PERMISO_ID, TIPO_PERMISO_NOMBRE) VALUES(-1, 'Sin permiso' );
INSERT INTO EC_TIPO_PERMISOS (TIPO_PERMISO_ID, TIPO_PERMISO_NOMBRE) VALUES(0, 'Heredado' ); 
INSERT INTO EC_TIPO_PERMISOS (TIPO_PERMISO_ID, TIPO_PERMISO_NOMBRE) VALUES(1, 'Solo lectura' ); 
INSERT INTO EC_TIPO_PERMISOS (TIPO_PERMISO_ID, TIPO_PERMISO_NOMBRE) VALUES(2, 'Edición' ); 
INSERT INTO EC_TIPO_PERMISOS (TIPO_PERMISO_ID, TIPO_PERMISO_NOMBRE) VALUES(3, 'Control Total' ); 

GO





-- ------------------------------------------------------------
-- Contiene el listado de tipos de personas que maneja el sistema, en la version 1.0 solo sera "Empleado", ID = 0
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_PERSONAS (
  TIPO_PERSONA_ID INTEGER  NOT NULL  ,
  TIPO_PERSONA_NOMBRE VARCHAR(45)  NOT NULL    ,
PRIMARY KEY(TIPO_PERSONA_ID));
GO



INSERT INTO EC_TIPO_PERSONAS (TIPO_PERSONA_ID, TIPO_PERSONA_NOMBRE) VALUES(0,'No definido'); 
INSERT INTO EC_TIPO_PERSONAS (TIPO_PERSONA_ID, TIPO_PERSONA_NOMBRE) VALUES(1,'Empleado');

GO





CREATE TABLE EC_TIPO_PRIORIDADES (
  TIPO_PRIORIDAD_ID INTEGER  NOT NULL  ,
  TIPO_PRIORIDAD_NOMBRE VARCHAR(45)      ,
PRIMARY KEY(TIPO_PRIORIDAD_ID));
GO


INSERT INTO EC_TIPO_PRIORIDADES (TIPO_PRIORIDAD_ID, TIPO_PRIORIDAD_NOMBRE) VALUES(-2,'Muy Baja' );
INSERT INTO EC_TIPO_PRIORIDADES (TIPO_PRIORIDAD_ID, TIPO_PRIORIDAD_NOMBRE) VALUES(-1,'Baja' ); 
INSERT INTO EC_TIPO_PRIORIDADES (TIPO_PRIORIDAD_ID, TIPO_PRIORIDAD_NOMBRE) VALUES(0,'Normal' ); 
INSERT INTO EC_TIPO_PRIORIDADES (TIPO_PRIORIDAD_ID, TIPO_PRIORIDAD_NOMBRE) VALUES(1,'Alta' ); 
INSERT INTO EC_TIPO_PRIORIDADES (TIPO_PRIORIDAD_ID, TIPO_PRIORIDAD_NOMBRE) VALUES(2,'Muy Alta' ); 

GO




CREATE TABLE EC_TIPO_PUBLICIDAD (
  TIPO_PUBLICIDAD_ID INTEGER  NOT NULL  ,
  TIPO_PUBLICIDAD_NOMBRE VARCHAR(255)    ,
  TIPO_PUBLICIDAD_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIPO_PUBLICIDAD_ID));
GO


INSERT INTO EC_TIPO_PUBLICIDAD (TIPO_PUBLICIDAD_ID, TIPO_PUBLICIDAD_NOMBRE, TIPO_PUBLICIDAD_BORRADO) VALUES(
0,'No definido',1);
INSERT INTO EC_TIPO_PUBLICIDAD (TIPO_PUBLICIDAD_ID, TIPO_PUBLICIDAD_NOMBRE, TIPO_PUBLICIDAD_BORRADO) VALUES( 
1,'Pantalla Comleta',0);
INSERT INTO EC_TIPO_PUBLICIDAD (TIPO_PUBLICIDAD_ID, TIPO_PUBLICIDAD_NOMBRE, TIPO_PUBLICIDAD_BORRADO) VALUES( 
2,'Lateral',0);

GO




CREATE TABLE EC_TIPO_REDONDEO (
  TIPO_REDONDEO_ID INTEGER  NOT NULL  ,
  TIPO_REDONDEO_NOMBRE VARCHAR(255)    ,
  TIPO_REDONDEO_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIPO_REDONDEO_ID));
GO


--0: Trunca el valor ej. 9.9 = 9; 1: Fracciones ej. 9.9 = 9.9; -1: Redondea ej. 9.9 = 10
INSERT INTO EC_TIPO_REDONDEO (TIPO_REDONDEO_ID, TIPO_REDONDEO_NOMBRE, TIPO_REDONDEO_BORRADO) VALUES(0,'Truncar' ,0);
INSERT INTO EC_TIPO_REDONDEO (TIPO_REDONDEO_ID, TIPO_REDONDEO_NOMBRE, TIPO_REDONDEO_BORRADO) VALUES(1,'Fracciones' ,0); 
INSERT INTO EC_TIPO_REDONDEO (TIPO_REDONDEO_ID, TIPO_REDONDEO_NOMBRE, TIPO_REDONDEO_BORRADO) VALUES(-1,'Redondea' ,0); 

GO






-- ------------------------------------------------------------
-- Listado de tipos de tecnologías soportadas
-- 0. Ninguna
-- 1. Código de Barras (RFU)
-- 2. Banda Magnética (RFU)
-- 3. Proximidad (RFU)
-- 4. Mifare
-- 5. Huella 
-- 6. Palma (RFU)
-- 
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_TECNOLOGIAS (
  TIPO_TECNOLOGIA_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_TECNOLOGIA_NOMBRE VARCHAR(45)  NOT NULL  ,
  TIPO_TECNOLOGIA_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIPO_TECNOLOGIA_ID));
GO



INSERT INTO EC_TIPO_TECNOLOGIAS (TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_NOMBRE,TIPO_TECNOLOGIA_BORRADO) VALUES(0,'Ninguna',1); 
INSERT INTO EC_TIPO_TECNOLOGIAS (TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_NOMBRE,TIPO_TECNOLOGIA_BORRADO) VALUES(1,'Código de Barras',0); 
INSERT INTO EC_TIPO_TECNOLOGIAS (TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_NOMBRE,TIPO_TECNOLOGIA_BORRADO) VALUES(2,'Banda Magnética',0); 
INSERT INTO EC_TIPO_TECNOLOGIAS (TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_NOMBRE,TIPO_TECNOLOGIA_BORRADO) VALUES(3,'Proximidad',0); 
INSERT INTO EC_TIPO_TECNOLOGIAS (TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_NOMBRE,TIPO_TECNOLOGIA_BORRADO) VALUES(4,'Mifare',0); 
INSERT INTO EC_TIPO_TECNOLOGIAS (TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_NOMBRE,TIPO_TECNOLOGIA_BORRADO) VALUES(5,'Huella',0); 
INSERT INTO EC_TIPO_TECNOLOGIAS (TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_NOMBRE,TIPO_TECNOLOGIA_BORRADO) VALUES(6,'Palma',0);
INSERT INTO EC_TIPO_TECNOLOGIAS (TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_NOMBRE,TIPO_TECNOLOGIA_BORRADO) VALUES(7,'Chip de contacto',0);
INSERT INTO EC_TIPO_TECNOLOGIAS (TIPO_TECNOLOGIA_ID, TIPO_TECNOLOGIA_NOMBRE,TIPO_TECNOLOGIA_BORRADO) VALUES(8,'Rostro',0);

GO






CREATE TABLE EC_TIPO_TERMINAL_ACCESO (
  TIPO_TERMINAL_ACCESO_ID INTEGER  NOT NULL  ,
  TIPO_TERMINAL_ACCESO_NOMBRE VARCHAR(45)      ,
PRIMARY KEY(TIPO_TERMINAL_ACCESO_ID));
GO


INSERT INTO EC_TIPO_TERMINAL_ACCESO (TIPO_TERMINAL_ACCESO_ID, TIPO_TERMINAL_ACCESO_NOMBRE) VALUES(0,'Desconocido');
INSERT INTO EC_TIPO_TERMINAL_ACCESO (TIPO_TERMINAL_ACCESO_ID, TIPO_TERMINAL_ACCESO_NOMBRE) VALUES(1,'Entrada'); 
INSERT INTO EC_TIPO_TERMINAL_ACCESO (TIPO_TERMINAL_ACCESO_ID, TIPO_TERMINAL_ACCESO_NOMBRE) VALUES(2,'Salida'); 

GO





-- ------------------------------------------------------------
-- Contiene los tipos de datos extras que almacenaran las terminales
-- 
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_TERM_DEXTRAS (
  TIPO_TERM_DEXTRAS_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_TERM_DEXTRAS_NOMBRE VARCHAR(45)      ,
PRIMARY KEY(TIPO_TERM_DEXTRAS_ID));
GO



INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(0,'No definido'); 
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(1, 'Accesos'); 
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(2, 'Huellas'); 
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(101, 'Conexion Correcta'); 
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(102, 'Error de Conexion'); 
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(103, 'Comunicacion Correcta'); 
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(104, 'Error de comunicacion'); 
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(105, 'Log de comunicacion'); 
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(106, 'Fecha y Hora Env');  
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(107, 'Fecha y Hora Error');  
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(108, 'Checadas Descargadas');  
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(109, 'Checadas Error');  
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(110, 'Vectores Descargados'); 
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(111, 'Error al descargar Vec');   
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(112, 'Vectores Enviados');   
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(113, 'Error al Enviar Vec');
INSERT INTO EC_TIPO_TERM_DEXTRAS (TIPO_TERM_DEXTRAS_ID, TIPO_TERM_DEXTRAS_NOMBRE) VALUES(114, 'Img Ubicacion Terminal'); 

GO





CREATE TABLE EC_TIPO_TRAMITE (
  TIPO_TRAMITE_ID INTEGER  NOT NULL  ,
  TIPO_TRAMITE_NOMBRE VARCHAR(255)    ,
  TIPO_TRAMITE_AYUDA VARCHAR(255)    ,
  TIPO_TRAMITE_DESCRIPCION VARCHAR(4000)    ,
  TIPO_TRAMITE_RESUMEN VARCHAR(4000)    ,
  TIPO_TRAMITE_MOMENTO VARCHAR(4000)    ,
  TIPO_TRAMITE_CAMPOS VARCHAR(4000)    ,
  TIPO_TRAMITE_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIPO_TRAMITE_ID));
GO



INSERT INTO EC_TIPO_TRAMITE (TIPO_TRAMITE_ID, TIPO_TRAMITE_NOMBRE) VALUES(
0,'Desconocido',1);

GO










-- ------------------------------------------------------------
-- Contien un listado de los tipos de turnos permitidos por el sistema los cuales son:
-- 0. "No Asignado"
-- 1. Semanal. El cual es muy similar al que se tiene en el eClock para Windows
-- 2. Flexible. Turno (FLEXTIME) 
-- 3. Diario. Se podra configurar una hora de entrada y salida por dia
-- 4. Abierto
-- 
-- ------------------------------------------------------------

CREATE TABLE EC_TIPO_TURNOS (
  TIPO_TURNO_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_TURNO_NOMBRE VARCHAR(45)  NOT NULL    ,
PRIMARY KEY(TIPO_TURNO_ID));
GO



INSERT INTO EC_TIPO_TURNOS (TIPO_TURNO_ID, TIPO_TURNO_NOMBRE) VALUES(0,'No Asignado'); 
INSERT INTO EC_TIPO_TURNOS (TIPO_TURNO_ID, TIPO_TURNO_NOMBRE) VALUES(1,'Semanal'); 
INSERT INTO EC_TIPO_TURNOS (TIPO_TURNO_ID, TIPO_TURNO_NOMBRE) VALUES(2,'Flexible'); 
INSERT INTO EC_TIPO_TURNOS (TIPO_TURNO_ID, TIPO_TURNO_NOMBRE) VALUES(3,'Diario');
INSERT INTO EC_TIPO_TURNOS (TIPO_TURNO_ID, TIPO_TURNO_NOMBRE) VALUES(4,'Abierto');
INSERT INTO EC_TIPO_TURNOS (TIPO_TURNO_ID, TIPO_TURNO_NOMBRE) VALUES(5,'Simple');

GO





CREATE TABLE EC_TIPO_UNIDADES (
  TIPO_UNIDAD_ID INTEGER  NOT NULL  ,
  TIPO_UNIDAD_NOMBRE VARCHAR(255)    ,
  TIPO_UNIDAD_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TIPO_UNIDAD_ID));
GO


INSERT INTO EC_TIPO_UNIDADES (TIPO_UNIDAD_ID, TIPO_UNIDAD_NOMBRE, TIPO_UNIDAD_BORRADO) VALUES(0,'Dias',0);
INSERT INTO EC_TIPO_UNIDADES (TIPO_UNIDAD_ID, TIPO_UNIDAD_NOMBRE, TIPO_UNIDAD_BORRADO) VALUES(1,'Horas',0);
INSERT INTO EC_TIPO_UNIDADES (TIPO_UNIDAD_ID, TIPO_UNIDAD_NOMBRE, TIPO_UNIDAD_BORRADO) VALUES(2,'Minutos',0);
INSERT INTO EC_TIPO_UNIDADES (TIPO_UNIDAD_ID, TIPO_UNIDAD_NOMBRE, TIPO_UNIDAD_BORRADO) VALUES(3,'Segundo',0);

GO






CREATE TABLE EC_TRAMITES (
  TRAMITE_ID INTEGER  NOT NULL  ,
  TIPO_TRAMITE_ID INTEGER  NOT NULL  ,
  TIPO_PRIORIDAD_ID INTEGER  NOT NULL  ,
  PERSONA_ID INTEGER  NOT NULL  ,
  TRAMITE_FECHA DATETIME    ,
  TRAMITE_DESCRIPCION VARCHAR(4000)      ,
PRIMARY KEY(TRAMITE_ID)      );
GO


CREATE INDEX EC_TRAMITES_FKIndex1 ON EC_TRAMITES (PERSONA_ID);
GO
CREATE INDEX EC_TRAMITES_FKIndex3 ON EC_TRAMITES (TIPO_PRIORIDAD_ID);
GO
CREATE INDEX EC_TRAMITES_FKIndex3 ON EC_TRAMITES (TIPO_TRAMITE_ID);
GO






-- ------------------------------------------------------------
-- Contiene un listado de los turnos dados de alta en el sistema.
-- se usara el ID = 0 con nombre "No Asignado" y Tipo Turno = 0 con Turno_Borrado = 1
-- 
-- En el caso de Tipo Semanal y Flexible usaran la tabla EC_TURNOS_SEMANAL_DIA
-- ------------------------------------------------------------

CREATE TABLE EC_TURNOS (
  TURNO_ID INTEGER UNSIGNED  NOT NULL  ,
  TIPO_TURNO_ID INTEGER UNSIGNED  NOT NULL DEFAULT 0 ,
  TURNO_NOMBRE VARCHAR(45)  NOT NULL  ,
  TURNO_ASISTENCIA BOOL  NOT NULL  ,
  TURNO_PHEXTRAS BOOL   DEFAULT 0 ,
  TURNO_INDIVIDUAL BOOL   DEFAULT 0 ,
  TURNO_GRUPOS VARCHAR(255)    ,
  TURNO_COLOR INTEGER   DEFAULT 0 ,
  TURNO_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(TURNO_ID)  );
GO


CREATE INDEX EC_TURNOSFKI1 ON EC_TURNOS (TIPO_TURNO_ID);
GO



INSERT INTO EC_TURNOS (TURNO_ID, TIPO_TURNO_ID, TURNO_NOMBRE, TURNO_ASISTENCIA, TURNO_BORRADO) VALUES(0,0,'No Asignado',0,1);

GO












-- ------------------------------------------------------------
-- Listado de horas de entrada, salida, horarios comidas
-- 
-- ------------------------------------------------------------

CREATE TABLE EC_TURNOS_DIA (
  TURNO_DIA_ID INTEGER UNSIGNED  NOT NULL  ,
  TURNO_DIA_HEMIN TIME  NOT NULL  ,
  TURNO_DIA_HE TIME  NOT NULL  ,
  TURNO_DIA_HEMAX TIME  NOT NULL  ,
  TURNO_DIA_HERETARDO TIME  NOT NULL  ,
  TURNO_DIA_HSMIN TIME  NOT NULL  ,
  TURNO_DIA_HS TIME  NOT NULL  ,
  TURNO_DIA_HSMAX TIME  NOT NULL  ,
  TURNO_DIA_HBLOQUE TIME    ,
  TURNO_DIA_HBLOQUET TIME    ,
  TURNO_DIA_HTIEMPO TIME    ,
  TURNO_DIA_HAYCOMIDA BOOL   DEFAULT 1 ,
  TURNO_DIA_HCS TIME    ,
  TURNO_DIA_HCR TIME    ,
  TURNO_DIA_HCTIEMPO TIME    ,
  TURNO_DIA_HCTOLERA TIME    ,
  TURNO_DIA_PHEX BOOL   DEFAULT 1 ,
  TURNO_DIA_NO_ASIS BOOL   DEFAULT 0 ,
  TURNO_DIA_HERETARDO_B TIME  NOT NULL  ,
  TURNO_DIA_HERETARDO_C TIME  NOT NULL  ,
  TURNO_DIA_HERETARDO_D TIME  NOT NULL    ,
PRIMARY KEY(TURNO_DIA_ID));
GO




INSERT INTO EC_TURNOS_DIA (TURNO_DIA_ID, TURNO_DIA_HEMIN, TURNO_DIA_HE, TURNO_DIA_HEMAX, TURNO_DIA_HERETARDO, TURNO_DIA_HERETARDO_B, TURNO_DIA_HERETARDO_C, TURNO_DIA_HERETARDO_D, TURNO_DIA_HSMIN, TURNO_DIA_HS, TURNO_DIA_HSMAX) 

VALUES(-1, 

to_Date('01/01/2006','DD/MM/YYYY'), to_Date('01/01/2006','DD/MM/YYYY'), 

to_Date('01/01/2006','DD/MM/YYYY'), to_Date('01/01/2006','DD/MM/YYYY'), 

to_Date('01/01/2006','DD/MM/YYYY'), to_Date('01/01/2006','DD/MM/YYYY'), 

to_Date('01/01/2006','DD/MM/YYYY'), to_Date('01/01/2006','DD/MM/YYYY'), 

to_Date('01/01/2006','DD/MM/YYYY'), to_Date('01/01/2006','DD/MM/YYYY')); 





INSERT INTO EC_TURNOS_DIA (TURNO_DIA_ID, TURNO_DIA_HEMIN, TURNO_DIA_HE, TURNO_DIA_HEMAX, TURNO_DIA_HERETARDO, TURNO_DIA_HERETARDO_B, TURNO_DIA_HERETARDO_C, TURNO_DIA_HERETARDO_D, TURNO_DIA_HSMIN, TURNO_DIA_HS, TURNO_DIA_HSMAX) 

VALUES(0, 

to_Date('01/01/2006','DD/MM/YYYY'), to_Date('01/01/2006','DD/MM/YYYY'), 

to_Date('01/01/2006','DD/MM/YYYY'), to_Date('01/01/2006','DD/MM/YYYY'), 

to_Date('01/01/2006','DD/MM/YYYY'), to_Date('01/01/2006','DD/MM/YYYY'), 

to_Date('01/01/2006','DD/MM/YYYY'), to_Date('01/01/2006','DD/MM/YYYY'), 

to_Date('01/01/2006','DD/MM/YYYY'), to_Date('01/01/2006','DD/MM/YYYY')); 



 

INSERT INTO EC_TURNOS_DIA (TURNO_DIA_ID, TURNO_DIA_HEMIN, TURNO_DIA_HE, TURNO_DIA_HEMAX, TURNO_DIA_HERETARDO, TURNO_DIA_HERETARDO_B, TURNO_DIA_HERETARDO_C, TURNO_DIA_HERETARDO_D, TURNO_DIA_HSMIN, TURNO_DIA_HS, TURNO_DIA_HSMAX, 

TURNO_DIA_HBLOQUE, TURNO_DIA_HBLOQUET, TURNO_DIA_HTIEMPO, TURNO_DIA_HAYCOMIDA, TURNO_DIA_HCS, TURNO_DIA_HCR, TURNO_DIA_HCTIEMPO, TURNO_DIA_HCTOLERA) 

VALUES(1, 

to_Date('01/01/2006 03:00','DD/MM/YYYY HH24:MI'), to_Date('01/01/2006 09:00','DD/MM/YYYY HH24:MI'), 

to_Date('01/01/2006 12:00','DD/MM/YYYY HH24:MI'), to_Date('01/01/2006 09:10','DD/MM/YYYY HH24:MI'),

to_Date('01/01/2006 09:10','DD/MM/YYYY HH24:MI'), to_Date('01/01/2006 09:10','DD/MM/YYYY HH24:MI'),

to_Date('01/01/2006 09:10','DD/MM/YYYY HH24:MI'), 

to_Date('01/01/2006 18:00','DD/MM/YYYY HH24:MI'), to_Date('01/01/2006 18:00','DD/MM/YYYY HH24:MI'), 

to_Date('01/01/2006 23:59','DD/MM/YYYY HH24:MI'), to_Date('01/01/2006 00:00','DD/MM/YYYY HH24:MI'), 

to_Date('01/01/2006 00:00','DD/MM/YYYY HH24:MI'), to_Date('01/01/2006 09:00','DD/MM/YYYY HH24:MI'), 

1, to_Date('01/01/2006 15:00','DD/MM/YYYY HH24:MI'), to_Date('01/01/2006 16:00','DD/MM/YYYY HH24:MI'), 

to_Date('01/01/2006 01:00','DD/MM/YYYY HH24:MI'), to_Date('01/01/2006 00:15','DD/MM/YYYY HH24:MI')); 





INSERT INTO EC_TURNOS_DIA (TURNO_DIA_ID, TURNO_DIA_HEMIN, TURNO_DIA_HE, TURNO_DIA_HEMAX, TURNO_DIA_HERETARDO, TURNO_DIA_HERETARDO_B, TURNO_DIA_HERETARDO_C, TURNO_DIA_HERETARDO_D, TURNO_DIA_HSMIN, TURNO_DIA_HS, TURNO_DIA_HSMAX)   

VALUES(-1,   

convert(datetime,'01/01/2006',103), convert(datetime,'01/01/2006',103),   

convert(datetime,'01/01/2006',103), convert(datetime,'01/01/2006',103),   

convert(datetime,'01/01/2006',103), convert(datetime,'01/01/2006',103),   

convert(datetime,'01/01/2006',103), convert(datetime,'01/01/2006',103),   

convert(datetime,'01/01/2006',103), convert(datetime,'01/01/2006',103)); 





INSERT INTO EC_TURNOS_DIA (TURNO_DIA_ID, TURNO_DIA_HEMIN, TURNO_DIA_HE, TURNO_DIA_HEMAX, TURNO_DIA_HERETARDO, TURNO_DIA_HERETARDO_B, TURNO_DIA_HERETARDO_C, TURNO_DIA_HERETARDO_D, TURNO_DIA_HSMIN, TURNO_DIA_HS, TURNO_DIA_HSMAX)   

VALUES(0,   

convert(datetime,'01/01/2006',103), convert(datetime,'01/01/2006',103),   

convert(datetime,'01/01/2006',103), convert(datetime,'01/01/2006',103),   

convert(datetime,'01/01/2006',103), convert(datetime,'01/01/2006',103),   

convert(datetime,'01/01/2006',103), convert(datetime,'01/01/2006',103),   

convert(datetime,'01/01/2006',103), convert(datetime,'01/01/2006',103)); 



 

INSERT INTO EC_TURNOS_DIA (TURNO_DIA_ID, TURNO_DIA_HEMIN, TURNO_DIA_HE, TURNO_DIA_HEMAX, TURNO_DIA_HERETARDO, TURNO_DIA_HERETARDO_B, TURNO_DIA_HERETARDO_C, TURNO_DIA_HERETARDO_D, TURNO_DIA_HSMIN, TURNO_DIA_HS, TURNO_DIA_HSMAX,   

TURNO_DIA_HBLOQUE, TURNO_DIA_HBLOQUET, TURNO_DIA_HTIEMPO, TURNO_DIA_HAYCOMIDA, TURNO_DIA_HCS, TURNO_DIA_HCR, TURNO_DIA_HCTIEMPO, TURNO_DIA_HCTOLERA)   

VALUES(1,   

convert(datetime,'01/01/2006 03:00',103), convert(datetime,'01/01/2006 09:00',103),   

convert(datetime,'01/01/2006 12:00',103), convert(datetime,'01/01/2006 09:10',103),

convert(datetime,'01/01/2006 09:10',103), convert(datetime,'01/01/2006 09:10',103),

convert(datetime,'01/01/2006 09:10',103),   

convert(datetime,'01/01/2006 18:00',103), convert(datetime,'01/01/2006 18:00',103),   

convert(datetime,'01/01/2006 23:59',103), convert(datetime,'01/01/2006 00:00',103),   

convert(datetime,'01/01/2006 00:00',103), convert(datetime,'01/01/2006 09:00',103),   

1, convert(datetime,'01/01/2006 15:00',103), convert(datetime,'01/01/2006 16:00',103),   

convert(datetime,'01/01/2006 01:00',103), convert(datetime,'01/01/2006 00:15',103)); 

GO
























-- ------------------------------------------------------------
-- Contiene los datos para generar turnos diarios, los cuales se usaran para rotación o bien personas que cambian constantemente de horario
-- ------------------------------------------------------------

CREATE TABLE EC_TURNOS_DIARIOS (
  TURNO_DIARIO_ID INTEGER UNSIGNED  NOT NULL  ,
  TURNO_ID INTEGER UNSIGNED  NOT NULL  ,
  TURNO_DIARIO_FECHA DATE    ,
  TURNO_HIJO_ID INTEGER UNSIGNED      ,
PRIMARY KEY(TURNO_DIARIO_ID)    );
GO


CREATE INDEX EC_TURNOS_DIARIOSFKI1 ON EC_TURNOS_DIARIOS (TURNO_ID);
GO
CREATE INDEX EC_TURNOS_DIARIOSFKI2 ON EC_TURNOS_DIARIOS (TURNO_HIJO_ID);
GO







-- ------------------------------------------------------------
-- Listado de horas de entrada y salida para turnos semanales
-- ------------------------------------------------------------

CREATE TABLE EC_TURNOS_SEMANAL_DIA (
  TURNO_SEMANAL_DIA_ID INTEGER UNSIGNED  NOT NULL  ,
  TURNO_DIA_ID INTEGER UNSIGNED  NOT NULL  ,
  TURNO_ID INTEGER UNSIGNED  NOT NULL  ,
  DIA_SEMANA_ID INTEGER UNSIGNED  NOT NULL    ,
PRIMARY KEY(TURNO_SEMANAL_DIA_ID)      );
GO


CREATE INDEX EC_TURNOS_SEMANAL_DIAFKI1 ON EC_TURNOS_SEMANAL_DIA (TURNO_ID);
GO
CREATE INDEX EC_TURNOS_SEMANAL_DIAFKI2 ON EC_TURNOS_SEMANAL_DIA (DIA_SEMANA_ID);
GO
CREATE INDEX EC_TURNOS_SEMANAL_DIAFKI3 ON EC_TURNOS_SEMANAL_DIA (TURNO_DIA_ID);
GO




CREATE TABLE EC_T_INC_ACCESO (
  T_INC_ACCESO_ID INTEGER  NOT NULL  ,
  T_INC_ACCESO_NOMBRE VARCHAR(255)    ,
  T_INC_ACCESO_ABR VARCHAR(20)    ,
  T_INC_ACCESO_COLOR INTEGER    ,
  TIPO_INCIDENCIA_ID INTEGER   DEFAULT 0 ,
  TIPO_INCIDENCIA_EX_ID INTEGER    ,
  TIPO_INCIDENCIA_EX_REGLA VARCHAR(255)    ,
  T_INC_ACCESO_COMEN VARCHAR(255)    ,
  T_INC_ACCESO_ENTRADA BOOL   DEFAULT 1 ,
  T_INC_ACCESO_SALIDA BOOL   DEFAULT 1 ,
  T_INC_ACCESO_INTERVALO BOOL   DEFAULT 1 ,
  T_INC_ACCESO_ASIGNAR INTEGER    ,
  T_INC_ACCESO_MEDICION INTEGER   DEFAULT 0 ,
  T_INC_ACCESO_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(T_INC_ACCESO_ID));
GO


INSERT INTO EC_T_INC_ACCESO (T_INC_ACCESO_ID, T_INC_ACCESO_NOMBRE, T_INC_ACCESO_BORRADO) VALUES(
0,'Sin Incidencia de Acceso',0);

GO

















-- ------------------------------------------------------------
-- Listado de usuarios del sistema
-- 0. Ninguno, Perfil = 0, Usuario = Ninguno, Nombre = Ninguno, Clave = Ninguno y Borrado = 1
-- 
-- ------------------------------------------------------------

CREATE TABLE EC_USUARIOS (
  USUARIO_ID INTEGER  NOT NULL  ,
  PERFIL_ID INTEGER  NOT NULL  ,
  USUARIO_USUARIO VARCHAR(255)  NOT NULL  ,
  USUARIO_NOMBRE VARCHAR(45)  NOT NULL  ,
  USUARIO_DESCRIPCION VARCHAR(45)    ,
  USUARIO_CLAVE VARCHAR(45)  NOT NULL  ,
  USUARIO_EMAIL VARCHAR(255)    ,
  USUARIO_ENVMAILA BOOL   DEFAULT 1 ,
  SUSCRIPCION_ID INTEGER   DEFAULT 0 ,
  USUARIO_AGRUPACION VARCHAR(2000)    ,
  USUARIO_ESSUP BOOL   DEFAULT 1 ,
  USUARIO_ESEMP BOOL   DEFAULT 0 ,
  PERSONA_ID INTEGER   DEFAULT 0 ,
  USUARIO_BORRADO BOOL   DEFAULT 0   ,
PRIMARY KEY(USUARIO_ID)    );
GO


CREATE INDEX EC_USUARIOSFKI1 ON EC_USUARIOS (PERFIL_ID);
GO
CREATE INDEX EC_USUARIOSFKI2 ON EC_USUARIOS (USUARIO_USUARIO);
GO



INSERT INTO EC_USUARIOS (USUARIO_ID, PERFIL_ID, USUARIO_USUARIO, USUARIO_NOMBRE, USUARIO_CLAVE, USUARIO_BORRADO) VALUES(0, 0, 'Ninguno', 'Nunguno', 'Nunguno',1); 
INSERT INTO EC_USUARIOS (USUARIO_ID, PERFIL_ID, USUARIO_USUARIO, USUARIO_NOMBRE, USUARIO_DESCRIPCION,USUARIO_CLAVE, USUARIO_BORRADO) VALUES(1, 1, 'admin', 'Administrador del sistema', 'Creado por el sistema, cambie la contraseña','admin',0);
INSERT INTO EC_USUARIOS (USUARIO_ID, PERFIL_ID, USUARIO_USUARIO, USUARIO_NOMBRE, USUARIO_DESCRIPCION,USUARIO_CLAVE, USUARIO_BORRADO) VALUES(2, 0, 'sync', 'Servicio de sincronizacion', 'Creado por el sistema, cambie la contraseña','sync',0);

GO
















CREATE TABLE EC_USUARIOS_DISENOS (
  USUARIO_ID INTEGER  NOT NULL  ,
  DISENO_ID INTEGER UNSIGNED  NOT NULL  ,
  USUARIO_DISENO_SL BOOL   DEFAULT 0 ,
  USUARIO_PROP BOOL   DEFAULT 1   ,
PRIMARY KEY(USUARIO_ID, DISENO_ID)    );
GO


CREATE INDEX EC_USUARIOS_DISENOS_FKI1 ON EC_USUARIOS_DISENOS (USUARIO_ID);
GO
CREATE INDEX EC_USUARIOS_DISENOS_FKI2 ON EC_USUARIOS_DISENOS (DISENO_ID);
GO





CREATE TABLE EC_USUARIOS_PERMISOS (
  USUARIO_PERMISO_ID INTEGER  NOT NULL  ,
  USUARIO_ID INTEGER  NOT NULL  ,
  SUSCRIPCION_ID INTEGER  NOT NULL  ,
  TIPO_PERMISO_ID INTEGER  NOT NULL  ,
  USUARIO_PERMISO VARCHAR(2000)  NOT NULL    ,
PRIMARY KEY(USUARIO_PERMISO_ID)        );
GO


CREATE INDEX EC_USUARIOS_AGRUPACIONES_FKIndex1 ON EC_USUARIOS_PERMISOS (SUSCRIPCION_ID);
GO
CREATE INDEX EC_USUARIOS_AGRUPACIONES_FKIndex2 ON EC_USUARIOS_PERMISOS (USUARIO_ID);
GO
CREATE INDEX EC_USUARIOS_AGRUPACIONES_FKIndex3 ON EC_USUARIOS_PERMISOS (TIPO_PERMISO_ID);
GO
CREATE UNIQUE INDEX EC_USUARIOS_PERMISOS_INDEX ON EC_USUARIOS_PERMISOS (USUARIO_ID, SUSCRIPCION_ID, USUARIO_PERMISO);
GO





