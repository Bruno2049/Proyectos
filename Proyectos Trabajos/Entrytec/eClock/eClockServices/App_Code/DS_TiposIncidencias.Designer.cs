//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.42
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eClock {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DS_TiposIncidencias")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TiposIncidencias : System.Data.DataSet {
        
        private EC_TIPO_INCIDENCIAS_EdicionDataTable tableEC_TIPO_INCIDENCIAS_Edicion;
        
        private EC_TIPO_INC_COMIDA_SISDataTable tableEC_TIPO_INC_COMIDA_SIS;
        
        private EC_TIPO_INC_SISDataTable tableEC_TIPO_INC_SIS;
        
        private EC_TIPO_INCIDENCIASDataTable tableEC_TIPO_INCIDENCIAS;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TiposIncidencias() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TiposIncidencias(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["EC_TIPO_INCIDENCIAS_Edicion"] != null)) {
                    base.Tables.Add(new EC_TIPO_INCIDENCIAS_EdicionDataTable(ds.Tables["EC_TIPO_INCIDENCIAS_Edicion"]));
                }
                if ((ds.Tables["EC_TIPO_INC_COMIDA_SIS"] != null)) {
                    base.Tables.Add(new EC_TIPO_INC_COMIDA_SISDataTable(ds.Tables["EC_TIPO_INC_COMIDA_SIS"]));
                }
                if ((ds.Tables["EC_TIPO_INC_SIS"] != null)) {
                    base.Tables.Add(new EC_TIPO_INC_SISDataTable(ds.Tables["EC_TIPO_INC_SIS"]));
                }
                if ((ds.Tables["EC_TIPO_INCIDENCIAS"] != null)) {
                    base.Tables.Add(new EC_TIPO_INCIDENCIASDataTable(ds.Tables["EC_TIPO_INCIDENCIAS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_TIPO_INCIDENCIAS_EdicionDataTable EC_TIPO_INCIDENCIAS_Edicion {
            get {
                return this.tableEC_TIPO_INCIDENCIAS_Edicion;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_TIPO_INC_COMIDA_SISDataTable EC_TIPO_INC_COMIDA_SIS {
            get {
                return this.tableEC_TIPO_INC_COMIDA_SIS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_TIPO_INC_SISDataTable EC_TIPO_INC_SIS {
            get {
                return this.tableEC_TIPO_INC_SIS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_TIPO_INCIDENCIASDataTable EC_TIPO_INCIDENCIAS {
            get {
                return this.tableEC_TIPO_INCIDENCIAS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DS_TiposIncidencias cln = ((DS_TiposIncidencias)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EC_TIPO_INCIDENCIAS_Edicion"] != null)) {
                    base.Tables.Add(new EC_TIPO_INCIDENCIAS_EdicionDataTable(ds.Tables["EC_TIPO_INCIDENCIAS_Edicion"]));
                }
                if ((ds.Tables["EC_TIPO_INC_COMIDA_SIS"] != null)) {
                    base.Tables.Add(new EC_TIPO_INC_COMIDA_SISDataTable(ds.Tables["EC_TIPO_INC_COMIDA_SIS"]));
                }
                if ((ds.Tables["EC_TIPO_INC_SIS"] != null)) {
                    base.Tables.Add(new EC_TIPO_INC_SISDataTable(ds.Tables["EC_TIPO_INC_SIS"]));
                }
                if ((ds.Tables["EC_TIPO_INCIDENCIAS"] != null)) {
                    base.Tables.Add(new EC_TIPO_INCIDENCIASDataTable(ds.Tables["EC_TIPO_INCIDENCIAS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableEC_TIPO_INCIDENCIAS_Edicion = ((EC_TIPO_INCIDENCIAS_EdicionDataTable)(base.Tables["EC_TIPO_INCIDENCIAS_Edicion"]));
            if ((initTable == true)) {
                if ((this.tableEC_TIPO_INCIDENCIAS_Edicion != null)) {
                    this.tableEC_TIPO_INCIDENCIAS_Edicion.InitVars();
                }
            }
            this.tableEC_TIPO_INC_COMIDA_SIS = ((EC_TIPO_INC_COMIDA_SISDataTable)(base.Tables["EC_TIPO_INC_COMIDA_SIS"]));
            if ((initTable == true)) {
                if ((this.tableEC_TIPO_INC_COMIDA_SIS != null)) {
                    this.tableEC_TIPO_INC_COMIDA_SIS.InitVars();
                }
            }
            this.tableEC_TIPO_INC_SIS = ((EC_TIPO_INC_SISDataTable)(base.Tables["EC_TIPO_INC_SIS"]));
            if ((initTable == true)) {
                if ((this.tableEC_TIPO_INC_SIS != null)) {
                    this.tableEC_TIPO_INC_SIS.InitVars();
                }
            }
            this.tableEC_TIPO_INCIDENCIAS = ((EC_TIPO_INCIDENCIASDataTable)(base.Tables["EC_TIPO_INCIDENCIAS"]));
            if ((initTable == true)) {
                if ((this.tableEC_TIPO_INCIDENCIAS != null)) {
                    this.tableEC_TIPO_INCIDENCIAS.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TiposIncidencias";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DS_TiposIncidencias.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-MX");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEC_TIPO_INCIDENCIAS_Edicion = new EC_TIPO_INCIDENCIAS_EdicionDataTable();
            base.Tables.Add(this.tableEC_TIPO_INCIDENCIAS_Edicion);
            this.tableEC_TIPO_INC_COMIDA_SIS = new EC_TIPO_INC_COMIDA_SISDataTable();
            base.Tables.Add(this.tableEC_TIPO_INC_COMIDA_SIS);
            this.tableEC_TIPO_INC_SIS = new EC_TIPO_INC_SISDataTable();
            base.Tables.Add(this.tableEC_TIPO_INC_SIS);
            this.tableEC_TIPO_INCIDENCIAS = new EC_TIPO_INCIDENCIASDataTable();
            base.Tables.Add(this.tableEC_TIPO_INCIDENCIAS);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_TIPO_INCIDENCIAS_Edicion() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_TIPO_INC_COMIDA_SIS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_TIPO_INC_SIS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_TIPO_INCIDENCIAS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DS_TiposIncidencias ds = new DS_TiposIncidencias();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void EC_TIPO_INCIDENCIAS_EdicionRowChangeEventHandler(object sender, EC_TIPO_INCIDENCIAS_EdicionRowChangeEvent e);
        
        public delegate void EC_TIPO_INC_COMIDA_SISRowChangeEventHandler(object sender, EC_TIPO_INC_COMIDA_SISRowChangeEvent e);
        
        public delegate void EC_TIPO_INC_SISRowChangeEventHandler(object sender, EC_TIPO_INC_SISRowChangeEvent e);
        
        public delegate void EC_TIPO_INCIDENCIASRowChangeEventHandler(object sender, EC_TIPO_INCIDENCIASRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_TIPO_INCIDENCIAS_EdicionDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_ID;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_NOMBRE;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_ABR;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_BORRADO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIAS_EdicionDataTable() {
                this.TableName = "EC_TIPO_INCIDENCIAS_Edicion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_INCIDENCIAS_EdicionDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_TIPO_INCIDENCIAS_EdicionDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_IDColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_NOMBREColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_ABRColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_ABR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_BORRADOColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_BORRADO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIAS_EdicionRow this[int index] {
                get {
                    return ((EC_TIPO_INCIDENCIAS_EdicionRow)(this.Rows[index]));
                }
            }
            
            public event EC_TIPO_INCIDENCIAS_EdicionRowChangeEventHandler EC_TIPO_INCIDENCIAS_EdicionRowChanging;
            
            public event EC_TIPO_INCIDENCIAS_EdicionRowChangeEventHandler EC_TIPO_INCIDENCIAS_EdicionRowChanged;
            
            public event EC_TIPO_INCIDENCIAS_EdicionRowChangeEventHandler EC_TIPO_INCIDENCIAS_EdicionRowDeleting;
            
            public event EC_TIPO_INCIDENCIAS_EdicionRowChangeEventHandler EC_TIPO_INCIDENCIAS_EdicionRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_TIPO_INCIDENCIAS_EdicionRow(EC_TIPO_INCIDENCIAS_EdicionRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIAS_EdicionRow AddEC_TIPO_INCIDENCIAS_EdicionRow(decimal TIPO_INCIDENCIA_ID, string TIPO_INCIDENCIA_NOMBRE, string TIPO_INCIDENCIA_ABR, decimal TIPO_INCIDENCIA_BORRADO) {
                EC_TIPO_INCIDENCIAS_EdicionRow rowEC_TIPO_INCIDENCIAS_EdicionRow = ((EC_TIPO_INCIDENCIAS_EdicionRow)(this.NewRow()));
                rowEC_TIPO_INCIDENCIAS_EdicionRow.ItemArray = new object[] {
                        TIPO_INCIDENCIA_ID,
                        TIPO_INCIDENCIA_NOMBRE,
                        TIPO_INCIDENCIA_ABR,
                        TIPO_INCIDENCIA_BORRADO};
                this.Rows.Add(rowEC_TIPO_INCIDENCIAS_EdicionRow);
                return rowEC_TIPO_INCIDENCIAS_EdicionRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIAS_EdicionRow FindByTIPO_INCIDENCIA_ID(decimal TIPO_INCIDENCIA_ID) {
                return ((EC_TIPO_INCIDENCIAS_EdicionRow)(this.Rows.Find(new object[] {
                            TIPO_INCIDENCIA_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_TIPO_INCIDENCIAS_EdicionDataTable cln = ((EC_TIPO_INCIDENCIAS_EdicionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_TIPO_INCIDENCIAS_EdicionDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTIPO_INCIDENCIA_ID = base.Columns["TIPO_INCIDENCIA_ID"];
                this.columnTIPO_INCIDENCIA_NOMBRE = base.Columns["TIPO_INCIDENCIA_NOMBRE"];
                this.columnTIPO_INCIDENCIA_ABR = base.Columns["TIPO_INCIDENCIA_ABR"];
                this.columnTIPO_INCIDENCIA_BORRADO = base.Columns["TIPO_INCIDENCIA_BORRADO"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTIPO_INCIDENCIA_ID = new System.Data.DataColumn("TIPO_INCIDENCIA_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_ID);
                this.columnTIPO_INCIDENCIA_NOMBRE = new System.Data.DataColumn("TIPO_INCIDENCIA_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_NOMBRE);
                this.columnTIPO_INCIDENCIA_ABR = new System.Data.DataColumn("TIPO_INCIDENCIA_ABR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_ABR);
                this.columnTIPO_INCIDENCIA_BORRADO = new System.Data.DataColumn("TIPO_INCIDENCIA_BORRADO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_BORRADO);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTIPO_INCIDENCIA_ID}, true));
                this.columnTIPO_INCIDENCIA_ID.AllowDBNull = false;
                this.columnTIPO_INCIDENCIA_ID.Unique = true;
                this.columnTIPO_INCIDENCIA_NOMBRE.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIAS_EdicionRow NewEC_TIPO_INCIDENCIAS_EdicionRow() {
                return ((EC_TIPO_INCIDENCIAS_EdicionRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_TIPO_INCIDENCIAS_EdicionRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_TIPO_INCIDENCIAS_EdicionRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_TIPO_INCIDENCIAS_EdicionRowChanged != null)) {
                    this.EC_TIPO_INCIDENCIAS_EdicionRowChanged(this, new EC_TIPO_INCIDENCIAS_EdicionRowChangeEvent(((EC_TIPO_INCIDENCIAS_EdicionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_TIPO_INCIDENCIAS_EdicionRowChanging != null)) {
                    this.EC_TIPO_INCIDENCIAS_EdicionRowChanging(this, new EC_TIPO_INCIDENCIAS_EdicionRowChangeEvent(((EC_TIPO_INCIDENCIAS_EdicionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_TIPO_INCIDENCIAS_EdicionRowDeleted != null)) {
                    this.EC_TIPO_INCIDENCIAS_EdicionRowDeleted(this, new EC_TIPO_INCIDENCIAS_EdicionRowChangeEvent(((EC_TIPO_INCIDENCIAS_EdicionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_TIPO_INCIDENCIAS_EdicionRowDeleting != null)) {
                    this.EC_TIPO_INCIDENCIAS_EdicionRowDeleting(this, new EC_TIPO_INCIDENCIAS_EdicionRowChangeEvent(((EC_TIPO_INCIDENCIAS_EdicionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_TIPO_INCIDENCIAS_EdicionRow(EC_TIPO_INCIDENCIAS_EdicionRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_TiposIncidencias ds = new DS_TiposIncidencias();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_TIPO_INCIDENCIAS_EdicionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_TIPO_INC_COMIDA_SISDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTIPO_INC_C_SIS_ID;
            
            private System.Data.DataColumn columnTIPO_INC_C_SIS_NOMBRE;
            
            private System.Data.DataColumn columnTIPO_INC_C_SIS_ABR;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_COMIDA_SISDataTable() {
                this.TableName = "EC_TIPO_INC_COMIDA_SIS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_INC_COMIDA_SISDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_TIPO_INC_COMIDA_SISDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INC_C_SIS_IDColumn {
                get {
                    return this.columnTIPO_INC_C_SIS_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INC_C_SIS_NOMBREColumn {
                get {
                    return this.columnTIPO_INC_C_SIS_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INC_C_SIS_ABRColumn {
                get {
                    return this.columnTIPO_INC_C_SIS_ABR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_COMIDA_SISRow this[int index] {
                get {
                    return ((EC_TIPO_INC_COMIDA_SISRow)(this.Rows[index]));
                }
            }
            
            public event EC_TIPO_INC_COMIDA_SISRowChangeEventHandler EC_TIPO_INC_COMIDA_SISRowChanging;
            
            public event EC_TIPO_INC_COMIDA_SISRowChangeEventHandler EC_TIPO_INC_COMIDA_SISRowChanged;
            
            public event EC_TIPO_INC_COMIDA_SISRowChangeEventHandler EC_TIPO_INC_COMIDA_SISRowDeleting;
            
            public event EC_TIPO_INC_COMIDA_SISRowChangeEventHandler EC_TIPO_INC_COMIDA_SISRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_TIPO_INC_COMIDA_SISRow(EC_TIPO_INC_COMIDA_SISRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_COMIDA_SISRow AddEC_TIPO_INC_COMIDA_SISRow(decimal TIPO_INC_C_SIS_ID, string TIPO_INC_C_SIS_NOMBRE, string TIPO_INC_C_SIS_ABR) {
                EC_TIPO_INC_COMIDA_SISRow rowEC_TIPO_INC_COMIDA_SISRow = ((EC_TIPO_INC_COMIDA_SISRow)(this.NewRow()));
                rowEC_TIPO_INC_COMIDA_SISRow.ItemArray = new object[] {
                        TIPO_INC_C_SIS_ID,
                        TIPO_INC_C_SIS_NOMBRE,
                        TIPO_INC_C_SIS_ABR};
                this.Rows.Add(rowEC_TIPO_INC_COMIDA_SISRow);
                return rowEC_TIPO_INC_COMIDA_SISRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_COMIDA_SISRow FindByTIPO_INC_C_SIS_ID(decimal TIPO_INC_C_SIS_ID) {
                return ((EC_TIPO_INC_COMIDA_SISRow)(this.Rows.Find(new object[] {
                            TIPO_INC_C_SIS_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_TIPO_INC_COMIDA_SISDataTable cln = ((EC_TIPO_INC_COMIDA_SISDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_TIPO_INC_COMIDA_SISDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTIPO_INC_C_SIS_ID = base.Columns["TIPO_INC_C_SIS_ID"];
                this.columnTIPO_INC_C_SIS_NOMBRE = base.Columns["TIPO_INC_C_SIS_NOMBRE"];
                this.columnTIPO_INC_C_SIS_ABR = base.Columns["TIPO_INC_C_SIS_ABR"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTIPO_INC_C_SIS_ID = new System.Data.DataColumn("TIPO_INC_C_SIS_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INC_C_SIS_ID);
                this.columnTIPO_INC_C_SIS_NOMBRE = new System.Data.DataColumn("TIPO_INC_C_SIS_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INC_C_SIS_NOMBRE);
                this.columnTIPO_INC_C_SIS_ABR = new System.Data.DataColumn("TIPO_INC_C_SIS_ABR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INC_C_SIS_ABR);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTIPO_INC_C_SIS_ID}, true));
                this.columnTIPO_INC_C_SIS_ID.AllowDBNull = false;
                this.columnTIPO_INC_C_SIS_ID.Unique = true;
                this.columnTIPO_INC_C_SIS_NOMBRE.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_COMIDA_SISRow NewEC_TIPO_INC_COMIDA_SISRow() {
                return ((EC_TIPO_INC_COMIDA_SISRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_TIPO_INC_COMIDA_SISRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_TIPO_INC_COMIDA_SISRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_TIPO_INC_COMIDA_SISRowChanged != null)) {
                    this.EC_TIPO_INC_COMIDA_SISRowChanged(this, new EC_TIPO_INC_COMIDA_SISRowChangeEvent(((EC_TIPO_INC_COMIDA_SISRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_TIPO_INC_COMIDA_SISRowChanging != null)) {
                    this.EC_TIPO_INC_COMIDA_SISRowChanging(this, new EC_TIPO_INC_COMIDA_SISRowChangeEvent(((EC_TIPO_INC_COMIDA_SISRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_TIPO_INC_COMIDA_SISRowDeleted != null)) {
                    this.EC_TIPO_INC_COMIDA_SISRowDeleted(this, new EC_TIPO_INC_COMIDA_SISRowChangeEvent(((EC_TIPO_INC_COMIDA_SISRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_TIPO_INC_COMIDA_SISRowDeleting != null)) {
                    this.EC_TIPO_INC_COMIDA_SISRowDeleting(this, new EC_TIPO_INC_COMIDA_SISRowChangeEvent(((EC_TIPO_INC_COMIDA_SISRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_TIPO_INC_COMIDA_SISRow(EC_TIPO_INC_COMIDA_SISRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_TiposIncidencias ds = new DS_TiposIncidencias();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_TIPO_INC_COMIDA_SISDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_TIPO_INC_SISDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTIPO_INC_SIS_ABR;
            
            private System.Data.DataColumn columnTIPO_INC_SIS_NOMBRE;
            
            private System.Data.DataColumn columnTIPO_INC_SIS_ID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_SISDataTable() {
                this.TableName = "EC_TIPO_INC_SIS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_INC_SISDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_TIPO_INC_SISDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INC_SIS_ABRColumn {
                get {
                    return this.columnTIPO_INC_SIS_ABR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INC_SIS_NOMBREColumn {
                get {
                    return this.columnTIPO_INC_SIS_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INC_SIS_IDColumn {
                get {
                    return this.columnTIPO_INC_SIS_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_SISRow this[int index] {
                get {
                    return ((EC_TIPO_INC_SISRow)(this.Rows[index]));
                }
            }
            
            public event EC_TIPO_INC_SISRowChangeEventHandler EC_TIPO_INC_SISRowChanging;
            
            public event EC_TIPO_INC_SISRowChangeEventHandler EC_TIPO_INC_SISRowChanged;
            
            public event EC_TIPO_INC_SISRowChangeEventHandler EC_TIPO_INC_SISRowDeleting;
            
            public event EC_TIPO_INC_SISRowChangeEventHandler EC_TIPO_INC_SISRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_TIPO_INC_SISRow(EC_TIPO_INC_SISRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_SISRow AddEC_TIPO_INC_SISRow(string TIPO_INC_SIS_ABR, string TIPO_INC_SIS_NOMBRE, decimal TIPO_INC_SIS_ID) {
                EC_TIPO_INC_SISRow rowEC_TIPO_INC_SISRow = ((EC_TIPO_INC_SISRow)(this.NewRow()));
                rowEC_TIPO_INC_SISRow.ItemArray = new object[] {
                        TIPO_INC_SIS_ABR,
                        TIPO_INC_SIS_NOMBRE,
                        TIPO_INC_SIS_ID};
                this.Rows.Add(rowEC_TIPO_INC_SISRow);
                return rowEC_TIPO_INC_SISRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_SISRow FindByTIPO_INC_SIS_ID(decimal TIPO_INC_SIS_ID) {
                return ((EC_TIPO_INC_SISRow)(this.Rows.Find(new object[] {
                            TIPO_INC_SIS_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_TIPO_INC_SISDataTable cln = ((EC_TIPO_INC_SISDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_TIPO_INC_SISDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTIPO_INC_SIS_ABR = base.Columns["TIPO_INC_SIS_ABR"];
                this.columnTIPO_INC_SIS_NOMBRE = base.Columns["TIPO_INC_SIS_NOMBRE"];
                this.columnTIPO_INC_SIS_ID = base.Columns["TIPO_INC_SIS_ID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTIPO_INC_SIS_ABR = new System.Data.DataColumn("TIPO_INC_SIS_ABR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INC_SIS_ABR);
                this.columnTIPO_INC_SIS_NOMBRE = new System.Data.DataColumn("TIPO_INC_SIS_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INC_SIS_NOMBRE);
                this.columnTIPO_INC_SIS_ID = new System.Data.DataColumn("TIPO_INC_SIS_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INC_SIS_ID);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTIPO_INC_SIS_ID}, true));
                this.columnTIPO_INC_SIS_NOMBRE.AllowDBNull = false;
                this.columnTIPO_INC_SIS_ID.AllowDBNull = false;
                this.columnTIPO_INC_SIS_ID.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_SISRow NewEC_TIPO_INC_SISRow() {
                return ((EC_TIPO_INC_SISRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_TIPO_INC_SISRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_TIPO_INC_SISRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_TIPO_INC_SISRowChanged != null)) {
                    this.EC_TIPO_INC_SISRowChanged(this, new EC_TIPO_INC_SISRowChangeEvent(((EC_TIPO_INC_SISRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_TIPO_INC_SISRowChanging != null)) {
                    this.EC_TIPO_INC_SISRowChanging(this, new EC_TIPO_INC_SISRowChangeEvent(((EC_TIPO_INC_SISRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_TIPO_INC_SISRowDeleted != null)) {
                    this.EC_TIPO_INC_SISRowDeleted(this, new EC_TIPO_INC_SISRowChangeEvent(((EC_TIPO_INC_SISRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_TIPO_INC_SISRowDeleting != null)) {
                    this.EC_TIPO_INC_SISRowDeleting(this, new EC_TIPO_INC_SISRowChangeEvent(((EC_TIPO_INC_SISRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_TIPO_INC_SISRow(EC_TIPO_INC_SISRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_TiposIncidencias ds = new DS_TiposIncidencias();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_TIPO_INC_SISDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_TIPO_INCIDENCIASDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_ID;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_NOMBRE;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_ABR;
            
            private System.Data.DataColumn columnTIPO_INCIDENCIA_BORRADO;
            
            private System.Data.DataColumn columnSTATUS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASDataTable() {
                this.TableName = "EC_TIPO_INCIDENCIAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_INCIDENCIASDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_TIPO_INCIDENCIASDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_IDColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_NOMBREColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_ABRColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_ABR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIPO_INCIDENCIA_BORRADOColumn {
                get {
                    return this.columnTIPO_INCIDENCIA_BORRADO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRow this[int index] {
                get {
                    return ((EC_TIPO_INCIDENCIASRow)(this.Rows[index]));
                }
            }
            
            public event EC_TIPO_INCIDENCIASRowChangeEventHandler EC_TIPO_INCIDENCIASRowChanging;
            
            public event EC_TIPO_INCIDENCIASRowChangeEventHandler EC_TIPO_INCIDENCIASRowChanged;
            
            public event EC_TIPO_INCIDENCIASRowChangeEventHandler EC_TIPO_INCIDENCIASRowDeleting;
            
            public event EC_TIPO_INCIDENCIASRowChangeEventHandler EC_TIPO_INCIDENCIASRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_TIPO_INCIDENCIASRow(EC_TIPO_INCIDENCIASRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRow AddEC_TIPO_INCIDENCIASRow(decimal TIPO_INCIDENCIA_ID, string TIPO_INCIDENCIA_NOMBRE, string TIPO_INCIDENCIA_ABR, decimal TIPO_INCIDENCIA_BORRADO, string STATUS) {
                EC_TIPO_INCIDENCIASRow rowEC_TIPO_INCIDENCIASRow = ((EC_TIPO_INCIDENCIASRow)(this.NewRow()));
                rowEC_TIPO_INCIDENCIASRow.ItemArray = new object[] {
                        TIPO_INCIDENCIA_ID,
                        TIPO_INCIDENCIA_NOMBRE,
                        TIPO_INCIDENCIA_ABR,
                        TIPO_INCIDENCIA_BORRADO,
                        STATUS};
                this.Rows.Add(rowEC_TIPO_INCIDENCIASRow);
                return rowEC_TIPO_INCIDENCIASRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRow FindByTIPO_INCIDENCIA_ID(decimal TIPO_INCIDENCIA_ID) {
                return ((EC_TIPO_INCIDENCIASRow)(this.Rows.Find(new object[] {
                            TIPO_INCIDENCIA_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_TIPO_INCIDENCIASDataTable cln = ((EC_TIPO_INCIDENCIASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_TIPO_INCIDENCIASDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTIPO_INCIDENCIA_ID = base.Columns["TIPO_INCIDENCIA_ID"];
                this.columnTIPO_INCIDENCIA_NOMBRE = base.Columns["TIPO_INCIDENCIA_NOMBRE"];
                this.columnTIPO_INCIDENCIA_ABR = base.Columns["TIPO_INCIDENCIA_ABR"];
                this.columnTIPO_INCIDENCIA_BORRADO = base.Columns["TIPO_INCIDENCIA_BORRADO"];
                this.columnSTATUS = base.Columns["STATUS"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTIPO_INCIDENCIA_ID = new System.Data.DataColumn("TIPO_INCIDENCIA_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_ID);
                this.columnTIPO_INCIDENCIA_NOMBRE = new System.Data.DataColumn("TIPO_INCIDENCIA_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_NOMBRE);
                this.columnTIPO_INCIDENCIA_ABR = new System.Data.DataColumn("TIPO_INCIDENCIA_ABR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_ABR);
                this.columnTIPO_INCIDENCIA_BORRADO = new System.Data.DataColumn("TIPO_INCIDENCIA_BORRADO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_INCIDENCIA_BORRADO);
                this.columnSTATUS = new System.Data.DataColumn("STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTIPO_INCIDENCIA_ID}, true));
                this.columnTIPO_INCIDENCIA_ID.AllowDBNull = false;
                this.columnTIPO_INCIDENCIA_ID.Unique = true;
                this.columnTIPO_INCIDENCIA_NOMBRE.AllowDBNull = false;
                this.columnSTATUS.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRow NewEC_TIPO_INCIDENCIASRow() {
                return ((EC_TIPO_INCIDENCIASRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_TIPO_INCIDENCIASRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_TIPO_INCIDENCIASRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_TIPO_INCIDENCIASRowChanged != null)) {
                    this.EC_TIPO_INCIDENCIASRowChanged(this, new EC_TIPO_INCIDENCIASRowChangeEvent(((EC_TIPO_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_TIPO_INCIDENCIASRowChanging != null)) {
                    this.EC_TIPO_INCIDENCIASRowChanging(this, new EC_TIPO_INCIDENCIASRowChangeEvent(((EC_TIPO_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_TIPO_INCIDENCIASRowDeleted != null)) {
                    this.EC_TIPO_INCIDENCIASRowDeleted(this, new EC_TIPO_INCIDENCIASRowChangeEvent(((EC_TIPO_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_TIPO_INCIDENCIASRowDeleting != null)) {
                    this.EC_TIPO_INCIDENCIASRowDeleting(this, new EC_TIPO_INCIDENCIASRowChangeEvent(((EC_TIPO_INCIDENCIASRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_TIPO_INCIDENCIASRow(EC_TIPO_INCIDENCIASRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_TiposIncidencias ds = new DS_TiposIncidencias();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_TIPO_INCIDENCIASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_TIPO_INCIDENCIAS_EdicionRow : System.Data.DataRow {
            
            private EC_TIPO_INCIDENCIAS_EdicionDataTable tableEC_TIPO_INCIDENCIAS_Edicion;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_INCIDENCIAS_EdicionRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_TIPO_INCIDENCIAS_Edicion = ((EC_TIPO_INCIDENCIAS_EdicionDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_INCIDENCIA_ID {
                get {
                    return ((decimal)(this[this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_IDColumn]));
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INCIDENCIA_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INCIDENCIA_ABR {
                get {
                    try {
                        return ((string)(this[this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_ABRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TIPO_INCIDENCIA_ABR\' de la tabla \'EC_TIPO_INCIDENCIAS_Ed" +
                                "icion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_ABRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_INCIDENCIA_BORRADO {
                get {
                    try {
                        return ((decimal)(this[this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_BORRADOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TIPO_INCIDENCIA_BORRADO\' de la tabla \'EC_TIPO_INCIDENCIA" +
                                "S_Edicion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_BORRADOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_INCIDENCIA_ABRNull() {
                return this.IsNull(this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_ABRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_INCIDENCIA_ABRNull() {
                this[this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_ABRColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_INCIDENCIA_BORRADONull() {
                return this.IsNull(this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_BORRADOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_INCIDENCIA_BORRADONull() {
                this[this.tableEC_TIPO_INCIDENCIAS_Edicion.TIPO_INCIDENCIA_BORRADOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_TIPO_INC_COMIDA_SISRow : System.Data.DataRow {
            
            private EC_TIPO_INC_COMIDA_SISDataTable tableEC_TIPO_INC_COMIDA_SIS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_INC_COMIDA_SISRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_TIPO_INC_COMIDA_SIS = ((EC_TIPO_INC_COMIDA_SISDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_INC_C_SIS_ID {
                get {
                    return ((decimal)(this[this.tableEC_TIPO_INC_COMIDA_SIS.TIPO_INC_C_SIS_IDColumn]));
                }
                set {
                    this[this.tableEC_TIPO_INC_COMIDA_SIS.TIPO_INC_C_SIS_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INC_C_SIS_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_TIPO_INC_COMIDA_SIS.TIPO_INC_C_SIS_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_TIPO_INC_COMIDA_SIS.TIPO_INC_C_SIS_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INC_C_SIS_ABR {
                get {
                    try {
                        return ((string)(this[this.tableEC_TIPO_INC_COMIDA_SIS.TIPO_INC_C_SIS_ABRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TIPO_INC_C_SIS_ABR\' de la tabla \'EC_TIPO_INC_COMIDA_SIS\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TIPO_INC_COMIDA_SIS.TIPO_INC_C_SIS_ABRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_INC_C_SIS_ABRNull() {
                return this.IsNull(this.tableEC_TIPO_INC_COMIDA_SIS.TIPO_INC_C_SIS_ABRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_INC_C_SIS_ABRNull() {
                this[this.tableEC_TIPO_INC_COMIDA_SIS.TIPO_INC_C_SIS_ABRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_TIPO_INC_SISRow : System.Data.DataRow {
            
            private EC_TIPO_INC_SISDataTable tableEC_TIPO_INC_SIS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_INC_SISRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_TIPO_INC_SIS = ((EC_TIPO_INC_SISDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INC_SIS_ABR {
                get {
                    try {
                        return ((string)(this[this.tableEC_TIPO_INC_SIS.TIPO_INC_SIS_ABRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TIPO_INC_SIS_ABR\' de la tabla \'EC_TIPO_INC_SIS\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableEC_TIPO_INC_SIS.TIPO_INC_SIS_ABRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INC_SIS_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_TIPO_INC_SIS.TIPO_INC_SIS_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_TIPO_INC_SIS.TIPO_INC_SIS_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_INC_SIS_ID {
                get {
                    return ((decimal)(this[this.tableEC_TIPO_INC_SIS.TIPO_INC_SIS_IDColumn]));
                }
                set {
                    this[this.tableEC_TIPO_INC_SIS.TIPO_INC_SIS_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_INC_SIS_ABRNull() {
                return this.IsNull(this.tableEC_TIPO_INC_SIS.TIPO_INC_SIS_ABRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_INC_SIS_ABRNull() {
                this[this.tableEC_TIPO_INC_SIS.TIPO_INC_SIS_ABRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_TIPO_INCIDENCIASRow : System.Data.DataRow {
            
            private EC_TIPO_INCIDENCIASDataTable tableEC_TIPO_INCIDENCIAS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_TIPO_INCIDENCIASRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_TIPO_INCIDENCIAS = ((EC_TIPO_INCIDENCIASDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_INCIDENCIA_ID {
                get {
                    return ((decimal)(this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_IDColumn]));
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INCIDENCIA_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_INCIDENCIA_ABR {
                get {
                    try {
                        return ((string)(this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_ABRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TIPO_INCIDENCIA_ABR\' de la tabla \'EC_TIPO_INCIDENCIAS\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_ABRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIPO_INCIDENCIA_BORRADO {
                get {
                    try {
                        return ((decimal)(this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_BORRADOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TIPO_INCIDENCIA_BORRADO\' de la tabla \'EC_TIPO_INCIDENCIA" +
                                "S\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_BORRADOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableEC_TIPO_INCIDENCIAS.STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'STATUS\' de la tabla \'EC_TIPO_INCIDENCIAS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_TIPO_INCIDENCIAS.STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_INCIDENCIA_ABRNull() {
                return this.IsNull(this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_ABRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_INCIDENCIA_ABRNull() {
                this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_ABRColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_INCIDENCIA_BORRADONull() {
                return this.IsNull(this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_BORRADOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_INCIDENCIA_BORRADONull() {
                this[this.tableEC_TIPO_INCIDENCIAS.TIPO_INCIDENCIA_BORRADOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableEC_TIPO_INCIDENCIAS.STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableEC_TIPO_INCIDENCIAS.STATUSColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_TIPO_INCIDENCIAS_EdicionRowChangeEvent : System.EventArgs {
            
            private EC_TIPO_INCIDENCIAS_EdicionRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIAS_EdicionRowChangeEvent(EC_TIPO_INCIDENCIAS_EdicionRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIAS_EdicionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_TIPO_INC_COMIDA_SISRowChangeEvent : System.EventArgs {
            
            private EC_TIPO_INC_COMIDA_SISRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_COMIDA_SISRowChangeEvent(EC_TIPO_INC_COMIDA_SISRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_COMIDA_SISRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_TIPO_INC_SISRowChangeEvent : System.EventArgs {
            
            private EC_TIPO_INC_SISRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_SISRowChangeEvent(EC_TIPO_INC_SISRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INC_SISRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_TIPO_INCIDENCIASRowChangeEvent : System.EventArgs {
            
            private EC_TIPO_INCIDENCIASRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRowChangeEvent(EC_TIPO_INCIDENCIASRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_TIPO_INCIDENCIASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591