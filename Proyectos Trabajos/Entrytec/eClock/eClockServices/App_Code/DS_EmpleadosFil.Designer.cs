//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.42
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eClock {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DS_EmpleadosFil")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_EmpleadosFil : System.Data.DataSet {
        
        private EC_PERSONAS_DATOS_DATCCTDataTable tableEC_PERSONAS_DATOS_DATCCT;
        
        private EC_PERSONAS_DATOS_DATDEPDataTable tableEC_PERSONAS_DATOS_DATDEP;
        
        private EC_PERSONAS_DATOS_CNOCVEDataTable tableEC_PERSONAS_DATOS_CNOCVE;
        
        private EC_PERSONAS_DATOS_CIACVEDataTable tableEC_PERSONAS_DATOS_CIACVE;
        
        private EC_PERSONAS_DATOS_NSDataTable tableEC_PERSONAS_DATOS_NS;
        
        private EC_PERSONAS_DATOSDataTable tableEC_PERSONAS_DATOS;
        
        private EC_PERSONAS_DATOS_DATAREDataTable tableEC_PERSONAS_DATOS_DATARE;
        
        private EC_PERSONAS_DATOS_TERMINALESDataTable tableEC_PERSONAS_DATOS_TERMINALES;
        
        private EC_PERSONAS_DATOS_GRUPOSDataTable tableEC_PERSONAS_DATOS_GRUPOS;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_EmpleadosFil() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_EmpleadosFil(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["EC_PERSONAS_DATOS_DATCCT"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_DATCCTDataTable(ds.Tables["EC_PERSONAS_DATOS_DATCCT"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_DATDEP"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_DATDEPDataTable(ds.Tables["EC_PERSONAS_DATOS_DATDEP"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_CNOCVE"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_CNOCVEDataTable(ds.Tables["EC_PERSONAS_DATOS_CNOCVE"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_CIACVE"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_CIACVEDataTable(ds.Tables["EC_PERSONAS_DATOS_CIACVE"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_NS"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_NSDataTable(ds.Tables["EC_PERSONAS_DATOS_NS"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOSDataTable(ds.Tables["EC_PERSONAS_DATOS"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_DATARE"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_DATAREDataTable(ds.Tables["EC_PERSONAS_DATOS_DATARE"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_TERMINALES"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_TERMINALESDataTable(ds.Tables["EC_PERSONAS_DATOS_TERMINALES"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_GRUPOS"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_GRUPOSDataTable(ds.Tables["EC_PERSONAS_DATOS_GRUPOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DATOS_DATCCTDataTable EC_PERSONAS_DATOS_DATCCT {
            get {
                return this.tableEC_PERSONAS_DATOS_DATCCT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DATOS_DATDEPDataTable EC_PERSONAS_DATOS_DATDEP {
            get {
                return this.tableEC_PERSONAS_DATOS_DATDEP;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DATOS_CNOCVEDataTable EC_PERSONAS_DATOS_CNOCVE {
            get {
                return this.tableEC_PERSONAS_DATOS_CNOCVE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DATOS_CIACVEDataTable EC_PERSONAS_DATOS_CIACVE {
            get {
                return this.tableEC_PERSONAS_DATOS_CIACVE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DATOS_NSDataTable EC_PERSONAS_DATOS_NS {
            get {
                return this.tableEC_PERSONAS_DATOS_NS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DATOSDataTable EC_PERSONAS_DATOS {
            get {
                return this.tableEC_PERSONAS_DATOS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DATOS_DATAREDataTable EC_PERSONAS_DATOS_DATARE {
            get {
                return this.tableEC_PERSONAS_DATOS_DATARE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DATOS_TERMINALESDataTable EC_PERSONAS_DATOS_TERMINALES {
            get {
                return this.tableEC_PERSONAS_DATOS_TERMINALES;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EC_PERSONAS_DATOS_GRUPOSDataTable EC_PERSONAS_DATOS_GRUPOS {
            get {
                return this.tableEC_PERSONAS_DATOS_GRUPOS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DS_EmpleadosFil cln = ((DS_EmpleadosFil)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EC_PERSONAS_DATOS_DATCCT"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_DATCCTDataTable(ds.Tables["EC_PERSONAS_DATOS_DATCCT"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_DATDEP"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_DATDEPDataTable(ds.Tables["EC_PERSONAS_DATOS_DATDEP"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_CNOCVE"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_CNOCVEDataTable(ds.Tables["EC_PERSONAS_DATOS_CNOCVE"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_CIACVE"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_CIACVEDataTable(ds.Tables["EC_PERSONAS_DATOS_CIACVE"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_NS"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_NSDataTable(ds.Tables["EC_PERSONAS_DATOS_NS"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOSDataTable(ds.Tables["EC_PERSONAS_DATOS"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_DATARE"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_DATAREDataTable(ds.Tables["EC_PERSONAS_DATOS_DATARE"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_TERMINALES"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_TERMINALESDataTable(ds.Tables["EC_PERSONAS_DATOS_TERMINALES"]));
                }
                if ((ds.Tables["EC_PERSONAS_DATOS_GRUPOS"] != null)) {
                    base.Tables.Add(new EC_PERSONAS_DATOS_GRUPOSDataTable(ds.Tables["EC_PERSONAS_DATOS_GRUPOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableEC_PERSONAS_DATOS_DATCCT = ((EC_PERSONAS_DATOS_DATCCTDataTable)(base.Tables["EC_PERSONAS_DATOS_DATCCT"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DATOS_DATCCT != null)) {
                    this.tableEC_PERSONAS_DATOS_DATCCT.InitVars();
                }
            }
            this.tableEC_PERSONAS_DATOS_DATDEP = ((EC_PERSONAS_DATOS_DATDEPDataTable)(base.Tables["EC_PERSONAS_DATOS_DATDEP"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DATOS_DATDEP != null)) {
                    this.tableEC_PERSONAS_DATOS_DATDEP.InitVars();
                }
            }
            this.tableEC_PERSONAS_DATOS_CNOCVE = ((EC_PERSONAS_DATOS_CNOCVEDataTable)(base.Tables["EC_PERSONAS_DATOS_CNOCVE"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DATOS_CNOCVE != null)) {
                    this.tableEC_PERSONAS_DATOS_CNOCVE.InitVars();
                }
            }
            this.tableEC_PERSONAS_DATOS_CIACVE = ((EC_PERSONAS_DATOS_CIACVEDataTable)(base.Tables["EC_PERSONAS_DATOS_CIACVE"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DATOS_CIACVE != null)) {
                    this.tableEC_PERSONAS_DATOS_CIACVE.InitVars();
                }
            }
            this.tableEC_PERSONAS_DATOS_NS = ((EC_PERSONAS_DATOS_NSDataTable)(base.Tables["EC_PERSONAS_DATOS_NS"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DATOS_NS != null)) {
                    this.tableEC_PERSONAS_DATOS_NS.InitVars();
                }
            }
            this.tableEC_PERSONAS_DATOS = ((EC_PERSONAS_DATOSDataTable)(base.Tables["EC_PERSONAS_DATOS"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DATOS != null)) {
                    this.tableEC_PERSONAS_DATOS.InitVars();
                }
            }
            this.tableEC_PERSONAS_DATOS_DATARE = ((EC_PERSONAS_DATOS_DATAREDataTable)(base.Tables["EC_PERSONAS_DATOS_DATARE"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DATOS_DATARE != null)) {
                    this.tableEC_PERSONAS_DATOS_DATARE.InitVars();
                }
            }
            this.tableEC_PERSONAS_DATOS_TERMINALES = ((EC_PERSONAS_DATOS_TERMINALESDataTable)(base.Tables["EC_PERSONAS_DATOS_TERMINALES"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DATOS_TERMINALES != null)) {
                    this.tableEC_PERSONAS_DATOS_TERMINALES.InitVars();
                }
            }
            this.tableEC_PERSONAS_DATOS_GRUPOS = ((EC_PERSONAS_DATOS_GRUPOSDataTable)(base.Tables["EC_PERSONAS_DATOS_GRUPOS"]));
            if ((initTable == true)) {
                if ((this.tableEC_PERSONAS_DATOS_GRUPOS != null)) {
                    this.tableEC_PERSONAS_DATOS_GRUPOS.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_EmpleadosFil";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DS_EmpleadosFil.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-MX");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEC_PERSONAS_DATOS_DATCCT = new EC_PERSONAS_DATOS_DATCCTDataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DATOS_DATCCT);
            this.tableEC_PERSONAS_DATOS_DATDEP = new EC_PERSONAS_DATOS_DATDEPDataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DATOS_DATDEP);
            this.tableEC_PERSONAS_DATOS_CNOCVE = new EC_PERSONAS_DATOS_CNOCVEDataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DATOS_CNOCVE);
            this.tableEC_PERSONAS_DATOS_CIACVE = new EC_PERSONAS_DATOS_CIACVEDataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DATOS_CIACVE);
            this.tableEC_PERSONAS_DATOS_NS = new EC_PERSONAS_DATOS_NSDataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DATOS_NS);
            this.tableEC_PERSONAS_DATOS = new EC_PERSONAS_DATOSDataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DATOS);
            this.tableEC_PERSONAS_DATOS_DATARE = new EC_PERSONAS_DATOS_DATAREDataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DATOS_DATARE);
            this.tableEC_PERSONAS_DATOS_TERMINALES = new EC_PERSONAS_DATOS_TERMINALESDataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DATOS_TERMINALES);
            this.tableEC_PERSONAS_DATOS_GRUPOS = new EC_PERSONAS_DATOS_GRUPOSDataTable();
            base.Tables.Add(this.tableEC_PERSONAS_DATOS_GRUPOS);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DATOS_DATCCT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DATOS_DATDEP() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DATOS_CNOCVE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DATOS_CIACVE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DATOS_NS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DATOS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DATOS_DATARE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DATOS_TERMINALES() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEC_PERSONAS_DATOS_GRUPOS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DS_EmpleadosFil ds = new DS_EmpleadosFil();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void EC_PERSONAS_DATOS_DATCCTRowChangeEventHandler(object sender, EC_PERSONAS_DATOS_DATCCTRowChangeEvent e);
        
        public delegate void EC_PERSONAS_DATOS_DATDEPRowChangeEventHandler(object sender, EC_PERSONAS_DATOS_DATDEPRowChangeEvent e);
        
        public delegate void EC_PERSONAS_DATOS_CNOCVERowChangeEventHandler(object sender, EC_PERSONAS_DATOS_CNOCVERowChangeEvent e);
        
        public delegate void EC_PERSONAS_DATOS_CIACVERowChangeEventHandler(object sender, EC_PERSONAS_DATOS_CIACVERowChangeEvent e);
        
        public delegate void EC_PERSONAS_DATOS_NSRowChangeEventHandler(object sender, EC_PERSONAS_DATOS_NSRowChangeEvent e);
        
        public delegate void EC_PERSONAS_DATOSRowChangeEventHandler(object sender, EC_PERSONAS_DATOSRowChangeEvent e);
        
        public delegate void EC_PERSONAS_DATOS_DATARERowChangeEventHandler(object sender, EC_PERSONAS_DATOS_DATARERowChangeEvent e);
        
        public delegate void EC_PERSONAS_DATOS_TERMINALESRowChangeEventHandler(object sender, EC_PERSONAS_DATOS_TERMINALESRowChangeEvent e);
        
        public delegate void EC_PERSONAS_DATOS_GRUPOSRowChangeEventHandler(object sender, EC_PERSONAS_DATOS_GRUPOSRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DATOS_DATCCTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDATCCT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATCCTDataTable() {
                this.TableName = "EC_PERSONAS_DATOS_DATCCT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_DATCCTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DATOS_DATCCTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATCCTColumn {
                get {
                    return this.columnDATCCT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATCCTRow this[int index] {
                get {
                    return ((EC_PERSONAS_DATOS_DATCCTRow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DATOS_DATCCTRowChangeEventHandler EC_PERSONAS_DATOS_DATCCTRowChanging;
            
            public event EC_PERSONAS_DATOS_DATCCTRowChangeEventHandler EC_PERSONAS_DATOS_DATCCTRowChanged;
            
            public event EC_PERSONAS_DATOS_DATCCTRowChangeEventHandler EC_PERSONAS_DATOS_DATCCTRowDeleting;
            
            public event EC_PERSONAS_DATOS_DATCCTRowChangeEventHandler EC_PERSONAS_DATOS_DATCCTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DATOS_DATCCTRow(EC_PERSONAS_DATOS_DATCCTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATCCTRow AddEC_PERSONAS_DATOS_DATCCTRow(string DATCCT) {
                EC_PERSONAS_DATOS_DATCCTRow rowEC_PERSONAS_DATOS_DATCCTRow = ((EC_PERSONAS_DATOS_DATCCTRow)(this.NewRow()));
                rowEC_PERSONAS_DATOS_DATCCTRow.ItemArray = new object[] {
                        DATCCT};
                this.Rows.Add(rowEC_PERSONAS_DATOS_DATCCTRow);
                return rowEC_PERSONAS_DATOS_DATCCTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DATOS_DATCCTDataTable cln = ((EC_PERSONAS_DATOS_DATCCTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DATOS_DATCCTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDATCCT = base.Columns["DATCCT"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDATCCT = new System.Data.DataColumn("DATCCT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATCCT);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATCCTRow NewEC_PERSONAS_DATOS_DATCCTRow() {
                return ((EC_PERSONAS_DATOS_DATCCTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DATOS_DATCCTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DATOS_DATCCTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DATOS_DATCCTRowChanged != null)) {
                    this.EC_PERSONAS_DATOS_DATCCTRowChanged(this, new EC_PERSONAS_DATOS_DATCCTRowChangeEvent(((EC_PERSONAS_DATOS_DATCCTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DATOS_DATCCTRowChanging != null)) {
                    this.EC_PERSONAS_DATOS_DATCCTRowChanging(this, new EC_PERSONAS_DATOS_DATCCTRowChangeEvent(((EC_PERSONAS_DATOS_DATCCTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DATOS_DATCCTRowDeleted != null)) {
                    this.EC_PERSONAS_DATOS_DATCCTRowDeleted(this, new EC_PERSONAS_DATOS_DATCCTRowChangeEvent(((EC_PERSONAS_DATOS_DATCCTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DATOS_DATCCTRowDeleting != null)) {
                    this.EC_PERSONAS_DATOS_DATCCTRowDeleting(this, new EC_PERSONAS_DATOS_DATCCTRowChangeEvent(((EC_PERSONAS_DATOS_DATCCTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DATOS_DATCCTRow(EC_PERSONAS_DATOS_DATCCTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_EmpleadosFil ds = new DS_EmpleadosFil();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DATOS_DATCCTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DATOS_DATDEPDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDATDEP;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATDEPDataTable() {
                this.TableName = "EC_PERSONAS_DATOS_DATDEP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_DATDEPDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DATOS_DATDEPDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATDEPColumn {
                get {
                    return this.columnDATDEP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATDEPRow this[int index] {
                get {
                    return ((EC_PERSONAS_DATOS_DATDEPRow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DATOS_DATDEPRowChangeEventHandler EC_PERSONAS_DATOS_DATDEPRowChanging;
            
            public event EC_PERSONAS_DATOS_DATDEPRowChangeEventHandler EC_PERSONAS_DATOS_DATDEPRowChanged;
            
            public event EC_PERSONAS_DATOS_DATDEPRowChangeEventHandler EC_PERSONAS_DATOS_DATDEPRowDeleting;
            
            public event EC_PERSONAS_DATOS_DATDEPRowChangeEventHandler EC_PERSONAS_DATOS_DATDEPRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DATOS_DATDEPRow(EC_PERSONAS_DATOS_DATDEPRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATDEPRow AddEC_PERSONAS_DATOS_DATDEPRow(string DATDEP) {
                EC_PERSONAS_DATOS_DATDEPRow rowEC_PERSONAS_DATOS_DATDEPRow = ((EC_PERSONAS_DATOS_DATDEPRow)(this.NewRow()));
                rowEC_PERSONAS_DATOS_DATDEPRow.ItemArray = new object[] {
                        DATDEP};
                this.Rows.Add(rowEC_PERSONAS_DATOS_DATDEPRow);
                return rowEC_PERSONAS_DATOS_DATDEPRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DATOS_DATDEPDataTable cln = ((EC_PERSONAS_DATOS_DATDEPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DATOS_DATDEPDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDATDEP = base.Columns["DATDEP"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDATDEP = new System.Data.DataColumn("DATDEP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATDEP);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATDEPRow NewEC_PERSONAS_DATOS_DATDEPRow() {
                return ((EC_PERSONAS_DATOS_DATDEPRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DATOS_DATDEPRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DATOS_DATDEPRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DATOS_DATDEPRowChanged != null)) {
                    this.EC_PERSONAS_DATOS_DATDEPRowChanged(this, new EC_PERSONAS_DATOS_DATDEPRowChangeEvent(((EC_PERSONAS_DATOS_DATDEPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DATOS_DATDEPRowChanging != null)) {
                    this.EC_PERSONAS_DATOS_DATDEPRowChanging(this, new EC_PERSONAS_DATOS_DATDEPRowChangeEvent(((EC_PERSONAS_DATOS_DATDEPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DATOS_DATDEPRowDeleted != null)) {
                    this.EC_PERSONAS_DATOS_DATDEPRowDeleted(this, new EC_PERSONAS_DATOS_DATDEPRowChangeEvent(((EC_PERSONAS_DATOS_DATDEPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DATOS_DATDEPRowDeleting != null)) {
                    this.EC_PERSONAS_DATOS_DATDEPRowDeleting(this, new EC_PERSONAS_DATOS_DATDEPRowChangeEvent(((EC_PERSONAS_DATOS_DATDEPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DATOS_DATDEPRow(EC_PERSONAS_DATOS_DATDEPRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_EmpleadosFil ds = new DS_EmpleadosFil();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DATOS_DATDEPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DATOS_CNOCVEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCNOCVE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CNOCVEDataTable() {
                this.TableName = "EC_PERSONAS_DATOS_CNOCVE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_CNOCVEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DATOS_CNOCVEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CNOCVEColumn {
                get {
                    return this.columnCNOCVE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CNOCVERow this[int index] {
                get {
                    return ((EC_PERSONAS_DATOS_CNOCVERow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DATOS_CNOCVERowChangeEventHandler EC_PERSONAS_DATOS_CNOCVERowChanging;
            
            public event EC_PERSONAS_DATOS_CNOCVERowChangeEventHandler EC_PERSONAS_DATOS_CNOCVERowChanged;
            
            public event EC_PERSONAS_DATOS_CNOCVERowChangeEventHandler EC_PERSONAS_DATOS_CNOCVERowDeleting;
            
            public event EC_PERSONAS_DATOS_CNOCVERowChangeEventHandler EC_PERSONAS_DATOS_CNOCVERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DATOS_CNOCVERow(EC_PERSONAS_DATOS_CNOCVERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CNOCVERow AddEC_PERSONAS_DATOS_CNOCVERow(string CNOCVE) {
                EC_PERSONAS_DATOS_CNOCVERow rowEC_PERSONAS_DATOS_CNOCVERow = ((EC_PERSONAS_DATOS_CNOCVERow)(this.NewRow()));
                rowEC_PERSONAS_DATOS_CNOCVERow.ItemArray = new object[] {
                        CNOCVE};
                this.Rows.Add(rowEC_PERSONAS_DATOS_CNOCVERow);
                return rowEC_PERSONAS_DATOS_CNOCVERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DATOS_CNOCVEDataTable cln = ((EC_PERSONAS_DATOS_CNOCVEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DATOS_CNOCVEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCNOCVE = base.Columns["CNOCVE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCNOCVE = new System.Data.DataColumn("CNOCVE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNOCVE);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CNOCVERow NewEC_PERSONAS_DATOS_CNOCVERow() {
                return ((EC_PERSONAS_DATOS_CNOCVERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DATOS_CNOCVERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DATOS_CNOCVERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DATOS_CNOCVERowChanged != null)) {
                    this.EC_PERSONAS_DATOS_CNOCVERowChanged(this, new EC_PERSONAS_DATOS_CNOCVERowChangeEvent(((EC_PERSONAS_DATOS_CNOCVERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DATOS_CNOCVERowChanging != null)) {
                    this.EC_PERSONAS_DATOS_CNOCVERowChanging(this, new EC_PERSONAS_DATOS_CNOCVERowChangeEvent(((EC_PERSONAS_DATOS_CNOCVERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DATOS_CNOCVERowDeleted != null)) {
                    this.EC_PERSONAS_DATOS_CNOCVERowDeleted(this, new EC_PERSONAS_DATOS_CNOCVERowChangeEvent(((EC_PERSONAS_DATOS_CNOCVERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DATOS_CNOCVERowDeleting != null)) {
                    this.EC_PERSONAS_DATOS_CNOCVERowDeleting(this, new EC_PERSONAS_DATOS_CNOCVERowChangeEvent(((EC_PERSONAS_DATOS_CNOCVERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DATOS_CNOCVERow(EC_PERSONAS_DATOS_CNOCVERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_EmpleadosFil ds = new DS_EmpleadosFil();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DATOS_CNOCVEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DATOS_CIACVEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCIACVE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CIACVEDataTable() {
                this.TableName = "EC_PERSONAS_DATOS_CIACVE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_CIACVEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DATOS_CIACVEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CIACVEColumn {
                get {
                    return this.columnCIACVE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CIACVERow this[int index] {
                get {
                    return ((EC_PERSONAS_DATOS_CIACVERow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DATOS_CIACVERowChangeEventHandler EC_PERSONAS_DATOS_CIACVERowChanging;
            
            public event EC_PERSONAS_DATOS_CIACVERowChangeEventHandler EC_PERSONAS_DATOS_CIACVERowChanged;
            
            public event EC_PERSONAS_DATOS_CIACVERowChangeEventHandler EC_PERSONAS_DATOS_CIACVERowDeleting;
            
            public event EC_PERSONAS_DATOS_CIACVERowChangeEventHandler EC_PERSONAS_DATOS_CIACVERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DATOS_CIACVERow(EC_PERSONAS_DATOS_CIACVERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CIACVERow AddEC_PERSONAS_DATOS_CIACVERow(string CIACVE) {
                EC_PERSONAS_DATOS_CIACVERow rowEC_PERSONAS_DATOS_CIACVERow = ((EC_PERSONAS_DATOS_CIACVERow)(this.NewRow()));
                rowEC_PERSONAS_DATOS_CIACVERow.ItemArray = new object[] {
                        CIACVE};
                this.Rows.Add(rowEC_PERSONAS_DATOS_CIACVERow);
                return rowEC_PERSONAS_DATOS_CIACVERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DATOS_CIACVEDataTable cln = ((EC_PERSONAS_DATOS_CIACVEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DATOS_CIACVEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCIACVE = base.Columns["CIACVE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCIACVE = new System.Data.DataColumn("CIACVE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIACVE);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CIACVERow NewEC_PERSONAS_DATOS_CIACVERow() {
                return ((EC_PERSONAS_DATOS_CIACVERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DATOS_CIACVERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DATOS_CIACVERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DATOS_CIACVERowChanged != null)) {
                    this.EC_PERSONAS_DATOS_CIACVERowChanged(this, new EC_PERSONAS_DATOS_CIACVERowChangeEvent(((EC_PERSONAS_DATOS_CIACVERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DATOS_CIACVERowChanging != null)) {
                    this.EC_PERSONAS_DATOS_CIACVERowChanging(this, new EC_PERSONAS_DATOS_CIACVERowChangeEvent(((EC_PERSONAS_DATOS_CIACVERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DATOS_CIACVERowDeleted != null)) {
                    this.EC_PERSONAS_DATOS_CIACVERowDeleted(this, new EC_PERSONAS_DATOS_CIACVERowChangeEvent(((EC_PERSONAS_DATOS_CIACVERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DATOS_CIACVERowDeleting != null)) {
                    this.EC_PERSONAS_DATOS_CIACVERowDeleting(this, new EC_PERSONAS_DATOS_CIACVERowChangeEvent(((EC_PERSONAS_DATOS_CIACVERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DATOS_CIACVERow(EC_PERSONAS_DATOS_CIACVERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_EmpleadosFil ds = new DS_EmpleadosFil();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DATOS_CIACVEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DATOS_NSDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnNS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_NSDataTable() {
                this.TableName = "EC_PERSONAS_DATOS_NS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_NSDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DATOS_NSDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NSColumn {
                get {
                    return this.columnNS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_NSRow this[int index] {
                get {
                    return ((EC_PERSONAS_DATOS_NSRow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DATOS_NSRowChangeEventHandler EC_PERSONAS_DATOS_NSRowChanging;
            
            public event EC_PERSONAS_DATOS_NSRowChangeEventHandler EC_PERSONAS_DATOS_NSRowChanged;
            
            public event EC_PERSONAS_DATOS_NSRowChangeEventHandler EC_PERSONAS_DATOS_NSRowDeleting;
            
            public event EC_PERSONAS_DATOS_NSRowChangeEventHandler EC_PERSONAS_DATOS_NSRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DATOS_NSRow(EC_PERSONAS_DATOS_NSRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_NSRow AddEC_PERSONAS_DATOS_NSRow(string NS) {
                EC_PERSONAS_DATOS_NSRow rowEC_PERSONAS_DATOS_NSRow = ((EC_PERSONAS_DATOS_NSRow)(this.NewRow()));
                rowEC_PERSONAS_DATOS_NSRow.ItemArray = new object[] {
                        NS};
                this.Rows.Add(rowEC_PERSONAS_DATOS_NSRow);
                return rowEC_PERSONAS_DATOS_NSRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DATOS_NSDataTable cln = ((EC_PERSONAS_DATOS_NSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DATOS_NSDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNS = base.Columns["NS"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNS = new System.Data.DataColumn("NS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNS);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_NSRow NewEC_PERSONAS_DATOS_NSRow() {
                return ((EC_PERSONAS_DATOS_NSRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DATOS_NSRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DATOS_NSRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DATOS_NSRowChanged != null)) {
                    this.EC_PERSONAS_DATOS_NSRowChanged(this, new EC_PERSONAS_DATOS_NSRowChangeEvent(((EC_PERSONAS_DATOS_NSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DATOS_NSRowChanging != null)) {
                    this.EC_PERSONAS_DATOS_NSRowChanging(this, new EC_PERSONAS_DATOS_NSRowChangeEvent(((EC_PERSONAS_DATOS_NSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DATOS_NSRowDeleted != null)) {
                    this.EC_PERSONAS_DATOS_NSRowDeleted(this, new EC_PERSONAS_DATOS_NSRowChangeEvent(((EC_PERSONAS_DATOS_NSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DATOS_NSRowDeleting != null)) {
                    this.EC_PERSONAS_DATOS_NSRowDeleting(this, new EC_PERSONAS_DATOS_NSRowChangeEvent(((EC_PERSONAS_DATOS_NSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DATOS_NSRow(EC_PERSONAS_DATOS_NSRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_EmpleadosFil ds = new DS_EmpleadosFil();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DATOS_NSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DATOSDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDATDEP;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOSDataTable() {
                this.TableName = "EC_PERSONAS_DATOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOSDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DATOSDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATDEPColumn {
                get {
                    return this.columnDATDEP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOSRow this[int index] {
                get {
                    return ((EC_PERSONAS_DATOSRow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DATOSRowChangeEventHandler EC_PERSONAS_DATOSRowChanging;
            
            public event EC_PERSONAS_DATOSRowChangeEventHandler EC_PERSONAS_DATOSRowChanged;
            
            public event EC_PERSONAS_DATOSRowChangeEventHandler EC_PERSONAS_DATOSRowDeleting;
            
            public event EC_PERSONAS_DATOSRowChangeEventHandler EC_PERSONAS_DATOSRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DATOSRow(EC_PERSONAS_DATOSRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOSRow AddEC_PERSONAS_DATOSRow(string DATDEP) {
                EC_PERSONAS_DATOSRow rowEC_PERSONAS_DATOSRow = ((EC_PERSONAS_DATOSRow)(this.NewRow()));
                rowEC_PERSONAS_DATOSRow.ItemArray = new object[] {
                        DATDEP};
                this.Rows.Add(rowEC_PERSONAS_DATOSRow);
                return rowEC_PERSONAS_DATOSRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DATOSDataTable cln = ((EC_PERSONAS_DATOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DATOSDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDATDEP = base.Columns["DATDEP"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDATDEP = new System.Data.DataColumn("DATDEP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATDEP);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOSRow NewEC_PERSONAS_DATOSRow() {
                return ((EC_PERSONAS_DATOSRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DATOSRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DATOSRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DATOSRowChanged != null)) {
                    this.EC_PERSONAS_DATOSRowChanged(this, new EC_PERSONAS_DATOSRowChangeEvent(((EC_PERSONAS_DATOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DATOSRowChanging != null)) {
                    this.EC_PERSONAS_DATOSRowChanging(this, new EC_PERSONAS_DATOSRowChangeEvent(((EC_PERSONAS_DATOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DATOSRowDeleted != null)) {
                    this.EC_PERSONAS_DATOSRowDeleted(this, new EC_PERSONAS_DATOSRowChangeEvent(((EC_PERSONAS_DATOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DATOSRowDeleting != null)) {
                    this.EC_PERSONAS_DATOSRowDeleting(this, new EC_PERSONAS_DATOSRowChangeEvent(((EC_PERSONAS_DATOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DATOSRow(EC_PERSONAS_DATOSRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_EmpleadosFil ds = new DS_EmpleadosFil();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DATOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DATOS_DATAREDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDATARE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATAREDataTable() {
                this.TableName = "EC_PERSONAS_DATOS_DATARE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_DATAREDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DATOS_DATAREDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATAREColumn {
                get {
                    return this.columnDATARE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATARERow this[int index] {
                get {
                    return ((EC_PERSONAS_DATOS_DATARERow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DATOS_DATARERowChangeEventHandler EC_PERSONAS_DATOS_DATARERowChanging;
            
            public event EC_PERSONAS_DATOS_DATARERowChangeEventHandler EC_PERSONAS_DATOS_DATARERowChanged;
            
            public event EC_PERSONAS_DATOS_DATARERowChangeEventHandler EC_PERSONAS_DATOS_DATARERowDeleting;
            
            public event EC_PERSONAS_DATOS_DATARERowChangeEventHandler EC_PERSONAS_DATOS_DATARERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DATOS_DATARERow(EC_PERSONAS_DATOS_DATARERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATARERow AddEC_PERSONAS_DATOS_DATARERow(string DATARE) {
                EC_PERSONAS_DATOS_DATARERow rowEC_PERSONAS_DATOS_DATARERow = ((EC_PERSONAS_DATOS_DATARERow)(this.NewRow()));
                rowEC_PERSONAS_DATOS_DATARERow.ItemArray = new object[] {
                        DATARE};
                this.Rows.Add(rowEC_PERSONAS_DATOS_DATARERow);
                return rowEC_PERSONAS_DATOS_DATARERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DATOS_DATAREDataTable cln = ((EC_PERSONAS_DATOS_DATAREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DATOS_DATAREDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDATARE = base.Columns["DATARE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDATARE = new System.Data.DataColumn("DATARE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATARE);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATARERow NewEC_PERSONAS_DATOS_DATARERow() {
                return ((EC_PERSONAS_DATOS_DATARERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DATOS_DATARERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DATOS_DATARERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DATOS_DATARERowChanged != null)) {
                    this.EC_PERSONAS_DATOS_DATARERowChanged(this, new EC_PERSONAS_DATOS_DATARERowChangeEvent(((EC_PERSONAS_DATOS_DATARERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DATOS_DATARERowChanging != null)) {
                    this.EC_PERSONAS_DATOS_DATARERowChanging(this, new EC_PERSONAS_DATOS_DATARERowChangeEvent(((EC_PERSONAS_DATOS_DATARERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DATOS_DATARERowDeleted != null)) {
                    this.EC_PERSONAS_DATOS_DATARERowDeleted(this, new EC_PERSONAS_DATOS_DATARERowChangeEvent(((EC_PERSONAS_DATOS_DATARERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DATOS_DATARERowDeleting != null)) {
                    this.EC_PERSONAS_DATOS_DATARERowDeleting(this, new EC_PERSONAS_DATOS_DATARERowChangeEvent(((EC_PERSONAS_DATOS_DATARERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DATOS_DATARERow(EC_PERSONAS_DATOS_DATARERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_EmpleadosFil ds = new DS_EmpleadosFil();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DATOS_DATAREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DATOS_TERMINALESDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTERMINAL_ID;
            
            private System.Data.DataColumn columnTERMINAL_NOMBRE;
            
            private System.Data.DataColumn columnTERMINAL_BORRADO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_TERMINALESDataTable() {
                this.TableName = "EC_PERSONAS_DATOS_TERMINALES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_TERMINALESDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DATOS_TERMINALESDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TERMINAL_IDColumn {
                get {
                    return this.columnTERMINAL_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TERMINAL_NOMBREColumn {
                get {
                    return this.columnTERMINAL_NOMBRE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TERMINAL_BORRADOColumn {
                get {
                    return this.columnTERMINAL_BORRADO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_TERMINALESRow this[int index] {
                get {
                    return ((EC_PERSONAS_DATOS_TERMINALESRow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DATOS_TERMINALESRowChangeEventHandler EC_PERSONAS_DATOS_TERMINALESRowChanging;
            
            public event EC_PERSONAS_DATOS_TERMINALESRowChangeEventHandler EC_PERSONAS_DATOS_TERMINALESRowChanged;
            
            public event EC_PERSONAS_DATOS_TERMINALESRowChangeEventHandler EC_PERSONAS_DATOS_TERMINALESRowDeleting;
            
            public event EC_PERSONAS_DATOS_TERMINALESRowChangeEventHandler EC_PERSONAS_DATOS_TERMINALESRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DATOS_TERMINALESRow(EC_PERSONAS_DATOS_TERMINALESRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_TERMINALESRow AddEC_PERSONAS_DATOS_TERMINALESRow(decimal TERMINAL_ID, string TERMINAL_NOMBRE, decimal TERMINAL_BORRADO) {
                EC_PERSONAS_DATOS_TERMINALESRow rowEC_PERSONAS_DATOS_TERMINALESRow = ((EC_PERSONAS_DATOS_TERMINALESRow)(this.NewRow()));
                rowEC_PERSONAS_DATOS_TERMINALESRow.ItemArray = new object[] {
                        TERMINAL_ID,
                        TERMINAL_NOMBRE,
                        TERMINAL_BORRADO};
                this.Rows.Add(rowEC_PERSONAS_DATOS_TERMINALESRow);
                return rowEC_PERSONAS_DATOS_TERMINALESRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_TERMINALESRow FindByTERMINAL_ID(decimal TERMINAL_ID) {
                return ((EC_PERSONAS_DATOS_TERMINALESRow)(this.Rows.Find(new object[] {
                            TERMINAL_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DATOS_TERMINALESDataTable cln = ((EC_PERSONAS_DATOS_TERMINALESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DATOS_TERMINALESDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTERMINAL_ID = base.Columns["TERMINAL_ID"];
                this.columnTERMINAL_NOMBRE = base.Columns["TERMINAL_NOMBRE"];
                this.columnTERMINAL_BORRADO = base.Columns["TERMINAL_BORRADO"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTERMINAL_ID = new System.Data.DataColumn("TERMINAL_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMINAL_ID);
                this.columnTERMINAL_NOMBRE = new System.Data.DataColumn("TERMINAL_NOMBRE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMINAL_NOMBRE);
                this.columnTERMINAL_BORRADO = new System.Data.DataColumn("TERMINAL_BORRADO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMINAL_BORRADO);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTERMINAL_ID}, true));
                this.columnTERMINAL_ID.AllowDBNull = false;
                this.columnTERMINAL_ID.Unique = true;
                this.columnTERMINAL_NOMBRE.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_TERMINALESRow NewEC_PERSONAS_DATOS_TERMINALESRow() {
                return ((EC_PERSONAS_DATOS_TERMINALESRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DATOS_TERMINALESRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DATOS_TERMINALESRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DATOS_TERMINALESRowChanged != null)) {
                    this.EC_PERSONAS_DATOS_TERMINALESRowChanged(this, new EC_PERSONAS_DATOS_TERMINALESRowChangeEvent(((EC_PERSONAS_DATOS_TERMINALESRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DATOS_TERMINALESRowChanging != null)) {
                    this.EC_PERSONAS_DATOS_TERMINALESRowChanging(this, new EC_PERSONAS_DATOS_TERMINALESRowChangeEvent(((EC_PERSONAS_DATOS_TERMINALESRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DATOS_TERMINALESRowDeleted != null)) {
                    this.EC_PERSONAS_DATOS_TERMINALESRowDeleted(this, new EC_PERSONAS_DATOS_TERMINALESRowChangeEvent(((EC_PERSONAS_DATOS_TERMINALESRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DATOS_TERMINALESRowDeleting != null)) {
                    this.EC_PERSONAS_DATOS_TERMINALESRowDeleting(this, new EC_PERSONAS_DATOS_TERMINALESRowChangeEvent(((EC_PERSONAS_DATOS_TERMINALESRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DATOS_TERMINALESRow(EC_PERSONAS_DATOS_TERMINALESRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_EmpleadosFil ds = new DS_EmpleadosFil();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DATOS_TERMINALESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EC_PERSONAS_DATOS_GRUPOSDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnGRUPO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_GRUPOSDataTable() {
                this.TableName = "EC_PERSONAS_DATOS_GRUPOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_GRUPOSDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EC_PERSONAS_DATOS_GRUPOSDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GRUPOColumn {
                get {
                    return this.columnGRUPO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_GRUPOSRow this[int index] {
                get {
                    return ((EC_PERSONAS_DATOS_GRUPOSRow)(this.Rows[index]));
                }
            }
            
            public event EC_PERSONAS_DATOS_GRUPOSRowChangeEventHandler EC_PERSONAS_DATOS_GRUPOSRowChanging;
            
            public event EC_PERSONAS_DATOS_GRUPOSRowChangeEventHandler EC_PERSONAS_DATOS_GRUPOSRowChanged;
            
            public event EC_PERSONAS_DATOS_GRUPOSRowChangeEventHandler EC_PERSONAS_DATOS_GRUPOSRowDeleting;
            
            public event EC_PERSONAS_DATOS_GRUPOSRowChangeEventHandler EC_PERSONAS_DATOS_GRUPOSRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEC_PERSONAS_DATOS_GRUPOSRow(EC_PERSONAS_DATOS_GRUPOSRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_GRUPOSRow AddEC_PERSONAS_DATOS_GRUPOSRow(string GRUPO) {
                EC_PERSONAS_DATOS_GRUPOSRow rowEC_PERSONAS_DATOS_GRUPOSRow = ((EC_PERSONAS_DATOS_GRUPOSRow)(this.NewRow()));
                rowEC_PERSONAS_DATOS_GRUPOSRow.ItemArray = new object[] {
                        GRUPO};
                this.Rows.Add(rowEC_PERSONAS_DATOS_GRUPOSRow);
                return rowEC_PERSONAS_DATOS_GRUPOSRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EC_PERSONAS_DATOS_GRUPOSDataTable cln = ((EC_PERSONAS_DATOS_GRUPOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EC_PERSONAS_DATOS_GRUPOSDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGRUPO = base.Columns["GRUPO"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGRUPO = new System.Data.DataColumn("GRUPO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRUPO);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_GRUPOSRow NewEC_PERSONAS_DATOS_GRUPOSRow() {
                return ((EC_PERSONAS_DATOS_GRUPOSRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EC_PERSONAS_DATOS_GRUPOSRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EC_PERSONAS_DATOS_GRUPOSRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EC_PERSONAS_DATOS_GRUPOSRowChanged != null)) {
                    this.EC_PERSONAS_DATOS_GRUPOSRowChanged(this, new EC_PERSONAS_DATOS_GRUPOSRowChangeEvent(((EC_PERSONAS_DATOS_GRUPOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EC_PERSONAS_DATOS_GRUPOSRowChanging != null)) {
                    this.EC_PERSONAS_DATOS_GRUPOSRowChanging(this, new EC_PERSONAS_DATOS_GRUPOSRowChangeEvent(((EC_PERSONAS_DATOS_GRUPOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EC_PERSONAS_DATOS_GRUPOSRowDeleted != null)) {
                    this.EC_PERSONAS_DATOS_GRUPOSRowDeleted(this, new EC_PERSONAS_DATOS_GRUPOSRowChangeEvent(((EC_PERSONAS_DATOS_GRUPOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EC_PERSONAS_DATOS_GRUPOSRowDeleting != null)) {
                    this.EC_PERSONAS_DATOS_GRUPOSRowDeleting(this, new EC_PERSONAS_DATOS_GRUPOSRowChangeEvent(((EC_PERSONAS_DATOS_GRUPOSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEC_PERSONAS_DATOS_GRUPOSRow(EC_PERSONAS_DATOS_GRUPOSRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DS_EmpleadosFil ds = new DS_EmpleadosFil();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EC_PERSONAS_DATOS_GRUPOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DATOS_DATCCTRow : System.Data.DataRow {
            
            private EC_PERSONAS_DATOS_DATCCTDataTable tableEC_PERSONAS_DATOS_DATCCT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_DATCCTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DATOS_DATCCT = ((EC_PERSONAS_DATOS_DATCCTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATCCT {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DATOS_DATCCT.DATCCTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DATCCT\' de la tabla \'EC_PERSONAS_DATOS_DATCCT\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DATOS_DATCCT.DATCCTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATCCTNull() {
                return this.IsNull(this.tableEC_PERSONAS_DATOS_DATCCT.DATCCTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATCCTNull() {
                this[this.tableEC_PERSONAS_DATOS_DATCCT.DATCCTColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DATOS_DATDEPRow : System.Data.DataRow {
            
            private EC_PERSONAS_DATOS_DATDEPDataTable tableEC_PERSONAS_DATOS_DATDEP;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_DATDEPRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DATOS_DATDEP = ((EC_PERSONAS_DATOS_DATDEPDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATDEP {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DATOS_DATDEP.DATDEPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DATDEP\' de la tabla \'EC_PERSONAS_DATOS_DATDEP\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DATOS_DATDEP.DATDEPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATDEPNull() {
                return this.IsNull(this.tableEC_PERSONAS_DATOS_DATDEP.DATDEPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATDEPNull() {
                this[this.tableEC_PERSONAS_DATOS_DATDEP.DATDEPColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DATOS_CNOCVERow : System.Data.DataRow {
            
            private EC_PERSONAS_DATOS_CNOCVEDataTable tableEC_PERSONAS_DATOS_CNOCVE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_CNOCVERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DATOS_CNOCVE = ((EC_PERSONAS_DATOS_CNOCVEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNOCVE {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DATOS_CNOCVE.CNOCVEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'CNOCVE\' de la tabla \'EC_PERSONAS_DATOS_CNOCVE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DATOS_CNOCVE.CNOCVEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNOCVENull() {
                return this.IsNull(this.tableEC_PERSONAS_DATOS_CNOCVE.CNOCVEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNOCVENull() {
                this[this.tableEC_PERSONAS_DATOS_CNOCVE.CNOCVEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DATOS_CIACVERow : System.Data.DataRow {
            
            private EC_PERSONAS_DATOS_CIACVEDataTable tableEC_PERSONAS_DATOS_CIACVE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_CIACVERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DATOS_CIACVE = ((EC_PERSONAS_DATOS_CIACVEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CIACVE {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DATOS_CIACVE.CIACVEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'CIACVE\' de la tabla \'EC_PERSONAS_DATOS_CIACVE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DATOS_CIACVE.CIACVEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIACVENull() {
                return this.IsNull(this.tableEC_PERSONAS_DATOS_CIACVE.CIACVEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIACVENull() {
                this[this.tableEC_PERSONAS_DATOS_CIACVE.CIACVEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DATOS_NSRow : System.Data.DataRow {
            
            private EC_PERSONAS_DATOS_NSDataTable tableEC_PERSONAS_DATOS_NS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_NSRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DATOS_NS = ((EC_PERSONAS_DATOS_NSDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NS {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DATOS_NS.NSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'NS\' de la tabla \'EC_PERSONAS_DATOS_NS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DATOS_NS.NSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSNull() {
                return this.IsNull(this.tableEC_PERSONAS_DATOS_NS.NSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSNull() {
                this[this.tableEC_PERSONAS_DATOS_NS.NSColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DATOSRow : System.Data.DataRow {
            
            private EC_PERSONAS_DATOSDataTable tableEC_PERSONAS_DATOS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOSRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DATOS = ((EC_PERSONAS_DATOSDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATDEP {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DATOS.DATDEPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DATDEP\' de la tabla \'EC_PERSONAS_DATOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DATOS.DATDEPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATDEPNull() {
                return this.IsNull(this.tableEC_PERSONAS_DATOS.DATDEPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATDEPNull() {
                this[this.tableEC_PERSONAS_DATOS.DATDEPColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DATOS_DATARERow : System.Data.DataRow {
            
            private EC_PERSONAS_DATOS_DATAREDataTable tableEC_PERSONAS_DATOS_DATARE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_DATARERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DATOS_DATARE = ((EC_PERSONAS_DATOS_DATAREDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATARE {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DATOS_DATARE.DATAREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'DATARE\' de la tabla \'EC_PERSONAS_DATOS_DATARE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DATOS_DATARE.DATAREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATARENull() {
                return this.IsNull(this.tableEC_PERSONAS_DATOS_DATARE.DATAREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATARENull() {
                this[this.tableEC_PERSONAS_DATOS_DATARE.DATAREColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DATOS_TERMINALESRow : System.Data.DataRow {
            
            private EC_PERSONAS_DATOS_TERMINALESDataTable tableEC_PERSONAS_DATOS_TERMINALES;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_TERMINALESRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DATOS_TERMINALES = ((EC_PERSONAS_DATOS_TERMINALESDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TERMINAL_ID {
                get {
                    return ((decimal)(this[this.tableEC_PERSONAS_DATOS_TERMINALES.TERMINAL_IDColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DATOS_TERMINALES.TERMINAL_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TERMINAL_NOMBRE {
                get {
                    return ((string)(this[this.tableEC_PERSONAS_DATOS_TERMINALES.TERMINAL_NOMBREColumn]));
                }
                set {
                    this[this.tableEC_PERSONAS_DATOS_TERMINALES.TERMINAL_NOMBREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TERMINAL_BORRADO {
                get {
                    try {
                        return ((decimal)(this[this.tableEC_PERSONAS_DATOS_TERMINALES.TERMINAL_BORRADOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'TERMINAL_BORRADO\' de la tabla \'EC_PERSONAS_DATOS_TERMINALES\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DATOS_TERMINALES.TERMINAL_BORRADOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTERMINAL_BORRADONull() {
                return this.IsNull(this.tableEC_PERSONAS_DATOS_TERMINALES.TERMINAL_BORRADOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTERMINAL_BORRADONull() {
                this[this.tableEC_PERSONAS_DATOS_TERMINALES.TERMINAL_BORRADOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EC_PERSONAS_DATOS_GRUPOSRow : System.Data.DataRow {
            
            private EC_PERSONAS_DATOS_GRUPOSDataTable tableEC_PERSONAS_DATOS_GRUPOS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EC_PERSONAS_DATOS_GRUPOSRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEC_PERSONAS_DATOS_GRUPOS = ((EC_PERSONAS_DATOS_GRUPOSDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GRUPO {
                get {
                    try {
                        return ((string)(this[this.tableEC_PERSONAS_DATOS_GRUPOS.GRUPOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'GRUPO\' de la tabla \'EC_PERSONAS_DATOS_GRUPOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEC_PERSONAS_DATOS_GRUPOS.GRUPOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRUPONull() {
                return this.IsNull(this.tableEC_PERSONAS_DATOS_GRUPOS.GRUPOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRUPONull() {
                this[this.tableEC_PERSONAS_DATOS_GRUPOS.GRUPOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DATOS_DATCCTRowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DATOS_DATCCTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATCCTRowChangeEvent(EC_PERSONAS_DATOS_DATCCTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATCCTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DATOS_DATDEPRowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DATOS_DATDEPRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATDEPRowChangeEvent(EC_PERSONAS_DATOS_DATDEPRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATDEPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DATOS_CNOCVERowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DATOS_CNOCVERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CNOCVERowChangeEvent(EC_PERSONAS_DATOS_CNOCVERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CNOCVERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DATOS_CIACVERowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DATOS_CIACVERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CIACVERowChangeEvent(EC_PERSONAS_DATOS_CIACVERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_CIACVERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DATOS_NSRowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DATOS_NSRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_NSRowChangeEvent(EC_PERSONAS_DATOS_NSRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_NSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DATOSRowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DATOSRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOSRowChangeEvent(EC_PERSONAS_DATOSRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DATOS_DATARERowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DATOS_DATARERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATARERowChangeEvent(EC_PERSONAS_DATOS_DATARERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_DATARERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DATOS_TERMINALESRowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DATOS_TERMINALESRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_TERMINALESRowChangeEvent(EC_PERSONAS_DATOS_TERMINALESRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_TERMINALESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EC_PERSONAS_DATOS_GRUPOSRowChangeEvent : System.EventArgs {
            
            private EC_PERSONAS_DATOS_GRUPOSRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_GRUPOSRowChangeEvent(EC_PERSONAS_DATOS_GRUPOSRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EC_PERSONAS_DATOS_GRUPOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591