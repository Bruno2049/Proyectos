//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eClockBase.ES_Usuarios {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ES_Usuarios.S_Usuarios")]
    public interface S_Usuarios {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/DoWork", ReplyAction="urn:S_Usuarios/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/ExisteUsuario", ReplyAction="urn:S_Usuarios/ExisteUsuarioResponse")]
        System.IAsyncResult BeginExisteUsuario(string SesionSeguridad, string UsuarioUsuario, System.AsyncCallback callback, object asyncState);
        
        bool EndExisteUsuario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/ObtenUsuarioID", ReplyAction="urn:S_Usuarios/ObtenUsuarioIDResponse")]
        System.IAsyncResult BeginObtenUsuarioID(string SesionSeguridad, string UsuarioUsuario, System.AsyncCallback callback, object asyncState);
        
        int EndObtenUsuarioID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/ObtenSuscripcionID", ReplyAction="urn:S_Usuarios/ObtenSuscripcionIDResponse")]
        System.IAsyncResult BeginObtenSuscripcionID(string SesionSeguridad, int UsuarioID, System.AsyncCallback callback, object asyncState);
        
        int EndObtenSuscripcionID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/CambiaPassword", ReplyAction="urn:S_Usuarios/CambiaPasswordResponse")]
        System.IAsyncResult BeginCambiaPassword(string SesionSeguridad, string ClaveAnterior, string ClaveNueva, System.AsyncCallback callback, object asyncState);
        
        bool EndCambiaPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/ValidaPassword", ReplyAction="urn:S_Usuarios/ValidaPasswordResponse")]
        System.IAsyncResult BeginValidaPassword(string SesionSeguridad, string Clave, System.AsyncCallback callback, object asyncState);
        
        bool EndValidaPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/AgregaUsuario", ReplyAction="urn:S_Usuarios/AgregaUsuarioResponse")]
        System.IAsyncResult BeginAgregaUsuario(
                    string SesionSeguridad, 
                    int PerfilId, 
                    string UsuarioUsuario, 
                    string UsuarioNombre, 
                    string UsuarioDescripcion, 
                    string UsuarioClave, 
                    string UsuarioEmail, 
                    bool UsuarioEnvmaila, 
                    int SuscripcionId, 
                    string UsuarioAgrupacion, 
                    bool UsuarioEssup, 
                    bool UsuarioEsemp, 
                    int PersonaId, 
                    bool UsuarioBorrado, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        bool EndAgregaUsuario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/ModificaUsuario", ReplyAction="urn:S_Usuarios/ModificaUsuarioResponse")]
        System.IAsyncResult BeginModificaUsuario(
                    string SesionSeguridad, 
                    int PerfilId, 
                    string UsuarioUsuario, 
                    string UsuarioNombre, 
                    string UsuarioDescripcion, 
                    string UsuarioClave, 
                    string UsuarioEmail, 
                    bool UsuarioEnvmaila, 
                    int SuscripcionId, 
                    string UsuarioAgrupacion, 
                    bool UsuarioEssup, 
                    bool UsuarioEsemp, 
                    int PersonaId, 
                    bool UsuarioBorrado, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        bool EndModificaUsuario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/BorraUsuario", ReplyAction="urn:S_Usuarios/BorraUsuarioResponse")]
        System.IAsyncResult BeginBorraUsuario(string SesionSeguridad, int UsuarioId, System.AsyncCallback callback, object asyncState);
        
        bool EndBorraUsuario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/CreaUsuarioSuscripcion", ReplyAction="urn:S_Usuarios/CreaUsuarioSuscripcionResponse")]
        System.IAsyncResult BeginCreaUsuarioSuscripcion(string SesionSeguridad, string Usuario, string Clave, string Nombre, string Descripcion, string eMail, System.AsyncCallback callback, object asyncState);
        
        int EndCreaUsuarioSuscripcion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/CreaUsuarioEmpleado", ReplyAction="urn:S_Usuarios/CreaUsuarioEmpleadoResponse")]
        System.IAsyncResult BeginCreaUsuarioEmpleado(string NoEmpleado, string Clave, string eMail, string Suscripcion, System.AsyncCallback callback, object asyncState);
        
        string EndCreaUsuarioEmpleado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/ObtenUsuarioNombreEmpleado", ReplyAction="urn:S_Usuarios/ObtenUsuarioNombreEmpleadoResponse")]
        System.IAsyncResult BeginObtenUsuarioNombreEmpleado(string Suscripcion, string NoEmpleado, System.AsyncCallback callback, object asyncState);
        
        string EndObtenUsuarioNombreEmpleado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/OlvidoClaveEmpleado", ReplyAction="urn:S_Usuarios/OlvidoClaveEmpleadoResponse")]
        System.IAsyncResult BeginOlvidoClaveEmpleado(string NoEmpleado, string Suscripcion, System.AsyncCallback callback, object asyncState);
        
        string EndOlvidoClaveEmpleado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/OlvidoClave", ReplyAction="urn:S_Usuarios/OlvidoClaveResponse")]
        System.IAsyncResult BeginOlvidoClave(string UsuarioOeMail, string Firma, System.AsyncCallback callback, object asyncState);
        
        string EndOlvidoClave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Usuarios/ObtenerUsuarioSincronizador", ReplyAction="urn:S_Usuarios/ObtenerUsuarioSincronizadorResponse")]
        System.IAsyncResult BeginObtenerUsuarioSincronizador(string SesionSeguridad, int SuscripcionID, System.AsyncCallback callback, object asyncState);
        
        string EndObtenerUsuarioSincronizador(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface S_UsuariosChannel : eClockBase.ES_Usuarios.S_Usuarios, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExisteUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExisteUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenUsuarioIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenUsuarioIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenSuscripcionIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenSuscripcionIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CambiaPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CambiaPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidaPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidaPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgregaUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AgregaUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModificaUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ModificaUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorraUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BorraUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreaUsuarioSuscripcionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreaUsuarioSuscripcionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreaUsuarioEmpleadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreaUsuarioEmpleadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenUsuarioNombreEmpleadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenUsuarioNombreEmpleadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OlvidoClaveEmpleadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OlvidoClaveEmpleadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OlvidoClaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OlvidoClaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenerUsuarioSincronizadorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenerUsuarioSincronizadorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class S_UsuariosClient : System.ServiceModel.ClientBase<eClockBase.ES_Usuarios.S_Usuarios>, eClockBase.ES_Usuarios.S_Usuarios {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginExisteUsuarioDelegate;
        
        private EndOperationDelegate onEndExisteUsuarioDelegate;
        
        private System.Threading.SendOrPostCallback onExisteUsuarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenUsuarioIDDelegate;
        
        private EndOperationDelegate onEndObtenUsuarioIDDelegate;
        
        private System.Threading.SendOrPostCallback onObtenUsuarioIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenSuscripcionIDDelegate;
        
        private EndOperationDelegate onEndObtenSuscripcionIDDelegate;
        
        private System.Threading.SendOrPostCallback onObtenSuscripcionIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginCambiaPasswordDelegate;
        
        private EndOperationDelegate onEndCambiaPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onCambiaPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidaPasswordDelegate;
        
        private EndOperationDelegate onEndValidaPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onValidaPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginAgregaUsuarioDelegate;
        
        private EndOperationDelegate onEndAgregaUsuarioDelegate;
        
        private System.Threading.SendOrPostCallback onAgregaUsuarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginModificaUsuarioDelegate;
        
        private EndOperationDelegate onEndModificaUsuarioDelegate;
        
        private System.Threading.SendOrPostCallback onModificaUsuarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorraUsuarioDelegate;
        
        private EndOperationDelegate onEndBorraUsuarioDelegate;
        
        private System.Threading.SendOrPostCallback onBorraUsuarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreaUsuarioSuscripcionDelegate;
        
        private EndOperationDelegate onEndCreaUsuarioSuscripcionDelegate;
        
        private System.Threading.SendOrPostCallback onCreaUsuarioSuscripcionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreaUsuarioEmpleadoDelegate;
        
        private EndOperationDelegate onEndCreaUsuarioEmpleadoDelegate;
        
        private System.Threading.SendOrPostCallback onCreaUsuarioEmpleadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenUsuarioNombreEmpleadoDelegate;
        
        private EndOperationDelegate onEndObtenUsuarioNombreEmpleadoDelegate;
        
        private System.Threading.SendOrPostCallback onObtenUsuarioNombreEmpleadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOlvidoClaveEmpleadoDelegate;
        
        private EndOperationDelegate onEndOlvidoClaveEmpleadoDelegate;
        
        private System.Threading.SendOrPostCallback onOlvidoClaveEmpleadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOlvidoClaveDelegate;
        
        private EndOperationDelegate onEndOlvidoClaveDelegate;
        
        private System.Threading.SendOrPostCallback onOlvidoClaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenerUsuarioSincronizadorDelegate;
        
        private EndOperationDelegate onEndObtenerUsuarioSincronizadorDelegate;
        
        private System.Threading.SendOrPostCallback onObtenerUsuarioSincronizadorCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public S_UsuariosClient() : 
                base(S_UsuariosClient.GetDefaultBinding(), S_UsuariosClient.GetDefaultEndpointAddress()) {
        }
        
        public S_UsuariosClient(EndpointConfiguration endpointConfiguration) : 
                base(S_UsuariosClient.GetBindingForEndpoint(endpointConfiguration), S_UsuariosClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public S_UsuariosClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(S_UsuariosClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public S_UsuariosClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(S_UsuariosClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public S_UsuariosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<ExisteUsuarioCompletedEventArgs> ExisteUsuarioCompleted;
        
        public event System.EventHandler<ObtenUsuarioIDCompletedEventArgs> ObtenUsuarioIDCompleted;
        
        public event System.EventHandler<ObtenSuscripcionIDCompletedEventArgs> ObtenSuscripcionIDCompleted;
        
        public event System.EventHandler<CambiaPasswordCompletedEventArgs> CambiaPasswordCompleted;
        
        public event System.EventHandler<ValidaPasswordCompletedEventArgs> ValidaPasswordCompleted;
        
        public event System.EventHandler<AgregaUsuarioCompletedEventArgs> AgregaUsuarioCompleted;
        
        public event System.EventHandler<ModificaUsuarioCompletedEventArgs> ModificaUsuarioCompleted;
        
        public event System.EventHandler<BorraUsuarioCompletedEventArgs> BorraUsuarioCompleted;
        
        public event System.EventHandler<CreaUsuarioSuscripcionCompletedEventArgs> CreaUsuarioSuscripcionCompleted;
        
        public event System.EventHandler<CreaUsuarioEmpleadoCompletedEventArgs> CreaUsuarioEmpleadoCompleted;
        
        public event System.EventHandler<ObtenUsuarioNombreEmpleadoCompletedEventArgs> ObtenUsuarioNombreEmpleadoCompleted;
        
        public event System.EventHandler<OlvidoClaveEmpleadoCompletedEventArgs> OlvidoClaveEmpleadoCompleted;
        
        public event System.EventHandler<OlvidoClaveCompletedEventArgs> OlvidoClaveCompleted;
        
        public event System.EventHandler<ObtenerUsuarioSincronizadorCompletedEventArgs> ObtenerUsuarioSincronizadorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eClockBase.ES_Usuarios.S_Usuarios.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginExisteUsuario(string SesionSeguridad, string UsuarioUsuario, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExisteUsuario(SesionSeguridad, UsuarioUsuario, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool eClockBase.ES_Usuarios.S_Usuarios.EndExisteUsuario(System.IAsyncResult result) {
            return base.Channel.EndExisteUsuario(result);
        }
        
        private System.IAsyncResult OnBeginExisteUsuario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string UsuarioUsuario = ((string)(inValues[1]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginExisteUsuario(SesionSeguridad, UsuarioUsuario, callback, asyncState);
        }
        
        private object[] OnEndExisteUsuario(System.IAsyncResult result) {
            bool retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndExisteUsuario(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExisteUsuarioCompleted(object state) {
            if ((this.ExisteUsuarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExisteUsuarioCompleted(this, new ExisteUsuarioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExisteUsuarioAsync(string SesionSeguridad, string UsuarioUsuario) {
            this.ExisteUsuarioAsync(SesionSeguridad, UsuarioUsuario, null);
        }
        
        public void ExisteUsuarioAsync(string SesionSeguridad, string UsuarioUsuario, object userState) {
            if ((this.onBeginExisteUsuarioDelegate == null)) {
                this.onBeginExisteUsuarioDelegate = new BeginOperationDelegate(this.OnBeginExisteUsuario);
            }
            if ((this.onEndExisteUsuarioDelegate == null)) {
                this.onEndExisteUsuarioDelegate = new EndOperationDelegate(this.OnEndExisteUsuario);
            }
            if ((this.onExisteUsuarioCompletedDelegate == null)) {
                this.onExisteUsuarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExisteUsuarioCompleted);
            }
            base.InvokeAsync(this.onBeginExisteUsuarioDelegate, new object[] {
                        SesionSeguridad,
                        UsuarioUsuario}, this.onEndExisteUsuarioDelegate, this.onExisteUsuarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginObtenUsuarioID(string SesionSeguridad, string UsuarioUsuario, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenUsuarioID(SesionSeguridad, UsuarioUsuario, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int eClockBase.ES_Usuarios.S_Usuarios.EndObtenUsuarioID(System.IAsyncResult result) {
            return base.Channel.EndObtenUsuarioID(result);
        }
        
        private System.IAsyncResult OnBeginObtenUsuarioID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string UsuarioUsuario = ((string)(inValues[1]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginObtenUsuarioID(SesionSeguridad, UsuarioUsuario, callback, asyncState);
        }
        
        private object[] OnEndObtenUsuarioID(System.IAsyncResult result) {
            int retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndObtenUsuarioID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenUsuarioIDCompleted(object state) {
            if ((this.ObtenUsuarioIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenUsuarioIDCompleted(this, new ObtenUsuarioIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenUsuarioIDAsync(string SesionSeguridad, string UsuarioUsuario) {
            this.ObtenUsuarioIDAsync(SesionSeguridad, UsuarioUsuario, null);
        }
        
        public void ObtenUsuarioIDAsync(string SesionSeguridad, string UsuarioUsuario, object userState) {
            if ((this.onBeginObtenUsuarioIDDelegate == null)) {
                this.onBeginObtenUsuarioIDDelegate = new BeginOperationDelegate(this.OnBeginObtenUsuarioID);
            }
            if ((this.onEndObtenUsuarioIDDelegate == null)) {
                this.onEndObtenUsuarioIDDelegate = new EndOperationDelegate(this.OnEndObtenUsuarioID);
            }
            if ((this.onObtenUsuarioIDCompletedDelegate == null)) {
                this.onObtenUsuarioIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenUsuarioIDCompleted);
            }
            base.InvokeAsync(this.onBeginObtenUsuarioIDDelegate, new object[] {
                        SesionSeguridad,
                        UsuarioUsuario}, this.onEndObtenUsuarioIDDelegate, this.onObtenUsuarioIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginObtenSuscripcionID(string SesionSeguridad, int UsuarioID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenSuscripcionID(SesionSeguridad, UsuarioID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int eClockBase.ES_Usuarios.S_Usuarios.EndObtenSuscripcionID(System.IAsyncResult result) {
            return base.Channel.EndObtenSuscripcionID(result);
        }
        
        private System.IAsyncResult OnBeginObtenSuscripcionID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int UsuarioID = ((int)(inValues[1]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginObtenSuscripcionID(SesionSeguridad, UsuarioID, callback, asyncState);
        }
        
        private object[] OnEndObtenSuscripcionID(System.IAsyncResult result) {
            int retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndObtenSuscripcionID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenSuscripcionIDCompleted(object state) {
            if ((this.ObtenSuscripcionIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenSuscripcionIDCompleted(this, new ObtenSuscripcionIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenSuscripcionIDAsync(string SesionSeguridad, int UsuarioID) {
            this.ObtenSuscripcionIDAsync(SesionSeguridad, UsuarioID, null);
        }
        
        public void ObtenSuscripcionIDAsync(string SesionSeguridad, int UsuarioID, object userState) {
            if ((this.onBeginObtenSuscripcionIDDelegate == null)) {
                this.onBeginObtenSuscripcionIDDelegate = new BeginOperationDelegate(this.OnBeginObtenSuscripcionID);
            }
            if ((this.onEndObtenSuscripcionIDDelegate == null)) {
                this.onEndObtenSuscripcionIDDelegate = new EndOperationDelegate(this.OnEndObtenSuscripcionID);
            }
            if ((this.onObtenSuscripcionIDCompletedDelegate == null)) {
                this.onObtenSuscripcionIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenSuscripcionIDCompleted);
            }
            base.InvokeAsync(this.onBeginObtenSuscripcionIDDelegate, new object[] {
                        SesionSeguridad,
                        UsuarioID}, this.onEndObtenSuscripcionIDDelegate, this.onObtenSuscripcionIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginCambiaPassword(string SesionSeguridad, string ClaveAnterior, string ClaveNueva, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCambiaPassword(SesionSeguridad, ClaveAnterior, ClaveNueva, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool eClockBase.ES_Usuarios.S_Usuarios.EndCambiaPassword(System.IAsyncResult result) {
            return base.Channel.EndCambiaPassword(result);
        }
        
        private System.IAsyncResult OnBeginCambiaPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string ClaveAnterior = ((string)(inValues[1]));
            string ClaveNueva = ((string)(inValues[2]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginCambiaPassword(SesionSeguridad, ClaveAnterior, ClaveNueva, callback, asyncState);
        }
        
        private object[] OnEndCambiaPassword(System.IAsyncResult result) {
            bool retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndCambiaPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCambiaPasswordCompleted(object state) {
            if ((this.CambiaPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CambiaPasswordCompleted(this, new CambiaPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CambiaPasswordAsync(string SesionSeguridad, string ClaveAnterior, string ClaveNueva) {
            this.CambiaPasswordAsync(SesionSeguridad, ClaveAnterior, ClaveNueva, null);
        }
        
        public void CambiaPasswordAsync(string SesionSeguridad, string ClaveAnterior, string ClaveNueva, object userState) {
            if ((this.onBeginCambiaPasswordDelegate == null)) {
                this.onBeginCambiaPasswordDelegate = new BeginOperationDelegate(this.OnBeginCambiaPassword);
            }
            if ((this.onEndCambiaPasswordDelegate == null)) {
                this.onEndCambiaPasswordDelegate = new EndOperationDelegate(this.OnEndCambiaPassword);
            }
            if ((this.onCambiaPasswordCompletedDelegate == null)) {
                this.onCambiaPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCambiaPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginCambiaPasswordDelegate, new object[] {
                        SesionSeguridad,
                        ClaveAnterior,
                        ClaveNueva}, this.onEndCambiaPasswordDelegate, this.onCambiaPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginValidaPassword(string SesionSeguridad, string Clave, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidaPassword(SesionSeguridad, Clave, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool eClockBase.ES_Usuarios.S_Usuarios.EndValidaPassword(System.IAsyncResult result) {
            return base.Channel.EndValidaPassword(result);
        }
        
        private System.IAsyncResult OnBeginValidaPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string Clave = ((string)(inValues[1]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginValidaPassword(SesionSeguridad, Clave, callback, asyncState);
        }
        
        private object[] OnEndValidaPassword(System.IAsyncResult result) {
            bool retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndValidaPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidaPasswordCompleted(object state) {
            if ((this.ValidaPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidaPasswordCompleted(this, new ValidaPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidaPasswordAsync(string SesionSeguridad, string Clave) {
            this.ValidaPasswordAsync(SesionSeguridad, Clave, null);
        }
        
        public void ValidaPasswordAsync(string SesionSeguridad, string Clave, object userState) {
            if ((this.onBeginValidaPasswordDelegate == null)) {
                this.onBeginValidaPasswordDelegate = new BeginOperationDelegate(this.OnBeginValidaPassword);
            }
            if ((this.onEndValidaPasswordDelegate == null)) {
                this.onEndValidaPasswordDelegate = new EndOperationDelegate(this.OnEndValidaPassword);
            }
            if ((this.onValidaPasswordCompletedDelegate == null)) {
                this.onValidaPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidaPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginValidaPasswordDelegate, new object[] {
                        SesionSeguridad,
                        Clave}, this.onEndValidaPasswordDelegate, this.onValidaPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginAgregaUsuario(
                    string SesionSeguridad, 
                    int PerfilId, 
                    string UsuarioUsuario, 
                    string UsuarioNombre, 
                    string UsuarioDescripcion, 
                    string UsuarioClave, 
                    string UsuarioEmail, 
                    bool UsuarioEnvmaila, 
                    int SuscripcionId, 
                    string UsuarioAgrupacion, 
                    bool UsuarioEssup, 
                    bool UsuarioEsemp, 
                    int PersonaId, 
                    bool UsuarioBorrado, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginAgregaUsuario(SesionSeguridad, PerfilId, UsuarioUsuario, UsuarioNombre, UsuarioDescripcion, UsuarioClave, UsuarioEmail, UsuarioEnvmaila, SuscripcionId, UsuarioAgrupacion, UsuarioEssup, UsuarioEsemp, PersonaId, UsuarioBorrado, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool eClockBase.ES_Usuarios.S_Usuarios.EndAgregaUsuario(System.IAsyncResult result) {
            return base.Channel.EndAgregaUsuario(result);
        }
        
        private System.IAsyncResult OnBeginAgregaUsuario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int PerfilId = ((int)(inValues[1]));
            string UsuarioUsuario = ((string)(inValues[2]));
            string UsuarioNombre = ((string)(inValues[3]));
            string UsuarioDescripcion = ((string)(inValues[4]));
            string UsuarioClave = ((string)(inValues[5]));
            string UsuarioEmail = ((string)(inValues[6]));
            bool UsuarioEnvmaila = ((bool)(inValues[7]));
            int SuscripcionId = ((int)(inValues[8]));
            string UsuarioAgrupacion = ((string)(inValues[9]));
            bool UsuarioEssup = ((bool)(inValues[10]));
            bool UsuarioEsemp = ((bool)(inValues[11]));
            int PersonaId = ((int)(inValues[12]));
            bool UsuarioBorrado = ((bool)(inValues[13]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginAgregaUsuario(SesionSeguridad, PerfilId, UsuarioUsuario, UsuarioNombre, UsuarioDescripcion, UsuarioClave, UsuarioEmail, UsuarioEnvmaila, SuscripcionId, UsuarioAgrupacion, UsuarioEssup, UsuarioEsemp, PersonaId, UsuarioBorrado, callback, asyncState);
        }
        
        private object[] OnEndAgregaUsuario(System.IAsyncResult result) {
            bool retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndAgregaUsuario(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAgregaUsuarioCompleted(object state) {
            if ((this.AgregaUsuarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AgregaUsuarioCompleted(this, new AgregaUsuarioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AgregaUsuarioAsync(string SesionSeguridad, int PerfilId, string UsuarioUsuario, string UsuarioNombre, string UsuarioDescripcion, string UsuarioClave, string UsuarioEmail, bool UsuarioEnvmaila, int SuscripcionId, string UsuarioAgrupacion, bool UsuarioEssup, bool UsuarioEsemp, int PersonaId, bool UsuarioBorrado) {
            this.AgregaUsuarioAsync(SesionSeguridad, PerfilId, UsuarioUsuario, UsuarioNombre, UsuarioDescripcion, UsuarioClave, UsuarioEmail, UsuarioEnvmaila, SuscripcionId, UsuarioAgrupacion, UsuarioEssup, UsuarioEsemp, PersonaId, UsuarioBorrado, null);
        }
        
        public void AgregaUsuarioAsync(string SesionSeguridad, int PerfilId, string UsuarioUsuario, string UsuarioNombre, string UsuarioDescripcion, string UsuarioClave, string UsuarioEmail, bool UsuarioEnvmaila, int SuscripcionId, string UsuarioAgrupacion, bool UsuarioEssup, bool UsuarioEsemp, int PersonaId, bool UsuarioBorrado, object userState) {
            if ((this.onBeginAgregaUsuarioDelegate == null)) {
                this.onBeginAgregaUsuarioDelegate = new BeginOperationDelegate(this.OnBeginAgregaUsuario);
            }
            if ((this.onEndAgregaUsuarioDelegate == null)) {
                this.onEndAgregaUsuarioDelegate = new EndOperationDelegate(this.OnEndAgregaUsuario);
            }
            if ((this.onAgregaUsuarioCompletedDelegate == null)) {
                this.onAgregaUsuarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAgregaUsuarioCompleted);
            }
            base.InvokeAsync(this.onBeginAgregaUsuarioDelegate, new object[] {
                        SesionSeguridad,
                        PerfilId,
                        UsuarioUsuario,
                        UsuarioNombre,
                        UsuarioDescripcion,
                        UsuarioClave,
                        UsuarioEmail,
                        UsuarioEnvmaila,
                        SuscripcionId,
                        UsuarioAgrupacion,
                        UsuarioEssup,
                        UsuarioEsemp,
                        PersonaId,
                        UsuarioBorrado}, this.onEndAgregaUsuarioDelegate, this.onAgregaUsuarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginModificaUsuario(
                    string SesionSeguridad, 
                    int PerfilId, 
                    string UsuarioUsuario, 
                    string UsuarioNombre, 
                    string UsuarioDescripcion, 
                    string UsuarioClave, 
                    string UsuarioEmail, 
                    bool UsuarioEnvmaila, 
                    int SuscripcionId, 
                    string UsuarioAgrupacion, 
                    bool UsuarioEssup, 
                    bool UsuarioEsemp, 
                    int PersonaId, 
                    bool UsuarioBorrado, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginModificaUsuario(SesionSeguridad, PerfilId, UsuarioUsuario, UsuarioNombre, UsuarioDescripcion, UsuarioClave, UsuarioEmail, UsuarioEnvmaila, SuscripcionId, UsuarioAgrupacion, UsuarioEssup, UsuarioEsemp, PersonaId, UsuarioBorrado, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool eClockBase.ES_Usuarios.S_Usuarios.EndModificaUsuario(System.IAsyncResult result) {
            return base.Channel.EndModificaUsuario(result);
        }
        
        private System.IAsyncResult OnBeginModificaUsuario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int PerfilId = ((int)(inValues[1]));
            string UsuarioUsuario = ((string)(inValues[2]));
            string UsuarioNombre = ((string)(inValues[3]));
            string UsuarioDescripcion = ((string)(inValues[4]));
            string UsuarioClave = ((string)(inValues[5]));
            string UsuarioEmail = ((string)(inValues[6]));
            bool UsuarioEnvmaila = ((bool)(inValues[7]));
            int SuscripcionId = ((int)(inValues[8]));
            string UsuarioAgrupacion = ((string)(inValues[9]));
            bool UsuarioEssup = ((bool)(inValues[10]));
            bool UsuarioEsemp = ((bool)(inValues[11]));
            int PersonaId = ((int)(inValues[12]));
            bool UsuarioBorrado = ((bool)(inValues[13]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginModificaUsuario(SesionSeguridad, PerfilId, UsuarioUsuario, UsuarioNombre, UsuarioDescripcion, UsuarioClave, UsuarioEmail, UsuarioEnvmaila, SuscripcionId, UsuarioAgrupacion, UsuarioEssup, UsuarioEsemp, PersonaId, UsuarioBorrado, callback, asyncState);
        }
        
        private object[] OnEndModificaUsuario(System.IAsyncResult result) {
            bool retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndModificaUsuario(result);
            return new object[] {
                    retVal};
        }
        
        private void OnModificaUsuarioCompleted(object state) {
            if ((this.ModificaUsuarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModificaUsuarioCompleted(this, new ModificaUsuarioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModificaUsuarioAsync(string SesionSeguridad, int PerfilId, string UsuarioUsuario, string UsuarioNombre, string UsuarioDescripcion, string UsuarioClave, string UsuarioEmail, bool UsuarioEnvmaila, int SuscripcionId, string UsuarioAgrupacion, bool UsuarioEssup, bool UsuarioEsemp, int PersonaId, bool UsuarioBorrado) {
            this.ModificaUsuarioAsync(SesionSeguridad, PerfilId, UsuarioUsuario, UsuarioNombre, UsuarioDescripcion, UsuarioClave, UsuarioEmail, UsuarioEnvmaila, SuscripcionId, UsuarioAgrupacion, UsuarioEssup, UsuarioEsemp, PersonaId, UsuarioBorrado, null);
        }
        
        public void ModificaUsuarioAsync(string SesionSeguridad, int PerfilId, string UsuarioUsuario, string UsuarioNombre, string UsuarioDescripcion, string UsuarioClave, string UsuarioEmail, bool UsuarioEnvmaila, int SuscripcionId, string UsuarioAgrupacion, bool UsuarioEssup, bool UsuarioEsemp, int PersonaId, bool UsuarioBorrado, object userState) {
            if ((this.onBeginModificaUsuarioDelegate == null)) {
                this.onBeginModificaUsuarioDelegate = new BeginOperationDelegate(this.OnBeginModificaUsuario);
            }
            if ((this.onEndModificaUsuarioDelegate == null)) {
                this.onEndModificaUsuarioDelegate = new EndOperationDelegate(this.OnEndModificaUsuario);
            }
            if ((this.onModificaUsuarioCompletedDelegate == null)) {
                this.onModificaUsuarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModificaUsuarioCompleted);
            }
            base.InvokeAsync(this.onBeginModificaUsuarioDelegate, new object[] {
                        SesionSeguridad,
                        PerfilId,
                        UsuarioUsuario,
                        UsuarioNombre,
                        UsuarioDescripcion,
                        UsuarioClave,
                        UsuarioEmail,
                        UsuarioEnvmaila,
                        SuscripcionId,
                        UsuarioAgrupacion,
                        UsuarioEssup,
                        UsuarioEsemp,
                        PersonaId,
                        UsuarioBorrado}, this.onEndModificaUsuarioDelegate, this.onModificaUsuarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginBorraUsuario(string SesionSeguridad, int UsuarioId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorraUsuario(SesionSeguridad, UsuarioId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool eClockBase.ES_Usuarios.S_Usuarios.EndBorraUsuario(System.IAsyncResult result) {
            return base.Channel.EndBorraUsuario(result);
        }
        
        private System.IAsyncResult OnBeginBorraUsuario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int UsuarioId = ((int)(inValues[1]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginBorraUsuario(SesionSeguridad, UsuarioId, callback, asyncState);
        }
        
        private object[] OnEndBorraUsuario(System.IAsyncResult result) {
            bool retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndBorraUsuario(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBorraUsuarioCompleted(object state) {
            if ((this.BorraUsuarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorraUsuarioCompleted(this, new BorraUsuarioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorraUsuarioAsync(string SesionSeguridad, int UsuarioId) {
            this.BorraUsuarioAsync(SesionSeguridad, UsuarioId, null);
        }
        
        public void BorraUsuarioAsync(string SesionSeguridad, int UsuarioId, object userState) {
            if ((this.onBeginBorraUsuarioDelegate == null)) {
                this.onBeginBorraUsuarioDelegate = new BeginOperationDelegate(this.OnBeginBorraUsuario);
            }
            if ((this.onEndBorraUsuarioDelegate == null)) {
                this.onEndBorraUsuarioDelegate = new EndOperationDelegate(this.OnEndBorraUsuario);
            }
            if ((this.onBorraUsuarioCompletedDelegate == null)) {
                this.onBorraUsuarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorraUsuarioCompleted);
            }
            base.InvokeAsync(this.onBeginBorraUsuarioDelegate, new object[] {
                        SesionSeguridad,
                        UsuarioId}, this.onEndBorraUsuarioDelegate, this.onBorraUsuarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginCreaUsuarioSuscripcion(string SesionSeguridad, string Usuario, string Clave, string Nombre, string Descripcion, string eMail, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreaUsuarioSuscripcion(SesionSeguridad, Usuario, Clave, Nombre, Descripcion, eMail, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int eClockBase.ES_Usuarios.S_Usuarios.EndCreaUsuarioSuscripcion(System.IAsyncResult result) {
            return base.Channel.EndCreaUsuarioSuscripcion(result);
        }
        
        private System.IAsyncResult OnBeginCreaUsuarioSuscripcion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string Usuario = ((string)(inValues[1]));
            string Clave = ((string)(inValues[2]));
            string Nombre = ((string)(inValues[3]));
            string Descripcion = ((string)(inValues[4]));
            string eMail = ((string)(inValues[5]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginCreaUsuarioSuscripcion(SesionSeguridad, Usuario, Clave, Nombre, Descripcion, eMail, callback, asyncState);
        }
        
        private object[] OnEndCreaUsuarioSuscripcion(System.IAsyncResult result) {
            int retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndCreaUsuarioSuscripcion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreaUsuarioSuscripcionCompleted(object state) {
            if ((this.CreaUsuarioSuscripcionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreaUsuarioSuscripcionCompleted(this, new CreaUsuarioSuscripcionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreaUsuarioSuscripcionAsync(string SesionSeguridad, string Usuario, string Clave, string Nombre, string Descripcion, string eMail) {
            this.CreaUsuarioSuscripcionAsync(SesionSeguridad, Usuario, Clave, Nombre, Descripcion, eMail, null);
        }
        
        public void CreaUsuarioSuscripcionAsync(string SesionSeguridad, string Usuario, string Clave, string Nombre, string Descripcion, string eMail, object userState) {
            if ((this.onBeginCreaUsuarioSuscripcionDelegate == null)) {
                this.onBeginCreaUsuarioSuscripcionDelegate = new BeginOperationDelegate(this.OnBeginCreaUsuarioSuscripcion);
            }
            if ((this.onEndCreaUsuarioSuscripcionDelegate == null)) {
                this.onEndCreaUsuarioSuscripcionDelegate = new EndOperationDelegate(this.OnEndCreaUsuarioSuscripcion);
            }
            if ((this.onCreaUsuarioSuscripcionCompletedDelegate == null)) {
                this.onCreaUsuarioSuscripcionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreaUsuarioSuscripcionCompleted);
            }
            base.InvokeAsync(this.onBeginCreaUsuarioSuscripcionDelegate, new object[] {
                        SesionSeguridad,
                        Usuario,
                        Clave,
                        Nombre,
                        Descripcion,
                        eMail}, this.onEndCreaUsuarioSuscripcionDelegate, this.onCreaUsuarioSuscripcionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginCreaUsuarioEmpleado(string NoEmpleado, string Clave, string eMail, string Suscripcion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreaUsuarioEmpleado(NoEmpleado, Clave, eMail, Suscripcion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Usuarios.S_Usuarios.EndCreaUsuarioEmpleado(System.IAsyncResult result) {
            return base.Channel.EndCreaUsuarioEmpleado(result);
        }
        
        private System.IAsyncResult OnBeginCreaUsuarioEmpleado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string NoEmpleado = ((string)(inValues[0]));
            string Clave = ((string)(inValues[1]));
            string eMail = ((string)(inValues[2]));
            string Suscripcion = ((string)(inValues[3]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginCreaUsuarioEmpleado(NoEmpleado, Clave, eMail, Suscripcion, callback, asyncState);
        }
        
        private object[] OnEndCreaUsuarioEmpleado(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndCreaUsuarioEmpleado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreaUsuarioEmpleadoCompleted(object state) {
            if ((this.CreaUsuarioEmpleadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreaUsuarioEmpleadoCompleted(this, new CreaUsuarioEmpleadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreaUsuarioEmpleadoAsync(string NoEmpleado, string Clave, string eMail, string Suscripcion) {
            this.CreaUsuarioEmpleadoAsync(NoEmpleado, Clave, eMail, Suscripcion, null);
        }
        
        public void CreaUsuarioEmpleadoAsync(string NoEmpleado, string Clave, string eMail, string Suscripcion, object userState) {
            if ((this.onBeginCreaUsuarioEmpleadoDelegate == null)) {
                this.onBeginCreaUsuarioEmpleadoDelegate = new BeginOperationDelegate(this.OnBeginCreaUsuarioEmpleado);
            }
            if ((this.onEndCreaUsuarioEmpleadoDelegate == null)) {
                this.onEndCreaUsuarioEmpleadoDelegate = new EndOperationDelegate(this.OnEndCreaUsuarioEmpleado);
            }
            if ((this.onCreaUsuarioEmpleadoCompletedDelegate == null)) {
                this.onCreaUsuarioEmpleadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreaUsuarioEmpleadoCompleted);
            }
            base.InvokeAsync(this.onBeginCreaUsuarioEmpleadoDelegate, new object[] {
                        NoEmpleado,
                        Clave,
                        eMail,
                        Suscripcion}, this.onEndCreaUsuarioEmpleadoDelegate, this.onCreaUsuarioEmpleadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginObtenUsuarioNombreEmpleado(string Suscripcion, string NoEmpleado, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenUsuarioNombreEmpleado(Suscripcion, NoEmpleado, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Usuarios.S_Usuarios.EndObtenUsuarioNombreEmpleado(System.IAsyncResult result) {
            return base.Channel.EndObtenUsuarioNombreEmpleado(result);
        }
        
        private System.IAsyncResult OnBeginObtenUsuarioNombreEmpleado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Suscripcion = ((string)(inValues[0]));
            string NoEmpleado = ((string)(inValues[1]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginObtenUsuarioNombreEmpleado(Suscripcion, NoEmpleado, callback, asyncState);
        }
        
        private object[] OnEndObtenUsuarioNombreEmpleado(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndObtenUsuarioNombreEmpleado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenUsuarioNombreEmpleadoCompleted(object state) {
            if ((this.ObtenUsuarioNombreEmpleadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenUsuarioNombreEmpleadoCompleted(this, new ObtenUsuarioNombreEmpleadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenUsuarioNombreEmpleadoAsync(string Suscripcion, string NoEmpleado) {
            this.ObtenUsuarioNombreEmpleadoAsync(Suscripcion, NoEmpleado, null);
        }
        
        public void ObtenUsuarioNombreEmpleadoAsync(string Suscripcion, string NoEmpleado, object userState) {
            if ((this.onBeginObtenUsuarioNombreEmpleadoDelegate == null)) {
                this.onBeginObtenUsuarioNombreEmpleadoDelegate = new BeginOperationDelegate(this.OnBeginObtenUsuarioNombreEmpleado);
            }
            if ((this.onEndObtenUsuarioNombreEmpleadoDelegate == null)) {
                this.onEndObtenUsuarioNombreEmpleadoDelegate = new EndOperationDelegate(this.OnEndObtenUsuarioNombreEmpleado);
            }
            if ((this.onObtenUsuarioNombreEmpleadoCompletedDelegate == null)) {
                this.onObtenUsuarioNombreEmpleadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenUsuarioNombreEmpleadoCompleted);
            }
            base.InvokeAsync(this.onBeginObtenUsuarioNombreEmpleadoDelegate, new object[] {
                        Suscripcion,
                        NoEmpleado}, this.onEndObtenUsuarioNombreEmpleadoDelegate, this.onObtenUsuarioNombreEmpleadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginOlvidoClaveEmpleado(string NoEmpleado, string Suscripcion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOlvidoClaveEmpleado(NoEmpleado, Suscripcion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Usuarios.S_Usuarios.EndOlvidoClaveEmpleado(System.IAsyncResult result) {
            return base.Channel.EndOlvidoClaveEmpleado(result);
        }
        
        private System.IAsyncResult OnBeginOlvidoClaveEmpleado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string NoEmpleado = ((string)(inValues[0]));
            string Suscripcion = ((string)(inValues[1]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginOlvidoClaveEmpleado(NoEmpleado, Suscripcion, callback, asyncState);
        }
        
        private object[] OnEndOlvidoClaveEmpleado(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndOlvidoClaveEmpleado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOlvidoClaveEmpleadoCompleted(object state) {
            if ((this.OlvidoClaveEmpleadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OlvidoClaveEmpleadoCompleted(this, new OlvidoClaveEmpleadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OlvidoClaveEmpleadoAsync(string NoEmpleado, string Suscripcion) {
            this.OlvidoClaveEmpleadoAsync(NoEmpleado, Suscripcion, null);
        }
        
        public void OlvidoClaveEmpleadoAsync(string NoEmpleado, string Suscripcion, object userState) {
            if ((this.onBeginOlvidoClaveEmpleadoDelegate == null)) {
                this.onBeginOlvidoClaveEmpleadoDelegate = new BeginOperationDelegate(this.OnBeginOlvidoClaveEmpleado);
            }
            if ((this.onEndOlvidoClaveEmpleadoDelegate == null)) {
                this.onEndOlvidoClaveEmpleadoDelegate = new EndOperationDelegate(this.OnEndOlvidoClaveEmpleado);
            }
            if ((this.onOlvidoClaveEmpleadoCompletedDelegate == null)) {
                this.onOlvidoClaveEmpleadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOlvidoClaveEmpleadoCompleted);
            }
            base.InvokeAsync(this.onBeginOlvidoClaveEmpleadoDelegate, new object[] {
                        NoEmpleado,
                        Suscripcion}, this.onEndOlvidoClaveEmpleadoDelegate, this.onOlvidoClaveEmpleadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginOlvidoClave(string UsuarioOeMail, string Firma, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOlvidoClave(UsuarioOeMail, Firma, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Usuarios.S_Usuarios.EndOlvidoClave(System.IAsyncResult result) {
            return base.Channel.EndOlvidoClave(result);
        }
        
        private System.IAsyncResult OnBeginOlvidoClave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UsuarioOeMail = ((string)(inValues[0]));
            string Firma = ((string)(inValues[1]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginOlvidoClave(UsuarioOeMail, Firma, callback, asyncState);
        }
        
        private object[] OnEndOlvidoClave(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndOlvidoClave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOlvidoClaveCompleted(object state) {
            if ((this.OlvidoClaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OlvidoClaveCompleted(this, new OlvidoClaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OlvidoClaveAsync(string UsuarioOeMail, string Firma) {
            this.OlvidoClaveAsync(UsuarioOeMail, Firma, null);
        }
        
        public void OlvidoClaveAsync(string UsuarioOeMail, string Firma, object userState) {
            if ((this.onBeginOlvidoClaveDelegate == null)) {
                this.onBeginOlvidoClaveDelegate = new BeginOperationDelegate(this.OnBeginOlvidoClave);
            }
            if ((this.onEndOlvidoClaveDelegate == null)) {
                this.onEndOlvidoClaveDelegate = new EndOperationDelegate(this.OnEndOlvidoClave);
            }
            if ((this.onOlvidoClaveCompletedDelegate == null)) {
                this.onOlvidoClaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOlvidoClaveCompleted);
            }
            base.InvokeAsync(this.onBeginOlvidoClaveDelegate, new object[] {
                        UsuarioOeMail,
                        Firma}, this.onEndOlvidoClaveDelegate, this.onOlvidoClaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Usuarios.S_Usuarios.BeginObtenerUsuarioSincronizador(string SesionSeguridad, int SuscripcionID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenerUsuarioSincronizador(SesionSeguridad, SuscripcionID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Usuarios.S_Usuarios.EndObtenerUsuarioSincronizador(System.IAsyncResult result) {
            return base.Channel.EndObtenerUsuarioSincronizador(result);
        }
        
        private System.IAsyncResult OnBeginObtenerUsuarioSincronizador(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int SuscripcionID = ((int)(inValues[1]));
            return ((eClockBase.ES_Usuarios.S_Usuarios)(this)).BeginObtenerUsuarioSincronizador(SesionSeguridad, SuscripcionID, callback, asyncState);
        }
        
        private object[] OnEndObtenerUsuarioSincronizador(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Usuarios.S_Usuarios)(this)).EndObtenerUsuarioSincronizador(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenerUsuarioSincronizadorCompleted(object state) {
            if ((this.ObtenerUsuarioSincronizadorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenerUsuarioSincronizadorCompleted(this, new ObtenerUsuarioSincronizadorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenerUsuarioSincronizadorAsync(string SesionSeguridad, int SuscripcionID) {
            this.ObtenerUsuarioSincronizadorAsync(SesionSeguridad, SuscripcionID, null);
        }
        
        public void ObtenerUsuarioSincronizadorAsync(string SesionSeguridad, int SuscripcionID, object userState) {
            if ((this.onBeginObtenerUsuarioSincronizadorDelegate == null)) {
                this.onBeginObtenerUsuarioSincronizadorDelegate = new BeginOperationDelegate(this.OnBeginObtenerUsuarioSincronizador);
            }
            if ((this.onEndObtenerUsuarioSincronizadorDelegate == null)) {
                this.onEndObtenerUsuarioSincronizadorDelegate = new EndOperationDelegate(this.OnEndObtenerUsuarioSincronizador);
            }
            if ((this.onObtenerUsuarioSincronizadorCompletedDelegate == null)) {
                this.onObtenerUsuarioSincronizadorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenerUsuarioSincronizadorCompleted);
            }
            base.InvokeAsync(this.onBeginObtenerUsuarioSincronizadorDelegate, new object[] {
                        SesionSeguridad,
                        SuscripcionID}, this.onEndObtenerUsuarioSincronizadorDelegate, this.onObtenerUsuarioSincronizadorCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override eClockBase.ES_Usuarios.S_Usuarios CreateChannel() {
            return new S_UsuariosClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_S_Usuarios)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_S_Usuarios)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:50723/S_Usuarios.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return S_UsuariosClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_S_Usuarios);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return S_UsuariosClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_S_Usuarios);
        }
        
        private class S_UsuariosClientChannel : ChannelBase<eClockBase.ES_Usuarios.S_Usuarios>, eClockBase.ES_Usuarios.S_Usuarios {
            
            public S_UsuariosClientChannel(System.ServiceModel.ClientBase<eClockBase.ES_Usuarios.S_Usuarios> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginExisteUsuario(string SesionSeguridad, string UsuarioUsuario, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SesionSeguridad;
                _args[1] = UsuarioUsuario;
                System.IAsyncResult _result = base.BeginInvoke("ExisteUsuario", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndExisteUsuario(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ExisteUsuario", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenUsuarioID(string SesionSeguridad, string UsuarioUsuario, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SesionSeguridad;
                _args[1] = UsuarioUsuario;
                System.IAsyncResult _result = base.BeginInvoke("ObtenUsuarioID", _args, callback, asyncState);
                return _result;
            }
            
            public int EndObtenUsuarioID(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("ObtenUsuarioID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenSuscripcionID(string SesionSeguridad, int UsuarioID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SesionSeguridad;
                _args[1] = UsuarioID;
                System.IAsyncResult _result = base.BeginInvoke("ObtenSuscripcionID", _args, callback, asyncState);
                return _result;
            }
            
            public int EndObtenSuscripcionID(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("ObtenSuscripcionID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCambiaPassword(string SesionSeguridad, string ClaveAnterior, string ClaveNueva, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = SesionSeguridad;
                _args[1] = ClaveAnterior;
                _args[2] = ClaveNueva;
                System.IAsyncResult _result = base.BeginInvoke("CambiaPassword", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCambiaPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CambiaPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidaPassword(string SesionSeguridad, string Clave, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SesionSeguridad;
                _args[1] = Clave;
                System.IAsyncResult _result = base.BeginInvoke("ValidaPassword", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndValidaPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ValidaPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAgregaUsuario(
                        string SesionSeguridad, 
                        int PerfilId, 
                        string UsuarioUsuario, 
                        string UsuarioNombre, 
                        string UsuarioDescripcion, 
                        string UsuarioClave, 
                        string UsuarioEmail, 
                        bool UsuarioEnvmaila, 
                        int SuscripcionId, 
                        string UsuarioAgrupacion, 
                        bool UsuarioEssup, 
                        bool UsuarioEsemp, 
                        int PersonaId, 
                        bool UsuarioBorrado, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[14];
                _args[0] = SesionSeguridad;
                _args[1] = PerfilId;
                _args[2] = UsuarioUsuario;
                _args[3] = UsuarioNombre;
                _args[4] = UsuarioDescripcion;
                _args[5] = UsuarioClave;
                _args[6] = UsuarioEmail;
                _args[7] = UsuarioEnvmaila;
                _args[8] = SuscripcionId;
                _args[9] = UsuarioAgrupacion;
                _args[10] = UsuarioEssup;
                _args[11] = UsuarioEsemp;
                _args[12] = PersonaId;
                _args[13] = UsuarioBorrado;
                System.IAsyncResult _result = base.BeginInvoke("AgregaUsuario", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAgregaUsuario(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AgregaUsuario", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginModificaUsuario(
                        string SesionSeguridad, 
                        int PerfilId, 
                        string UsuarioUsuario, 
                        string UsuarioNombre, 
                        string UsuarioDescripcion, 
                        string UsuarioClave, 
                        string UsuarioEmail, 
                        bool UsuarioEnvmaila, 
                        int SuscripcionId, 
                        string UsuarioAgrupacion, 
                        bool UsuarioEssup, 
                        bool UsuarioEsemp, 
                        int PersonaId, 
                        bool UsuarioBorrado, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[14];
                _args[0] = SesionSeguridad;
                _args[1] = PerfilId;
                _args[2] = UsuarioUsuario;
                _args[3] = UsuarioNombre;
                _args[4] = UsuarioDescripcion;
                _args[5] = UsuarioClave;
                _args[6] = UsuarioEmail;
                _args[7] = UsuarioEnvmaila;
                _args[8] = SuscripcionId;
                _args[9] = UsuarioAgrupacion;
                _args[10] = UsuarioEssup;
                _args[11] = UsuarioEsemp;
                _args[12] = PersonaId;
                _args[13] = UsuarioBorrado;
                System.IAsyncResult _result = base.BeginInvoke("ModificaUsuario", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndModificaUsuario(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ModificaUsuario", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBorraUsuario(string SesionSeguridad, int UsuarioId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SesionSeguridad;
                _args[1] = UsuarioId;
                System.IAsyncResult _result = base.BeginInvoke("BorraUsuario", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndBorraUsuario(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("BorraUsuario", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreaUsuarioSuscripcion(string SesionSeguridad, string Usuario, string Clave, string Nombre, string Descripcion, string eMail, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = SesionSeguridad;
                _args[1] = Usuario;
                _args[2] = Clave;
                _args[3] = Nombre;
                _args[4] = Descripcion;
                _args[5] = eMail;
                System.IAsyncResult _result = base.BeginInvoke("CreaUsuarioSuscripcion", _args, callback, asyncState);
                return _result;
            }
            
            public int EndCreaUsuarioSuscripcion(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("CreaUsuarioSuscripcion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreaUsuarioEmpleado(string NoEmpleado, string Clave, string eMail, string Suscripcion, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = NoEmpleado;
                _args[1] = Clave;
                _args[2] = eMail;
                _args[3] = Suscripcion;
                System.IAsyncResult _result = base.BeginInvoke("CreaUsuarioEmpleado", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCreaUsuarioEmpleado(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CreaUsuarioEmpleado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenUsuarioNombreEmpleado(string Suscripcion, string NoEmpleado, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = Suscripcion;
                _args[1] = NoEmpleado;
                System.IAsyncResult _result = base.BeginInvoke("ObtenUsuarioNombreEmpleado", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenUsuarioNombreEmpleado(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenUsuarioNombreEmpleado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginOlvidoClaveEmpleado(string NoEmpleado, string Suscripcion, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = NoEmpleado;
                _args[1] = Suscripcion;
                System.IAsyncResult _result = base.BeginInvoke("OlvidoClaveEmpleado", _args, callback, asyncState);
                return _result;
            }
            
            public string EndOlvidoClaveEmpleado(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("OlvidoClaveEmpleado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginOlvidoClave(string UsuarioOeMail, string Firma, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UsuarioOeMail;
                _args[1] = Firma;
                System.IAsyncResult _result = base.BeginInvoke("OlvidoClave", _args, callback, asyncState);
                return _result;
            }
            
            public string EndOlvidoClave(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("OlvidoClave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenerUsuarioSincronizador(string SesionSeguridad, int SuscripcionID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SesionSeguridad;
                _args[1] = SuscripcionID;
                System.IAsyncResult _result = base.BeginInvoke("ObtenerUsuarioSincronizador", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenerUsuarioSincronizador(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenerUsuarioSincronizador", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_S_Usuarios,
        }
    }
}
