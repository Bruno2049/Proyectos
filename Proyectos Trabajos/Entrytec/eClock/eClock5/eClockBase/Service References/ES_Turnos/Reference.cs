//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eClockBase.ES_Turnos {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ES_Turnos.S_Turnos")]
    public interface S_Turnos {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/DoWork", ReplyAction="urn:S_Turnos/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/ObtenTurnosDSMenu", ReplyAction="urn:S_Turnos/ObtenTurnosDSMenuResponse")]
        System.IAsyncResult BeginObtenTurnosDSMenu(string SesionSeguridad, System.AsyncCallback callback, object asyncState);
        
        string EndObtenTurnosDSMenu(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/AsignaTurnoPredeterminado", ReplyAction="urn:S_Turnos/AsignaTurnoPredeterminadoResponse")]
        System.IAsyncResult BeginAsignaTurnoPredeterminado(string Persona_Link_IDS, int Turno_ID, string SesionSeguridad, System.AsyncCallback callback, object asyncState);
        
        string EndAsignaTurnoPredeterminado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/AsignaTurnoDia", ReplyAction="urn:S_Turnos/AsignaTurnoDiaResponse")]
        System.IAsyncResult BeginAsignaTurnoDia(string Persona_Diario_IDS, int Turno_Dia_ID, string SesionSeguridad, System.AsyncCallback callback, object asyncState);
        
        string EndAsignaTurnoDia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/AsignaTurnoRangoFechas", ReplyAction="urn:S_Turnos/AsignaTurnoRangoFechasResponse")]
        System.IAsyncResult BeginAsignaTurnoRangoFechas(string Persona_Diario_IDS, int Turno_ID, System.DateTime FechaInicio, System.DateTime FechaFin, string SesionSeguridad, System.AsyncCallback callback, object asyncState);
        
        string EndAsignaTurnoRangoFechas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/AsignaTurnoNombreRangoFechas", ReplyAction="urn:S_Turnos/AsignaTurnoNombreRangoFechasResponse")]
        System.IAsyncResult BeginAsignaTurnoNombreRangoFechas(string Persona_Diario_IDS, string Turno_Nombre, System.DateTime FechaInicio, System.DateTime FechaFin, string SesionSeguridad, System.AsyncCallback callback, object asyncState);
        
        string EndAsignaTurnoNombreRangoFechas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/ObtenDatos", ReplyAction="urn:S_Turnos/ObtenDatosResponse")]
        System.IAsyncResult BeginObtenDatos(string SesionSeguridad, int Turno_ID, System.AsyncCallback callback, object asyncState);
        
        string EndObtenDatos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/GuardaDatos", ReplyAction="urn:S_Turnos/GuardaDatosResponse")]
        System.IAsyncResult BeginGuardaDatos(string SesionSeguridad, string Datos, System.AsyncCallback callback, object asyncState);
        
        string EndGuardaDatos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/AsignacionTurnosAEmpleados", ReplyAction="urn:S_Turnos/AsignacionTurnosAEmpleadosResponse")]
        System.IAsyncResult BeginAsignacionTurnosAEmpleados(string SesionSeguridad, string DatosTurnoImportacion, System.AsyncCallback callback, object asyncState);
        
        int EndAsignacionTurnosAEmpleados(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/AsignaHorario", ReplyAction="urn:S_Turnos/AsignaHorarioResponse")]
        System.IAsyncResult BeginAsignaHorario(string SesionSeguridad, string DatosTurnoAsignacion, System.AsyncCallback callback, object asyncState);
        
        int EndAsignaHorario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/AsignaHorarioAPersonaDiarioIDs", ReplyAction="urn:S_Turnos/AsignaHorarioAPersonaDiarioIDsResponse")]
        System.IAsyncResult BeginAsignaHorarioAPersonaDiarioIDs(string SesionSeguridad, string Persona_Diario_IDs, int Turno_ID, System.AsyncCallback callback, object asyncState);
        
        int EndAsignaHorarioAPersonaDiarioIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Turnos/AsignaHorarioPredeterminadoAPersonaDiarioIDs", ReplyAction="urn:S_Turnos/AsignaHorarioPredeterminadoAPersonaDiarioIDsResponse")]
        System.IAsyncResult BeginAsignaHorarioPredeterminadoAPersonaDiarioIDs(string SesionSeguridad, string Persona_Diario_IDs, int Turno_ID, System.AsyncCallback callback, object asyncState);
        
        int EndAsignaHorarioPredeterminadoAPersonaDiarioIDs(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface S_TurnosChannel : eClockBase.ES_Turnos.S_Turnos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenTurnosDSMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenTurnosDSMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AsignaTurnoPredeterminadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AsignaTurnoPredeterminadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AsignaTurnoDiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AsignaTurnoDiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AsignaTurnoRangoFechasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AsignaTurnoRangoFechasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AsignaTurnoNombreRangoFechasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AsignaTurnoNombreRangoFechasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenDatosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenDatosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GuardaDatosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GuardaDatosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AsignacionTurnosAEmpleadosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AsignacionTurnosAEmpleadosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AsignaHorarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AsignaHorarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AsignaHorarioAPersonaDiarioIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AsignaHorarioAPersonaDiarioIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AsignaHorarioPredeterminadoAPersonaDiarioIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AsignaHorarioPredeterminadoAPersonaDiarioIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class S_TurnosClient : System.ServiceModel.ClientBase<eClockBase.ES_Turnos.S_Turnos>, eClockBase.ES_Turnos.S_Turnos {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenTurnosDSMenuDelegate;
        
        private EndOperationDelegate onEndObtenTurnosDSMenuDelegate;
        
        private System.Threading.SendOrPostCallback onObtenTurnosDSMenuCompletedDelegate;
        
        private BeginOperationDelegate onBeginAsignaTurnoPredeterminadoDelegate;
        
        private EndOperationDelegate onEndAsignaTurnoPredeterminadoDelegate;
        
        private System.Threading.SendOrPostCallback onAsignaTurnoPredeterminadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginAsignaTurnoDiaDelegate;
        
        private EndOperationDelegate onEndAsignaTurnoDiaDelegate;
        
        private System.Threading.SendOrPostCallback onAsignaTurnoDiaCompletedDelegate;
        
        private BeginOperationDelegate onBeginAsignaTurnoRangoFechasDelegate;
        
        private EndOperationDelegate onEndAsignaTurnoRangoFechasDelegate;
        
        private System.Threading.SendOrPostCallback onAsignaTurnoRangoFechasCompletedDelegate;
        
        private BeginOperationDelegate onBeginAsignaTurnoNombreRangoFechasDelegate;
        
        private EndOperationDelegate onEndAsignaTurnoNombreRangoFechasDelegate;
        
        private System.Threading.SendOrPostCallback onAsignaTurnoNombreRangoFechasCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenDatosDelegate;
        
        private EndOperationDelegate onEndObtenDatosDelegate;
        
        private System.Threading.SendOrPostCallback onObtenDatosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGuardaDatosDelegate;
        
        private EndOperationDelegate onEndGuardaDatosDelegate;
        
        private System.Threading.SendOrPostCallback onGuardaDatosCompletedDelegate;
        
        private BeginOperationDelegate onBeginAsignacionTurnosAEmpleadosDelegate;
        
        private EndOperationDelegate onEndAsignacionTurnosAEmpleadosDelegate;
        
        private System.Threading.SendOrPostCallback onAsignacionTurnosAEmpleadosCompletedDelegate;
        
        private BeginOperationDelegate onBeginAsignaHorarioDelegate;
        
        private EndOperationDelegate onEndAsignaHorarioDelegate;
        
        private System.Threading.SendOrPostCallback onAsignaHorarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginAsignaHorarioAPersonaDiarioIDsDelegate;
        
        private EndOperationDelegate onEndAsignaHorarioAPersonaDiarioIDsDelegate;
        
        private System.Threading.SendOrPostCallback onAsignaHorarioAPersonaDiarioIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAsignaHorarioPredeterminadoAPersonaDiarioIDsDelegate;
        
        private EndOperationDelegate onEndAsignaHorarioPredeterminadoAPersonaDiarioIDsDelegate;
        
        private System.Threading.SendOrPostCallback onAsignaHorarioPredeterminadoAPersonaDiarioIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public S_TurnosClient() : 
                base(S_TurnosClient.GetDefaultBinding(), S_TurnosClient.GetDefaultEndpointAddress()) {
        }
        
        public S_TurnosClient(EndpointConfiguration endpointConfiguration) : 
                base(S_TurnosClient.GetBindingForEndpoint(endpointConfiguration), S_TurnosClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public S_TurnosClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(S_TurnosClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public S_TurnosClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(S_TurnosClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public S_TurnosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<ObtenTurnosDSMenuCompletedEventArgs> ObtenTurnosDSMenuCompleted;
        
        public event System.EventHandler<AsignaTurnoPredeterminadoCompletedEventArgs> AsignaTurnoPredeterminadoCompleted;
        
        public event System.EventHandler<AsignaTurnoDiaCompletedEventArgs> AsignaTurnoDiaCompleted;
        
        public event System.EventHandler<AsignaTurnoRangoFechasCompletedEventArgs> AsignaTurnoRangoFechasCompleted;
        
        public event System.EventHandler<AsignaTurnoNombreRangoFechasCompletedEventArgs> AsignaTurnoNombreRangoFechasCompleted;
        
        public event System.EventHandler<ObtenDatosCompletedEventArgs> ObtenDatosCompleted;
        
        public event System.EventHandler<GuardaDatosCompletedEventArgs> GuardaDatosCompleted;
        
        public event System.EventHandler<AsignacionTurnosAEmpleadosCompletedEventArgs> AsignacionTurnosAEmpleadosCompleted;
        
        public event System.EventHandler<AsignaHorarioCompletedEventArgs> AsignaHorarioCompleted;
        
        public event System.EventHandler<AsignaHorarioAPersonaDiarioIDsCompletedEventArgs> AsignaHorarioAPersonaDiarioIDsCompleted;
        
        public event System.EventHandler<AsignaHorarioPredeterminadoAPersonaDiarioIDsCompletedEventArgs> AsignaHorarioPredeterminadoAPersonaDiarioIDsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eClockBase.ES_Turnos.S_Turnos.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((eClockBase.ES_Turnos.S_Turnos)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginObtenTurnosDSMenu(string SesionSeguridad, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenTurnosDSMenu(SesionSeguridad, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Turnos.S_Turnos.EndObtenTurnosDSMenu(System.IAsyncResult result) {
            return base.Channel.EndObtenTurnosDSMenu(result);
        }
        
        private System.IAsyncResult OnBeginObtenTurnosDSMenu(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginObtenTurnosDSMenu(SesionSeguridad, callback, asyncState);
        }
        
        private object[] OnEndObtenTurnosDSMenu(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Turnos.S_Turnos)(this)).EndObtenTurnosDSMenu(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenTurnosDSMenuCompleted(object state) {
            if ((this.ObtenTurnosDSMenuCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenTurnosDSMenuCompleted(this, new ObtenTurnosDSMenuCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenTurnosDSMenuAsync(string SesionSeguridad) {
            this.ObtenTurnosDSMenuAsync(SesionSeguridad, null);
        }
        
        public void ObtenTurnosDSMenuAsync(string SesionSeguridad, object userState) {
            if ((this.onBeginObtenTurnosDSMenuDelegate == null)) {
                this.onBeginObtenTurnosDSMenuDelegate = new BeginOperationDelegate(this.OnBeginObtenTurnosDSMenu);
            }
            if ((this.onEndObtenTurnosDSMenuDelegate == null)) {
                this.onEndObtenTurnosDSMenuDelegate = new EndOperationDelegate(this.OnEndObtenTurnosDSMenu);
            }
            if ((this.onObtenTurnosDSMenuCompletedDelegate == null)) {
                this.onObtenTurnosDSMenuCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenTurnosDSMenuCompleted);
            }
            base.InvokeAsync(this.onBeginObtenTurnosDSMenuDelegate, new object[] {
                        SesionSeguridad}, this.onEndObtenTurnosDSMenuDelegate, this.onObtenTurnosDSMenuCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginAsignaTurnoPredeterminado(string Persona_Link_IDS, int Turno_ID, string SesionSeguridad, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAsignaTurnoPredeterminado(Persona_Link_IDS, Turno_ID, SesionSeguridad, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Turnos.S_Turnos.EndAsignaTurnoPredeterminado(System.IAsyncResult result) {
            return base.Channel.EndAsignaTurnoPredeterminado(result);
        }
        
        private System.IAsyncResult OnBeginAsignaTurnoPredeterminado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Persona_Link_IDS = ((string)(inValues[0]));
            int Turno_ID = ((int)(inValues[1]));
            string SesionSeguridad = ((string)(inValues[2]));
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginAsignaTurnoPredeterminado(Persona_Link_IDS, Turno_ID, SesionSeguridad, callback, asyncState);
        }
        
        private object[] OnEndAsignaTurnoPredeterminado(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Turnos.S_Turnos)(this)).EndAsignaTurnoPredeterminado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAsignaTurnoPredeterminadoCompleted(object state) {
            if ((this.AsignaTurnoPredeterminadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AsignaTurnoPredeterminadoCompleted(this, new AsignaTurnoPredeterminadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AsignaTurnoPredeterminadoAsync(string Persona_Link_IDS, int Turno_ID, string SesionSeguridad) {
            this.AsignaTurnoPredeterminadoAsync(Persona_Link_IDS, Turno_ID, SesionSeguridad, null);
        }
        
        public void AsignaTurnoPredeterminadoAsync(string Persona_Link_IDS, int Turno_ID, string SesionSeguridad, object userState) {
            if ((this.onBeginAsignaTurnoPredeterminadoDelegate == null)) {
                this.onBeginAsignaTurnoPredeterminadoDelegate = new BeginOperationDelegate(this.OnBeginAsignaTurnoPredeterminado);
            }
            if ((this.onEndAsignaTurnoPredeterminadoDelegate == null)) {
                this.onEndAsignaTurnoPredeterminadoDelegate = new EndOperationDelegate(this.OnEndAsignaTurnoPredeterminado);
            }
            if ((this.onAsignaTurnoPredeterminadoCompletedDelegate == null)) {
                this.onAsignaTurnoPredeterminadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAsignaTurnoPredeterminadoCompleted);
            }
            base.InvokeAsync(this.onBeginAsignaTurnoPredeterminadoDelegate, new object[] {
                        Persona_Link_IDS,
                        Turno_ID,
                        SesionSeguridad}, this.onEndAsignaTurnoPredeterminadoDelegate, this.onAsignaTurnoPredeterminadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginAsignaTurnoDia(string Persona_Diario_IDS, int Turno_Dia_ID, string SesionSeguridad, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAsignaTurnoDia(Persona_Diario_IDS, Turno_Dia_ID, SesionSeguridad, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Turnos.S_Turnos.EndAsignaTurnoDia(System.IAsyncResult result) {
            return base.Channel.EndAsignaTurnoDia(result);
        }
        
        private System.IAsyncResult OnBeginAsignaTurnoDia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Persona_Diario_IDS = ((string)(inValues[0]));
            int Turno_Dia_ID = ((int)(inValues[1]));
            string SesionSeguridad = ((string)(inValues[2]));
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginAsignaTurnoDia(Persona_Diario_IDS, Turno_Dia_ID, SesionSeguridad, callback, asyncState);
        }
        
        private object[] OnEndAsignaTurnoDia(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Turnos.S_Turnos)(this)).EndAsignaTurnoDia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAsignaTurnoDiaCompleted(object state) {
            if ((this.AsignaTurnoDiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AsignaTurnoDiaCompleted(this, new AsignaTurnoDiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AsignaTurnoDiaAsync(string Persona_Diario_IDS, int Turno_Dia_ID, string SesionSeguridad) {
            this.AsignaTurnoDiaAsync(Persona_Diario_IDS, Turno_Dia_ID, SesionSeguridad, null);
        }
        
        public void AsignaTurnoDiaAsync(string Persona_Diario_IDS, int Turno_Dia_ID, string SesionSeguridad, object userState) {
            if ((this.onBeginAsignaTurnoDiaDelegate == null)) {
                this.onBeginAsignaTurnoDiaDelegate = new BeginOperationDelegate(this.OnBeginAsignaTurnoDia);
            }
            if ((this.onEndAsignaTurnoDiaDelegate == null)) {
                this.onEndAsignaTurnoDiaDelegate = new EndOperationDelegate(this.OnEndAsignaTurnoDia);
            }
            if ((this.onAsignaTurnoDiaCompletedDelegate == null)) {
                this.onAsignaTurnoDiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAsignaTurnoDiaCompleted);
            }
            base.InvokeAsync(this.onBeginAsignaTurnoDiaDelegate, new object[] {
                        Persona_Diario_IDS,
                        Turno_Dia_ID,
                        SesionSeguridad}, this.onEndAsignaTurnoDiaDelegate, this.onAsignaTurnoDiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginAsignaTurnoRangoFechas(string Persona_Diario_IDS, int Turno_ID, System.DateTime FechaInicio, System.DateTime FechaFin, string SesionSeguridad, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAsignaTurnoRangoFechas(Persona_Diario_IDS, Turno_ID, FechaInicio, FechaFin, SesionSeguridad, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Turnos.S_Turnos.EndAsignaTurnoRangoFechas(System.IAsyncResult result) {
            return base.Channel.EndAsignaTurnoRangoFechas(result);
        }
        
        private System.IAsyncResult OnBeginAsignaTurnoRangoFechas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Persona_Diario_IDS = ((string)(inValues[0]));
            int Turno_ID = ((int)(inValues[1]));
            System.DateTime FechaInicio = ((System.DateTime)(inValues[2]));
            System.DateTime FechaFin = ((System.DateTime)(inValues[3]));
            string SesionSeguridad = ((string)(inValues[4]));
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginAsignaTurnoRangoFechas(Persona_Diario_IDS, Turno_ID, FechaInicio, FechaFin, SesionSeguridad, callback, asyncState);
        }
        
        private object[] OnEndAsignaTurnoRangoFechas(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Turnos.S_Turnos)(this)).EndAsignaTurnoRangoFechas(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAsignaTurnoRangoFechasCompleted(object state) {
            if ((this.AsignaTurnoRangoFechasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AsignaTurnoRangoFechasCompleted(this, new AsignaTurnoRangoFechasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AsignaTurnoRangoFechasAsync(string Persona_Diario_IDS, int Turno_ID, System.DateTime FechaInicio, System.DateTime FechaFin, string SesionSeguridad) {
            this.AsignaTurnoRangoFechasAsync(Persona_Diario_IDS, Turno_ID, FechaInicio, FechaFin, SesionSeguridad, null);
        }
        
        public void AsignaTurnoRangoFechasAsync(string Persona_Diario_IDS, int Turno_ID, System.DateTime FechaInicio, System.DateTime FechaFin, string SesionSeguridad, object userState) {
            if ((this.onBeginAsignaTurnoRangoFechasDelegate == null)) {
                this.onBeginAsignaTurnoRangoFechasDelegate = new BeginOperationDelegate(this.OnBeginAsignaTurnoRangoFechas);
            }
            if ((this.onEndAsignaTurnoRangoFechasDelegate == null)) {
                this.onEndAsignaTurnoRangoFechasDelegate = new EndOperationDelegate(this.OnEndAsignaTurnoRangoFechas);
            }
            if ((this.onAsignaTurnoRangoFechasCompletedDelegate == null)) {
                this.onAsignaTurnoRangoFechasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAsignaTurnoRangoFechasCompleted);
            }
            base.InvokeAsync(this.onBeginAsignaTurnoRangoFechasDelegate, new object[] {
                        Persona_Diario_IDS,
                        Turno_ID,
                        FechaInicio,
                        FechaFin,
                        SesionSeguridad}, this.onEndAsignaTurnoRangoFechasDelegate, this.onAsignaTurnoRangoFechasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginAsignaTurnoNombreRangoFechas(string Persona_Diario_IDS, string Turno_Nombre, System.DateTime FechaInicio, System.DateTime FechaFin, string SesionSeguridad, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAsignaTurnoNombreRangoFechas(Persona_Diario_IDS, Turno_Nombre, FechaInicio, FechaFin, SesionSeguridad, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Turnos.S_Turnos.EndAsignaTurnoNombreRangoFechas(System.IAsyncResult result) {
            return base.Channel.EndAsignaTurnoNombreRangoFechas(result);
        }
        
        private System.IAsyncResult OnBeginAsignaTurnoNombreRangoFechas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Persona_Diario_IDS = ((string)(inValues[0]));
            string Turno_Nombre = ((string)(inValues[1]));
            System.DateTime FechaInicio = ((System.DateTime)(inValues[2]));
            System.DateTime FechaFin = ((System.DateTime)(inValues[3]));
            string SesionSeguridad = ((string)(inValues[4]));
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginAsignaTurnoNombreRangoFechas(Persona_Diario_IDS, Turno_Nombre, FechaInicio, FechaFin, SesionSeguridad, callback, asyncState);
        }
        
        private object[] OnEndAsignaTurnoNombreRangoFechas(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Turnos.S_Turnos)(this)).EndAsignaTurnoNombreRangoFechas(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAsignaTurnoNombreRangoFechasCompleted(object state) {
            if ((this.AsignaTurnoNombreRangoFechasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AsignaTurnoNombreRangoFechasCompleted(this, new AsignaTurnoNombreRangoFechasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AsignaTurnoNombreRangoFechasAsync(string Persona_Diario_IDS, string Turno_Nombre, System.DateTime FechaInicio, System.DateTime FechaFin, string SesionSeguridad) {
            this.AsignaTurnoNombreRangoFechasAsync(Persona_Diario_IDS, Turno_Nombre, FechaInicio, FechaFin, SesionSeguridad, null);
        }
        
        public void AsignaTurnoNombreRangoFechasAsync(string Persona_Diario_IDS, string Turno_Nombre, System.DateTime FechaInicio, System.DateTime FechaFin, string SesionSeguridad, object userState) {
            if ((this.onBeginAsignaTurnoNombreRangoFechasDelegate == null)) {
                this.onBeginAsignaTurnoNombreRangoFechasDelegate = new BeginOperationDelegate(this.OnBeginAsignaTurnoNombreRangoFechas);
            }
            if ((this.onEndAsignaTurnoNombreRangoFechasDelegate == null)) {
                this.onEndAsignaTurnoNombreRangoFechasDelegate = new EndOperationDelegate(this.OnEndAsignaTurnoNombreRangoFechas);
            }
            if ((this.onAsignaTurnoNombreRangoFechasCompletedDelegate == null)) {
                this.onAsignaTurnoNombreRangoFechasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAsignaTurnoNombreRangoFechasCompleted);
            }
            base.InvokeAsync(this.onBeginAsignaTurnoNombreRangoFechasDelegate, new object[] {
                        Persona_Diario_IDS,
                        Turno_Nombre,
                        FechaInicio,
                        FechaFin,
                        SesionSeguridad}, this.onEndAsignaTurnoNombreRangoFechasDelegate, this.onAsignaTurnoNombreRangoFechasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginObtenDatos(string SesionSeguridad, int Turno_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenDatos(SesionSeguridad, Turno_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Turnos.S_Turnos.EndObtenDatos(System.IAsyncResult result) {
            return base.Channel.EndObtenDatos(result);
        }
        
        private System.IAsyncResult OnBeginObtenDatos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int Turno_ID = ((int)(inValues[1]));
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginObtenDatos(SesionSeguridad, Turno_ID, callback, asyncState);
        }
        
        private object[] OnEndObtenDatos(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Turnos.S_Turnos)(this)).EndObtenDatos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenDatosCompleted(object state) {
            if ((this.ObtenDatosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenDatosCompleted(this, new ObtenDatosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenDatosAsync(string SesionSeguridad, int Turno_ID) {
            this.ObtenDatosAsync(SesionSeguridad, Turno_ID, null);
        }
        
        public void ObtenDatosAsync(string SesionSeguridad, int Turno_ID, object userState) {
            if ((this.onBeginObtenDatosDelegate == null)) {
                this.onBeginObtenDatosDelegate = new BeginOperationDelegate(this.OnBeginObtenDatos);
            }
            if ((this.onEndObtenDatosDelegate == null)) {
                this.onEndObtenDatosDelegate = new EndOperationDelegate(this.OnEndObtenDatos);
            }
            if ((this.onObtenDatosCompletedDelegate == null)) {
                this.onObtenDatosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenDatosCompleted);
            }
            base.InvokeAsync(this.onBeginObtenDatosDelegate, new object[] {
                        SesionSeguridad,
                        Turno_ID}, this.onEndObtenDatosDelegate, this.onObtenDatosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginGuardaDatos(string SesionSeguridad, string Datos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGuardaDatos(SesionSeguridad, Datos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Turnos.S_Turnos.EndGuardaDatos(System.IAsyncResult result) {
            return base.Channel.EndGuardaDatos(result);
        }
        
        private System.IAsyncResult OnBeginGuardaDatos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string Datos = ((string)(inValues[1]));
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginGuardaDatos(SesionSeguridad, Datos, callback, asyncState);
        }
        
        private object[] OnEndGuardaDatos(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Turnos.S_Turnos)(this)).EndGuardaDatos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGuardaDatosCompleted(object state) {
            if ((this.GuardaDatosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GuardaDatosCompleted(this, new GuardaDatosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GuardaDatosAsync(string SesionSeguridad, string Datos) {
            this.GuardaDatosAsync(SesionSeguridad, Datos, null);
        }
        
        public void GuardaDatosAsync(string SesionSeguridad, string Datos, object userState) {
            if ((this.onBeginGuardaDatosDelegate == null)) {
                this.onBeginGuardaDatosDelegate = new BeginOperationDelegate(this.OnBeginGuardaDatos);
            }
            if ((this.onEndGuardaDatosDelegate == null)) {
                this.onEndGuardaDatosDelegate = new EndOperationDelegate(this.OnEndGuardaDatos);
            }
            if ((this.onGuardaDatosCompletedDelegate == null)) {
                this.onGuardaDatosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGuardaDatosCompleted);
            }
            base.InvokeAsync(this.onBeginGuardaDatosDelegate, new object[] {
                        SesionSeguridad,
                        Datos}, this.onEndGuardaDatosDelegate, this.onGuardaDatosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginAsignacionTurnosAEmpleados(string SesionSeguridad, string DatosTurnoImportacion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAsignacionTurnosAEmpleados(SesionSeguridad, DatosTurnoImportacion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int eClockBase.ES_Turnos.S_Turnos.EndAsignacionTurnosAEmpleados(System.IAsyncResult result) {
            return base.Channel.EndAsignacionTurnosAEmpleados(result);
        }
        
        private System.IAsyncResult OnBeginAsignacionTurnosAEmpleados(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string DatosTurnoImportacion = ((string)(inValues[1]));
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginAsignacionTurnosAEmpleados(SesionSeguridad, DatosTurnoImportacion, callback, asyncState);
        }
        
        private object[] OnEndAsignacionTurnosAEmpleados(System.IAsyncResult result) {
            int retVal = ((eClockBase.ES_Turnos.S_Turnos)(this)).EndAsignacionTurnosAEmpleados(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAsignacionTurnosAEmpleadosCompleted(object state) {
            if ((this.AsignacionTurnosAEmpleadosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AsignacionTurnosAEmpleadosCompleted(this, new AsignacionTurnosAEmpleadosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AsignacionTurnosAEmpleadosAsync(string SesionSeguridad, string DatosTurnoImportacion) {
            this.AsignacionTurnosAEmpleadosAsync(SesionSeguridad, DatosTurnoImportacion, null);
        }
        
        public void AsignacionTurnosAEmpleadosAsync(string SesionSeguridad, string DatosTurnoImportacion, object userState) {
            if ((this.onBeginAsignacionTurnosAEmpleadosDelegate == null)) {
                this.onBeginAsignacionTurnosAEmpleadosDelegate = new BeginOperationDelegate(this.OnBeginAsignacionTurnosAEmpleados);
            }
            if ((this.onEndAsignacionTurnosAEmpleadosDelegate == null)) {
                this.onEndAsignacionTurnosAEmpleadosDelegate = new EndOperationDelegate(this.OnEndAsignacionTurnosAEmpleados);
            }
            if ((this.onAsignacionTurnosAEmpleadosCompletedDelegate == null)) {
                this.onAsignacionTurnosAEmpleadosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAsignacionTurnosAEmpleadosCompleted);
            }
            base.InvokeAsync(this.onBeginAsignacionTurnosAEmpleadosDelegate, new object[] {
                        SesionSeguridad,
                        DatosTurnoImportacion}, this.onEndAsignacionTurnosAEmpleadosDelegate, this.onAsignacionTurnosAEmpleadosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginAsignaHorario(string SesionSeguridad, string DatosTurnoAsignacion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAsignaHorario(SesionSeguridad, DatosTurnoAsignacion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int eClockBase.ES_Turnos.S_Turnos.EndAsignaHorario(System.IAsyncResult result) {
            return base.Channel.EndAsignaHorario(result);
        }
        
        private System.IAsyncResult OnBeginAsignaHorario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string DatosTurnoAsignacion = ((string)(inValues[1]));
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginAsignaHorario(SesionSeguridad, DatosTurnoAsignacion, callback, asyncState);
        }
        
        private object[] OnEndAsignaHorario(System.IAsyncResult result) {
            int retVal = ((eClockBase.ES_Turnos.S_Turnos)(this)).EndAsignaHorario(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAsignaHorarioCompleted(object state) {
            if ((this.AsignaHorarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AsignaHorarioCompleted(this, new AsignaHorarioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AsignaHorarioAsync(string SesionSeguridad, string DatosTurnoAsignacion) {
            this.AsignaHorarioAsync(SesionSeguridad, DatosTurnoAsignacion, null);
        }
        
        public void AsignaHorarioAsync(string SesionSeguridad, string DatosTurnoAsignacion, object userState) {
            if ((this.onBeginAsignaHorarioDelegate == null)) {
                this.onBeginAsignaHorarioDelegate = new BeginOperationDelegate(this.OnBeginAsignaHorario);
            }
            if ((this.onEndAsignaHorarioDelegate == null)) {
                this.onEndAsignaHorarioDelegate = new EndOperationDelegate(this.OnEndAsignaHorario);
            }
            if ((this.onAsignaHorarioCompletedDelegate == null)) {
                this.onAsignaHorarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAsignaHorarioCompleted);
            }
            base.InvokeAsync(this.onBeginAsignaHorarioDelegate, new object[] {
                        SesionSeguridad,
                        DatosTurnoAsignacion}, this.onEndAsignaHorarioDelegate, this.onAsignaHorarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginAsignaHorarioAPersonaDiarioIDs(string SesionSeguridad, string Persona_Diario_IDs, int Turno_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAsignaHorarioAPersonaDiarioIDs(SesionSeguridad, Persona_Diario_IDs, Turno_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int eClockBase.ES_Turnos.S_Turnos.EndAsignaHorarioAPersonaDiarioIDs(System.IAsyncResult result) {
            return base.Channel.EndAsignaHorarioAPersonaDiarioIDs(result);
        }
        
        private System.IAsyncResult OnBeginAsignaHorarioAPersonaDiarioIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string Persona_Diario_IDs = ((string)(inValues[1]));
            int Turno_ID = ((int)(inValues[2]));
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginAsignaHorarioAPersonaDiarioIDs(SesionSeguridad, Persona_Diario_IDs, Turno_ID, callback, asyncState);
        }
        
        private object[] OnEndAsignaHorarioAPersonaDiarioIDs(System.IAsyncResult result) {
            int retVal = ((eClockBase.ES_Turnos.S_Turnos)(this)).EndAsignaHorarioAPersonaDiarioIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAsignaHorarioAPersonaDiarioIDsCompleted(object state) {
            if ((this.AsignaHorarioAPersonaDiarioIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AsignaHorarioAPersonaDiarioIDsCompleted(this, new AsignaHorarioAPersonaDiarioIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AsignaHorarioAPersonaDiarioIDsAsync(string SesionSeguridad, string Persona_Diario_IDs, int Turno_ID) {
            this.AsignaHorarioAPersonaDiarioIDsAsync(SesionSeguridad, Persona_Diario_IDs, Turno_ID, null);
        }
        
        public void AsignaHorarioAPersonaDiarioIDsAsync(string SesionSeguridad, string Persona_Diario_IDs, int Turno_ID, object userState) {
            if ((this.onBeginAsignaHorarioAPersonaDiarioIDsDelegate == null)) {
                this.onBeginAsignaHorarioAPersonaDiarioIDsDelegate = new BeginOperationDelegate(this.OnBeginAsignaHorarioAPersonaDiarioIDs);
            }
            if ((this.onEndAsignaHorarioAPersonaDiarioIDsDelegate == null)) {
                this.onEndAsignaHorarioAPersonaDiarioIDsDelegate = new EndOperationDelegate(this.OnEndAsignaHorarioAPersonaDiarioIDs);
            }
            if ((this.onAsignaHorarioAPersonaDiarioIDsCompletedDelegate == null)) {
                this.onAsignaHorarioAPersonaDiarioIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAsignaHorarioAPersonaDiarioIDsCompleted);
            }
            base.InvokeAsync(this.onBeginAsignaHorarioAPersonaDiarioIDsDelegate, new object[] {
                        SesionSeguridad,
                        Persona_Diario_IDs,
                        Turno_ID}, this.onEndAsignaHorarioAPersonaDiarioIDsDelegate, this.onAsignaHorarioAPersonaDiarioIDsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Turnos.S_Turnos.BeginAsignaHorarioPredeterminadoAPersonaDiarioIDs(string SesionSeguridad, string Persona_Diario_IDs, int Turno_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAsignaHorarioPredeterminadoAPersonaDiarioIDs(SesionSeguridad, Persona_Diario_IDs, Turno_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int eClockBase.ES_Turnos.S_Turnos.EndAsignaHorarioPredeterminadoAPersonaDiarioIDs(System.IAsyncResult result) {
            return base.Channel.EndAsignaHorarioPredeterminadoAPersonaDiarioIDs(result);
        }
        
        private System.IAsyncResult OnBeginAsignaHorarioPredeterminadoAPersonaDiarioIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string Persona_Diario_IDs = ((string)(inValues[1]));
            int Turno_ID = ((int)(inValues[2]));
            return ((eClockBase.ES_Turnos.S_Turnos)(this)).BeginAsignaHorarioPredeterminadoAPersonaDiarioIDs(SesionSeguridad, Persona_Diario_IDs, Turno_ID, callback, asyncState);
        }
        
        private object[] OnEndAsignaHorarioPredeterminadoAPersonaDiarioIDs(System.IAsyncResult result) {
            int retVal = ((eClockBase.ES_Turnos.S_Turnos)(this)).EndAsignaHorarioPredeterminadoAPersonaDiarioIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAsignaHorarioPredeterminadoAPersonaDiarioIDsCompleted(object state) {
            if ((this.AsignaHorarioPredeterminadoAPersonaDiarioIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AsignaHorarioPredeterminadoAPersonaDiarioIDsCompleted(this, new AsignaHorarioPredeterminadoAPersonaDiarioIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AsignaHorarioPredeterminadoAPersonaDiarioIDsAsync(string SesionSeguridad, string Persona_Diario_IDs, int Turno_ID) {
            this.AsignaHorarioPredeterminadoAPersonaDiarioIDsAsync(SesionSeguridad, Persona_Diario_IDs, Turno_ID, null);
        }
        
        public void AsignaHorarioPredeterminadoAPersonaDiarioIDsAsync(string SesionSeguridad, string Persona_Diario_IDs, int Turno_ID, object userState) {
            if ((this.onBeginAsignaHorarioPredeterminadoAPersonaDiarioIDsDelegate == null)) {
                this.onBeginAsignaHorarioPredeterminadoAPersonaDiarioIDsDelegate = new BeginOperationDelegate(this.OnBeginAsignaHorarioPredeterminadoAPersonaDiarioIDs);
            }
            if ((this.onEndAsignaHorarioPredeterminadoAPersonaDiarioIDsDelegate == null)) {
                this.onEndAsignaHorarioPredeterminadoAPersonaDiarioIDsDelegate = new EndOperationDelegate(this.OnEndAsignaHorarioPredeterminadoAPersonaDiarioIDs);
            }
            if ((this.onAsignaHorarioPredeterminadoAPersonaDiarioIDsCompletedDelegate == null)) {
                this.onAsignaHorarioPredeterminadoAPersonaDiarioIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAsignaHorarioPredeterminadoAPersonaDiarioIDsCompleted);
            }
            base.InvokeAsync(this.onBeginAsignaHorarioPredeterminadoAPersonaDiarioIDsDelegate, new object[] {
                        SesionSeguridad,
                        Persona_Diario_IDs,
                        Turno_ID}, this.onEndAsignaHorarioPredeterminadoAPersonaDiarioIDsDelegate, this.onAsignaHorarioPredeterminadoAPersonaDiarioIDsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override eClockBase.ES_Turnos.S_Turnos CreateChannel() {
            return new S_TurnosClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_S_Turnos)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_S_Turnos)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:50723/S_Turnos.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return S_TurnosClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_S_Turnos);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return S_TurnosClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_S_Turnos);
        }
        
        private class S_TurnosClientChannel : ChannelBase<eClockBase.ES_Turnos.S_Turnos>, eClockBase.ES_Turnos.S_Turnos {
            
            public S_TurnosClientChannel(System.ServiceModel.ClientBase<eClockBase.ES_Turnos.S_Turnos> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginObtenTurnosDSMenu(string SesionSeguridad, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = SesionSeguridad;
                System.IAsyncResult _result = base.BeginInvoke("ObtenTurnosDSMenu", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenTurnosDSMenu(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenTurnosDSMenu", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAsignaTurnoPredeterminado(string Persona_Link_IDS, int Turno_ID, string SesionSeguridad, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = Persona_Link_IDS;
                _args[1] = Turno_ID;
                _args[2] = SesionSeguridad;
                System.IAsyncResult _result = base.BeginInvoke("AsignaTurnoPredeterminado", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAsignaTurnoPredeterminado(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AsignaTurnoPredeterminado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAsignaTurnoDia(string Persona_Diario_IDS, int Turno_Dia_ID, string SesionSeguridad, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = Persona_Diario_IDS;
                _args[1] = Turno_Dia_ID;
                _args[2] = SesionSeguridad;
                System.IAsyncResult _result = base.BeginInvoke("AsignaTurnoDia", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAsignaTurnoDia(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AsignaTurnoDia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAsignaTurnoRangoFechas(string Persona_Diario_IDS, int Turno_ID, System.DateTime FechaInicio, System.DateTime FechaFin, string SesionSeguridad, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = Persona_Diario_IDS;
                _args[1] = Turno_ID;
                _args[2] = FechaInicio;
                _args[3] = FechaFin;
                _args[4] = SesionSeguridad;
                System.IAsyncResult _result = base.BeginInvoke("AsignaTurnoRangoFechas", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAsignaTurnoRangoFechas(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AsignaTurnoRangoFechas", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAsignaTurnoNombreRangoFechas(string Persona_Diario_IDS, string Turno_Nombre, System.DateTime FechaInicio, System.DateTime FechaFin, string SesionSeguridad, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = Persona_Diario_IDS;
                _args[1] = Turno_Nombre;
                _args[2] = FechaInicio;
                _args[3] = FechaFin;
                _args[4] = SesionSeguridad;
                System.IAsyncResult _result = base.BeginInvoke("AsignaTurnoNombreRangoFechas", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAsignaTurnoNombreRangoFechas(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AsignaTurnoNombreRangoFechas", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenDatos(string SesionSeguridad, int Turno_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SesionSeguridad;
                _args[1] = Turno_ID;
                System.IAsyncResult _result = base.BeginInvoke("ObtenDatos", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenDatos(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenDatos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGuardaDatos(string SesionSeguridad, string Datos, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SesionSeguridad;
                _args[1] = Datos;
                System.IAsyncResult _result = base.BeginInvoke("GuardaDatos", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGuardaDatos(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GuardaDatos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAsignacionTurnosAEmpleados(string SesionSeguridad, string DatosTurnoImportacion, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SesionSeguridad;
                _args[1] = DatosTurnoImportacion;
                System.IAsyncResult _result = base.BeginInvoke("AsignacionTurnosAEmpleados", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAsignacionTurnosAEmpleados(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AsignacionTurnosAEmpleados", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAsignaHorario(string SesionSeguridad, string DatosTurnoAsignacion, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SesionSeguridad;
                _args[1] = DatosTurnoAsignacion;
                System.IAsyncResult _result = base.BeginInvoke("AsignaHorario", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAsignaHorario(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AsignaHorario", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAsignaHorarioAPersonaDiarioIDs(string SesionSeguridad, string Persona_Diario_IDs, int Turno_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = SesionSeguridad;
                _args[1] = Persona_Diario_IDs;
                _args[2] = Turno_ID;
                System.IAsyncResult _result = base.BeginInvoke("AsignaHorarioAPersonaDiarioIDs", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAsignaHorarioAPersonaDiarioIDs(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AsignaHorarioAPersonaDiarioIDs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAsignaHorarioPredeterminadoAPersonaDiarioIDs(string SesionSeguridad, string Persona_Diario_IDs, int Turno_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = SesionSeguridad;
                _args[1] = Persona_Diario_IDs;
                _args[2] = Turno_ID;
                System.IAsyncResult _result = base.BeginInvoke("AsignaHorarioPredeterminadoAPersonaDiarioIDs", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAsignaHorarioPredeterminadoAPersonaDiarioIDs(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AsignaHorarioPredeterminadoAPersonaDiarioIDs", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_S_Turnos,
        }
    }
}
