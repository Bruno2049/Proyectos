//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eClockBase.ES_Accesos {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ES_Accesos.S_Accesos")]
    public interface S_Accesos {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Accesos/DoWork", ReplyAction="urn:S_Accesos/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Accesos/ObtenAccesos", ReplyAction="urn:S_Accesos/ObtenAccesosResponse")]
        System.IAsyncResult BeginObtenAccesos(string SesionSeguridad, bool MuestraAgrupacion, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string TerminalesIDs, string TipoAccesosIds, System.AsyncCallback callback, object asyncState);
        
        string EndObtenAccesos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Accesos/AgregaChecada", ReplyAction="urn:S_Accesos/AgregaChecadaResponse")]
        System.IAsyncResult BeginAgregaChecada(string SesionSeguridad, int TerminalID, string Llave, System.DateTime FechaHora, int TAccesoID, bool AgregarInmediatamente, System.AsyncCallback callback, object asyncState);
        
        bool EndAgregaChecada(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Accesos/AgregarAcceso", ReplyAction="urn:S_Accesos/AgregarAccesoResponse")]
        System.IAsyncResult BeginAgregarAcceso(string SesionSeguridad, int TerminalID, int PersonaID, System.DateTime FechaHora, int TAccesoID, System.AsyncCallback callback, object asyncState);
        
        int EndAgregarAcceso(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Accesos/AgregaAccesos", ReplyAction="urn:S_Accesos/AgregaAccesosResponse")]
        System.IAsyncResult BeginAgregaAccesos(string SesionSeguridad, string DatoAccesos, System.AsyncCallback callback, object asyncState);
        
        string EndAgregaAccesos(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface S_AccesosChannel : eClockBase.ES_Accesos.S_Accesos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenAccesosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenAccesosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgregaChecadaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AgregaChecadaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgregarAccesoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AgregarAccesoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgregaAccesosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AgregaAccesosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class S_AccesosClient : System.ServiceModel.ClientBase<eClockBase.ES_Accesos.S_Accesos>, eClockBase.ES_Accesos.S_Accesos {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenAccesosDelegate;
        
        private EndOperationDelegate onEndObtenAccesosDelegate;
        
        private System.Threading.SendOrPostCallback onObtenAccesosCompletedDelegate;
        
        private BeginOperationDelegate onBeginAgregaChecadaDelegate;
        
        private EndOperationDelegate onEndAgregaChecadaDelegate;
        
        private System.Threading.SendOrPostCallback onAgregaChecadaCompletedDelegate;
        
        private BeginOperationDelegate onBeginAgregarAccesoDelegate;
        
        private EndOperationDelegate onEndAgregarAccesoDelegate;
        
        private System.Threading.SendOrPostCallback onAgregarAccesoCompletedDelegate;
        
        private BeginOperationDelegate onBeginAgregaAccesosDelegate;
        
        private EndOperationDelegate onEndAgregaAccesosDelegate;
        
        private System.Threading.SendOrPostCallback onAgregaAccesosCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public S_AccesosClient() : 
                base(S_AccesosClient.GetDefaultBinding(), S_AccesosClient.GetDefaultEndpointAddress()) {
        }
        
        public S_AccesosClient(EndpointConfiguration endpointConfiguration) : 
                base(S_AccesosClient.GetBindingForEndpoint(endpointConfiguration), S_AccesosClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public S_AccesosClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(S_AccesosClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public S_AccesosClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(S_AccesosClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public S_AccesosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<ObtenAccesosCompletedEventArgs> ObtenAccesosCompleted;
        
        public event System.EventHandler<AgregaChecadaCompletedEventArgs> AgregaChecadaCompleted;
        
        public event System.EventHandler<AgregarAccesoCompletedEventArgs> AgregarAccesoCompleted;
        
        public event System.EventHandler<AgregaAccesosCompletedEventArgs> AgregaAccesosCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Accesos.S_Accesos.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eClockBase.ES_Accesos.S_Accesos.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eClockBase.ES_Accesos.S_Accesos)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((eClockBase.ES_Accesos.S_Accesos)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Accesos.S_Accesos.BeginObtenAccesos(string SesionSeguridad, bool MuestraAgrupacion, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string TerminalesIDs, string TipoAccesosIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenAccesos(SesionSeguridad, MuestraAgrupacion, Persona_ID, Agrupacion, FechaInicial, FechaFinal, TerminalesIDs, TipoAccesosIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Accesos.S_Accesos.EndObtenAccesos(System.IAsyncResult result) {
            return base.Channel.EndObtenAccesos(result);
        }
        
        private System.IAsyncResult OnBeginObtenAccesos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            bool MuestraAgrupacion = ((bool)(inValues[1]));
            int Persona_ID = ((int)(inValues[2]));
            string Agrupacion = ((string)(inValues[3]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[4]));
            System.DateTime FechaFinal = ((System.DateTime)(inValues[5]));
            string TerminalesIDs = ((string)(inValues[6]));
            string TipoAccesosIds = ((string)(inValues[7]));
            return ((eClockBase.ES_Accesos.S_Accesos)(this)).BeginObtenAccesos(SesionSeguridad, MuestraAgrupacion, Persona_ID, Agrupacion, FechaInicial, FechaFinal, TerminalesIDs, TipoAccesosIds, callback, asyncState);
        }
        
        private object[] OnEndObtenAccesos(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Accesos.S_Accesos)(this)).EndObtenAccesos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenAccesosCompleted(object state) {
            if ((this.ObtenAccesosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenAccesosCompleted(this, new ObtenAccesosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenAccesosAsync(string SesionSeguridad, bool MuestraAgrupacion, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string TerminalesIDs, string TipoAccesosIds) {
            this.ObtenAccesosAsync(SesionSeguridad, MuestraAgrupacion, Persona_ID, Agrupacion, FechaInicial, FechaFinal, TerminalesIDs, TipoAccesosIds, null);
        }
        
        public void ObtenAccesosAsync(string SesionSeguridad, bool MuestraAgrupacion, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string TerminalesIDs, string TipoAccesosIds, object userState) {
            if ((this.onBeginObtenAccesosDelegate == null)) {
                this.onBeginObtenAccesosDelegate = new BeginOperationDelegate(this.OnBeginObtenAccesos);
            }
            if ((this.onEndObtenAccesosDelegate == null)) {
                this.onEndObtenAccesosDelegate = new EndOperationDelegate(this.OnEndObtenAccesos);
            }
            if ((this.onObtenAccesosCompletedDelegate == null)) {
                this.onObtenAccesosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenAccesosCompleted);
            }
            base.InvokeAsync(this.onBeginObtenAccesosDelegate, new object[] {
                        SesionSeguridad,
                        MuestraAgrupacion,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial,
                        FechaFinal,
                        TerminalesIDs,
                        TipoAccesosIds}, this.onEndObtenAccesosDelegate, this.onObtenAccesosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Accesos.S_Accesos.BeginAgregaChecada(string SesionSeguridad, int TerminalID, string Llave, System.DateTime FechaHora, int TAccesoID, bool AgregarInmediatamente, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAgregaChecada(SesionSeguridad, TerminalID, Llave, FechaHora, TAccesoID, AgregarInmediatamente, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool eClockBase.ES_Accesos.S_Accesos.EndAgregaChecada(System.IAsyncResult result) {
            return base.Channel.EndAgregaChecada(result);
        }
        
        private System.IAsyncResult OnBeginAgregaChecada(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int TerminalID = ((int)(inValues[1]));
            string Llave = ((string)(inValues[2]));
            System.DateTime FechaHora = ((System.DateTime)(inValues[3]));
            int TAccesoID = ((int)(inValues[4]));
            bool AgregarInmediatamente = ((bool)(inValues[5]));
            return ((eClockBase.ES_Accesos.S_Accesos)(this)).BeginAgregaChecada(SesionSeguridad, TerminalID, Llave, FechaHora, TAccesoID, AgregarInmediatamente, callback, asyncState);
        }
        
        private object[] OnEndAgregaChecada(System.IAsyncResult result) {
            bool retVal = ((eClockBase.ES_Accesos.S_Accesos)(this)).EndAgregaChecada(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAgregaChecadaCompleted(object state) {
            if ((this.AgregaChecadaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AgregaChecadaCompleted(this, new AgregaChecadaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AgregaChecadaAsync(string SesionSeguridad, int TerminalID, string Llave, System.DateTime FechaHora, int TAccesoID, bool AgregarInmediatamente) {
            this.AgregaChecadaAsync(SesionSeguridad, TerminalID, Llave, FechaHora, TAccesoID, AgregarInmediatamente, null);
        }
        
        public void AgregaChecadaAsync(string SesionSeguridad, int TerminalID, string Llave, System.DateTime FechaHora, int TAccesoID, bool AgregarInmediatamente, object userState) {
            if ((this.onBeginAgregaChecadaDelegate == null)) {
                this.onBeginAgregaChecadaDelegate = new BeginOperationDelegate(this.OnBeginAgregaChecada);
            }
            if ((this.onEndAgregaChecadaDelegate == null)) {
                this.onEndAgregaChecadaDelegate = new EndOperationDelegate(this.OnEndAgregaChecada);
            }
            if ((this.onAgregaChecadaCompletedDelegate == null)) {
                this.onAgregaChecadaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAgregaChecadaCompleted);
            }
            base.InvokeAsync(this.onBeginAgregaChecadaDelegate, new object[] {
                        SesionSeguridad,
                        TerminalID,
                        Llave,
                        FechaHora,
                        TAccesoID,
                        AgregarInmediatamente}, this.onEndAgregaChecadaDelegate, this.onAgregaChecadaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Accesos.S_Accesos.BeginAgregarAcceso(string SesionSeguridad, int TerminalID, int PersonaID, System.DateTime FechaHora, int TAccesoID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAgregarAcceso(SesionSeguridad, TerminalID, PersonaID, FechaHora, TAccesoID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int eClockBase.ES_Accesos.S_Accesos.EndAgregarAcceso(System.IAsyncResult result) {
            return base.Channel.EndAgregarAcceso(result);
        }
        
        private System.IAsyncResult OnBeginAgregarAcceso(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int TerminalID = ((int)(inValues[1]));
            int PersonaID = ((int)(inValues[2]));
            System.DateTime FechaHora = ((System.DateTime)(inValues[3]));
            int TAccesoID = ((int)(inValues[4]));
            return ((eClockBase.ES_Accesos.S_Accesos)(this)).BeginAgregarAcceso(SesionSeguridad, TerminalID, PersonaID, FechaHora, TAccesoID, callback, asyncState);
        }
        
        private object[] OnEndAgregarAcceso(System.IAsyncResult result) {
            int retVal = ((eClockBase.ES_Accesos.S_Accesos)(this)).EndAgregarAcceso(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAgregarAccesoCompleted(object state) {
            if ((this.AgregarAccesoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AgregarAccesoCompleted(this, new AgregarAccesoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AgregarAccesoAsync(string SesionSeguridad, int TerminalID, int PersonaID, System.DateTime FechaHora, int TAccesoID) {
            this.AgregarAccesoAsync(SesionSeguridad, TerminalID, PersonaID, FechaHora, TAccesoID, null);
        }
        
        public void AgregarAccesoAsync(string SesionSeguridad, int TerminalID, int PersonaID, System.DateTime FechaHora, int TAccesoID, object userState) {
            if ((this.onBeginAgregarAccesoDelegate == null)) {
                this.onBeginAgregarAccesoDelegate = new BeginOperationDelegate(this.OnBeginAgregarAcceso);
            }
            if ((this.onEndAgregarAccesoDelegate == null)) {
                this.onEndAgregarAccesoDelegate = new EndOperationDelegate(this.OnEndAgregarAcceso);
            }
            if ((this.onAgregarAccesoCompletedDelegate == null)) {
                this.onAgregarAccesoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAgregarAccesoCompleted);
            }
            base.InvokeAsync(this.onBeginAgregarAccesoDelegate, new object[] {
                        SesionSeguridad,
                        TerminalID,
                        PersonaID,
                        FechaHora,
                        TAccesoID}, this.onEndAgregarAccesoDelegate, this.onAgregarAccesoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Accesos.S_Accesos.BeginAgregaAccesos(string SesionSeguridad, string DatoAccesos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAgregaAccesos(SesionSeguridad, DatoAccesos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Accesos.S_Accesos.EndAgregaAccesos(System.IAsyncResult result) {
            return base.Channel.EndAgregaAccesos(result);
        }
        
        private System.IAsyncResult OnBeginAgregaAccesos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string DatoAccesos = ((string)(inValues[1]));
            return ((eClockBase.ES_Accesos.S_Accesos)(this)).BeginAgregaAccesos(SesionSeguridad, DatoAccesos, callback, asyncState);
        }
        
        private object[] OnEndAgregaAccesos(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Accesos.S_Accesos)(this)).EndAgregaAccesos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAgregaAccesosCompleted(object state) {
            if ((this.AgregaAccesosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AgregaAccesosCompleted(this, new AgregaAccesosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AgregaAccesosAsync(string SesionSeguridad, string DatoAccesos) {
            this.AgregaAccesosAsync(SesionSeguridad, DatoAccesos, null);
        }
        
        public void AgregaAccesosAsync(string SesionSeguridad, string DatoAccesos, object userState) {
            if ((this.onBeginAgregaAccesosDelegate == null)) {
                this.onBeginAgregaAccesosDelegate = new BeginOperationDelegate(this.OnBeginAgregaAccesos);
            }
            if ((this.onEndAgregaAccesosDelegate == null)) {
                this.onEndAgregaAccesosDelegate = new EndOperationDelegate(this.OnEndAgregaAccesos);
            }
            if ((this.onAgregaAccesosCompletedDelegate == null)) {
                this.onAgregaAccesosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAgregaAccesosCompleted);
            }
            base.InvokeAsync(this.onBeginAgregaAccesosDelegate, new object[] {
                        SesionSeguridad,
                        DatoAccesos}, this.onEndAgregaAccesosDelegate, this.onAgregaAccesosCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override eClockBase.ES_Accesos.S_Accesos CreateChannel() {
            return new S_AccesosClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_S_Accesos)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_S_Accesos)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:50723/S_Accesos.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return S_AccesosClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_S_Accesos);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return S_AccesosClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_S_Accesos);
        }
        
        private class S_AccesosClientChannel : ChannelBase<eClockBase.ES_Accesos.S_Accesos>, eClockBase.ES_Accesos.S_Accesos {
            
            public S_AccesosClientChannel(System.ServiceModel.ClientBase<eClockBase.ES_Accesos.S_Accesos> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginObtenAccesos(string SesionSeguridad, bool MuestraAgrupacion, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string TerminalesIDs, string TipoAccesosIds, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = SesionSeguridad;
                _args[1] = MuestraAgrupacion;
                _args[2] = Persona_ID;
                _args[3] = Agrupacion;
                _args[4] = FechaInicial;
                _args[5] = FechaFinal;
                _args[6] = TerminalesIDs;
                _args[7] = TipoAccesosIds;
                System.IAsyncResult _result = base.BeginInvoke("ObtenAccesos", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenAccesos(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenAccesos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAgregaChecada(string SesionSeguridad, int TerminalID, string Llave, System.DateTime FechaHora, int TAccesoID, bool AgregarInmediatamente, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = SesionSeguridad;
                _args[1] = TerminalID;
                _args[2] = Llave;
                _args[3] = FechaHora;
                _args[4] = TAccesoID;
                _args[5] = AgregarInmediatamente;
                System.IAsyncResult _result = base.BeginInvoke("AgregaChecada", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAgregaChecada(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AgregaChecada", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAgregarAcceso(string SesionSeguridad, int TerminalID, int PersonaID, System.DateTime FechaHora, int TAccesoID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = SesionSeguridad;
                _args[1] = TerminalID;
                _args[2] = PersonaID;
                _args[3] = FechaHora;
                _args[4] = TAccesoID;
                System.IAsyncResult _result = base.BeginInvoke("AgregarAcceso", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAgregarAcceso(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AgregarAcceso", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAgregaAccesos(string SesionSeguridad, string DatoAccesos, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SesionSeguridad;
                _args[1] = DatoAccesos;
                System.IAsyncResult _result = base.BeginInvoke("AgregaAccesos", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAgregaAccesos(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AgregaAccesos", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_S_Accesos,
        }
    }
}
