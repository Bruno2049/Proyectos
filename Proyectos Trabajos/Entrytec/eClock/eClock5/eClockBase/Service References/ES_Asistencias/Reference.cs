//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eClockBase.ES_Asistencias {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ES_Asistencias.S_Asistencias")]
    public interface S_Asistencias {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/DoWork", ReplyAction="urn:S_Asistencias/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenAsistenciaGrafica", ReplyAction="urn:S_Asistencias/ObtenAsistenciaGraficaResponse")]
        System.IAsyncResult BeginObtenAsistenciaGrafica(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, bool MostrarFecha, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState);
        
        string EndObtenAsistenciaGrafica(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenAsistencia", ReplyAction="urn:S_Asistencias/ObtenAsistenciaResponse")]
        System.IAsyncResult BeginObtenAsistencia(
                    string SesionSeguridad, 
                    bool EntradaSalida, 
                    bool Comida, 
                    bool HorasExtras, 
                    bool Totales, 
                    bool Incidencia, 
                    bool TurnoDia, 
                    string TiposIncidenciasSistemaIDs, 
                    string TiposIncidenciasIDs, 
                    bool MuestraAgrupacion, 
                    bool MuestraEmpleado, 
                    int Persona_ID, 
                    string Agrupacion, 
                    System.DateTime FechaInicial, 
                    System.DateTime FechaFinal, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndObtenAsistencia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenAsistenciaLineal", ReplyAction="urn:S_Asistencias/ObtenAsistenciaLinealResponse")]
        System.IAsyncResult BeginObtenAsistenciaLineal(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string Campos, string OrdenarPor, string TiposIncidenciasSistemaIDs, string TiposIncidenciasIDs, System.AsyncCallback callback, object asyncState);
        
        string EndObtenAsistenciaLineal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenAsistenciaLinealN", ReplyAction="urn:S_Asistencias/ObtenAsistenciaLinealNResponse")]
        System.IAsyncResult BeginObtenAsistenciaLinealN(string SesionSeguridad, int PERSONA_DIARIO_ID_INICIO, int PERSONA_DIARIO_ID_FIN, string Lang, System.AsyncCallback callback, object asyncState);
        
        string EndObtenAsistenciaLinealN(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenAsistenciaLinealV5", ReplyAction="urn:S_Asistencias/ObtenAsistenciaLinealV5Response")]
        System.IAsyncResult BeginObtenAsistenciaLinealV5(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string OrdenarPor, string TiposIncidenciasSistemaIDs, string TiposIncidenciasIDs, string Lang, System.AsyncCallback callback, object asyncState);
        
        string EndObtenAsistenciaLinealV5(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenAsistenciaHorizontal", ReplyAction="urn:S_Asistencias/ObtenAsistenciaHorizontalResponse")]
        System.IAsyncResult BeginObtenAsistenciaHorizontal(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool IncidenciaAbr, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState);
        
        string EndObtenAsistenciaHorizontal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenAsistenciaHorizontalN", ReplyAction="urn:S_Asistencias/ObtenAsistenciaHorizontalNResponse")]
        System.IAsyncResult BeginObtenAsistenciaHorizontalN(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool IncidenciaAbr, bool ColorTurno, bool ColorIncidencia, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string Lang, System.AsyncCallback callback, object asyncState);
        
        string EndObtenAsistenciaHorizontalN(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenAsistenciaSemanal", ReplyAction="urn:S_Asistencias/ObtenAsistenciaSemanalResponse")]
        System.IAsyncResult BeginObtenAsistenciaSemanal(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.AsyncCallback callback, object asyncState);
        
        string EndObtenAsistenciaSemanal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenHorasExtras", ReplyAction="urn:S_Asistencias/ObtenHorasExtrasResponse")]
        System.IAsyncResult BeginObtenHorasExtras(string SesionSeguridad, bool EntradaSalida, bool Comida, bool Totales, bool Incidencia, bool TurnoDia, bool MuestraAgrupacion, bool MuestraEmpleado, bool MuestraCeros, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState);
        
        string EndObtenHorasExtras(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/AplicaHorasExtras", ReplyAction="urn:S_Asistencias/AplicaHorasExtrasResponse")]
        System.IAsyncResult BeginAplicaHorasExtras(string SesionSeguridad, string ListadoAplicaHorasExtras, bool EsAvanzada, System.AsyncCallback callback, object asyncState);
        
        string EndAplicaHorasExtras(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/QuitaHorasExtras", ReplyAction="urn:S_Asistencias/QuitaHorasExtrasResponse")]
        System.IAsyncResult BeginQuitaHorasExtras(string SesionSeguridad, string PERSONA_D_HE_IDs, bool Forzar, System.AsyncCallback callback, object asyncState);
        
        string EndQuitaHorasExtras(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenAsistenciaTotalesSaldos", ReplyAction="urn:S_Asistencias/ObtenAsistenciaTotalesSaldosResponse")]
        System.IAsyncResult BeginObtenAsistenciaTotalesSaldos(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState);
        
        string EndObtenAsistenciaTotalesSaldos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenAsistenciaTotales", ReplyAction="urn:S_Asistencias/ObtenAsistenciaTotalesResponse")]
        System.IAsyncResult BeginObtenAsistenciaTotales(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState);
        
        string EndObtenAsistenciaTotales(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:S_Asistencias/ObtenTiempos", ReplyAction="urn:S_Asistencias/ObtenTiemposResponse")]
        System.IAsyncResult BeginObtenTiempos(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState);
        
        string EndObtenTiempos(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface S_AsistenciasChannel : eClockBase.ES_Asistencias.S_Asistencias, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenAsistenciaGraficaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenAsistenciaGraficaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenAsistenciaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenAsistenciaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenAsistenciaLinealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenAsistenciaLinealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenAsistenciaLinealNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenAsistenciaLinealNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenAsistenciaLinealV5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenAsistenciaLinealV5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenAsistenciaHorizontalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenAsistenciaHorizontalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenAsistenciaHorizontalNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenAsistenciaHorizontalNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenAsistenciaSemanalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenAsistenciaSemanalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenHorasExtrasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenHorasExtrasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AplicaHorasExtrasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AplicaHorasExtrasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuitaHorasExtrasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QuitaHorasExtrasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenAsistenciaTotalesSaldosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenAsistenciaTotalesSaldosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenAsistenciaTotalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenAsistenciaTotalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenTiemposCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenTiemposCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class S_AsistenciasClient : System.ServiceModel.ClientBase<eClockBase.ES_Asistencias.S_Asistencias>, eClockBase.ES_Asistencias.S_Asistencias {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenAsistenciaGraficaDelegate;
        
        private EndOperationDelegate onEndObtenAsistenciaGraficaDelegate;
        
        private System.Threading.SendOrPostCallback onObtenAsistenciaGraficaCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenAsistenciaDelegate;
        
        private EndOperationDelegate onEndObtenAsistenciaDelegate;
        
        private System.Threading.SendOrPostCallback onObtenAsistenciaCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenAsistenciaLinealDelegate;
        
        private EndOperationDelegate onEndObtenAsistenciaLinealDelegate;
        
        private System.Threading.SendOrPostCallback onObtenAsistenciaLinealCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenAsistenciaLinealNDelegate;
        
        private EndOperationDelegate onEndObtenAsistenciaLinealNDelegate;
        
        private System.Threading.SendOrPostCallback onObtenAsistenciaLinealNCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenAsistenciaLinealV5Delegate;
        
        private EndOperationDelegate onEndObtenAsistenciaLinealV5Delegate;
        
        private System.Threading.SendOrPostCallback onObtenAsistenciaLinealV5CompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenAsistenciaHorizontalDelegate;
        
        private EndOperationDelegate onEndObtenAsistenciaHorizontalDelegate;
        
        private System.Threading.SendOrPostCallback onObtenAsistenciaHorizontalCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenAsistenciaHorizontalNDelegate;
        
        private EndOperationDelegate onEndObtenAsistenciaHorizontalNDelegate;
        
        private System.Threading.SendOrPostCallback onObtenAsistenciaHorizontalNCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenAsistenciaSemanalDelegate;
        
        private EndOperationDelegate onEndObtenAsistenciaSemanalDelegate;
        
        private System.Threading.SendOrPostCallback onObtenAsistenciaSemanalCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenHorasExtrasDelegate;
        
        private EndOperationDelegate onEndObtenHorasExtrasDelegate;
        
        private System.Threading.SendOrPostCallback onObtenHorasExtrasCompletedDelegate;
        
        private BeginOperationDelegate onBeginAplicaHorasExtrasDelegate;
        
        private EndOperationDelegate onEndAplicaHorasExtrasDelegate;
        
        private System.Threading.SendOrPostCallback onAplicaHorasExtrasCompletedDelegate;
        
        private BeginOperationDelegate onBeginQuitaHorasExtrasDelegate;
        
        private EndOperationDelegate onEndQuitaHorasExtrasDelegate;
        
        private System.Threading.SendOrPostCallback onQuitaHorasExtrasCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenAsistenciaTotalesSaldosDelegate;
        
        private EndOperationDelegate onEndObtenAsistenciaTotalesSaldosDelegate;
        
        private System.Threading.SendOrPostCallback onObtenAsistenciaTotalesSaldosCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenAsistenciaTotalesDelegate;
        
        private EndOperationDelegate onEndObtenAsistenciaTotalesDelegate;
        
        private System.Threading.SendOrPostCallback onObtenAsistenciaTotalesCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenTiemposDelegate;
        
        private EndOperationDelegate onEndObtenTiemposDelegate;
        
        private System.Threading.SendOrPostCallback onObtenTiemposCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public S_AsistenciasClient() : 
                base(S_AsistenciasClient.GetDefaultBinding(), S_AsistenciasClient.GetDefaultEndpointAddress()) {
        }
        
        public S_AsistenciasClient(EndpointConfiguration endpointConfiguration) : 
                base(S_AsistenciasClient.GetBindingForEndpoint(endpointConfiguration), S_AsistenciasClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public S_AsistenciasClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(S_AsistenciasClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public S_AsistenciasClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(S_AsistenciasClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public S_AsistenciasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<ObtenAsistenciaGraficaCompletedEventArgs> ObtenAsistenciaGraficaCompleted;
        
        public event System.EventHandler<ObtenAsistenciaCompletedEventArgs> ObtenAsistenciaCompleted;
        
        public event System.EventHandler<ObtenAsistenciaLinealCompletedEventArgs> ObtenAsistenciaLinealCompleted;
        
        public event System.EventHandler<ObtenAsistenciaLinealNCompletedEventArgs> ObtenAsistenciaLinealNCompleted;
        
        public event System.EventHandler<ObtenAsistenciaLinealV5CompletedEventArgs> ObtenAsistenciaLinealV5Completed;
        
        public event System.EventHandler<ObtenAsistenciaHorizontalCompletedEventArgs> ObtenAsistenciaHorizontalCompleted;
        
        public event System.EventHandler<ObtenAsistenciaHorizontalNCompletedEventArgs> ObtenAsistenciaHorizontalNCompleted;
        
        public event System.EventHandler<ObtenAsistenciaSemanalCompletedEventArgs> ObtenAsistenciaSemanalCompleted;
        
        public event System.EventHandler<ObtenHorasExtrasCompletedEventArgs> ObtenHorasExtrasCompleted;
        
        public event System.EventHandler<AplicaHorasExtrasCompletedEventArgs> AplicaHorasExtrasCompleted;
        
        public event System.EventHandler<QuitaHorasExtrasCompletedEventArgs> QuitaHorasExtrasCompleted;
        
        public event System.EventHandler<ObtenAsistenciaTotalesSaldosCompletedEventArgs> ObtenAsistenciaTotalesSaldosCompleted;
        
        public event System.EventHandler<ObtenAsistenciaTotalesCompletedEventArgs> ObtenAsistenciaTotalesCompleted;
        
        public event System.EventHandler<ObtenTiemposCompletedEventArgs> ObtenTiemposCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eClockBase.ES_Asistencias.S_Asistencias.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenAsistenciaGrafica(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, bool MostrarFecha, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenAsistenciaGrafica(SesionSeguridad, MostrarAgrupacion, MostrarEmpleado, MostrarFecha, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenAsistenciaGrafica(System.IAsyncResult result) {
            return base.Channel.EndObtenAsistenciaGrafica(result);
        }
        
        private System.IAsyncResult OnBeginObtenAsistenciaGrafica(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            bool MostrarAgrupacion = ((bool)(inValues[1]));
            bool MostrarEmpleado = ((bool)(inValues[2]));
            bool MostrarFecha = ((bool)(inValues[3]));
            int Persona_ID = ((int)(inValues[4]));
            string Agrupacion = ((string)(inValues[5]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[6]));
            System.DateTime FechaFinal = ((System.DateTime)(inValues[7]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenAsistenciaGrafica(SesionSeguridad, MostrarAgrupacion, MostrarEmpleado, MostrarFecha, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        private object[] OnEndObtenAsistenciaGrafica(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenAsistenciaGrafica(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenAsistenciaGraficaCompleted(object state) {
            if ((this.ObtenAsistenciaGraficaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenAsistenciaGraficaCompleted(this, new ObtenAsistenciaGraficaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenAsistenciaGraficaAsync(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, bool MostrarFecha, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal) {
            this.ObtenAsistenciaGraficaAsync(SesionSeguridad, MostrarAgrupacion, MostrarEmpleado, MostrarFecha, Persona_ID, Agrupacion, FechaInicial, FechaFinal, null);
        }
        
        public void ObtenAsistenciaGraficaAsync(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, bool MostrarFecha, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, object userState) {
            if ((this.onBeginObtenAsistenciaGraficaDelegate == null)) {
                this.onBeginObtenAsistenciaGraficaDelegate = new BeginOperationDelegate(this.OnBeginObtenAsistenciaGrafica);
            }
            if ((this.onEndObtenAsistenciaGraficaDelegate == null)) {
                this.onEndObtenAsistenciaGraficaDelegate = new EndOperationDelegate(this.OnEndObtenAsistenciaGrafica);
            }
            if ((this.onObtenAsistenciaGraficaCompletedDelegate == null)) {
                this.onObtenAsistenciaGraficaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenAsistenciaGraficaCompleted);
            }
            base.InvokeAsync(this.onBeginObtenAsistenciaGraficaDelegate, new object[] {
                        SesionSeguridad,
                        MostrarAgrupacion,
                        MostrarEmpleado,
                        MostrarFecha,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial,
                        FechaFinal}, this.onEndObtenAsistenciaGraficaDelegate, this.onObtenAsistenciaGraficaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenAsistencia(
                    string SesionSeguridad, 
                    bool EntradaSalida, 
                    bool Comida, 
                    bool HorasExtras, 
                    bool Totales, 
                    bool Incidencia, 
                    bool TurnoDia, 
                    string TiposIncidenciasSistemaIDs, 
                    string TiposIncidenciasIDs, 
                    bool MuestraAgrupacion, 
                    bool MuestraEmpleado, 
                    int Persona_ID, 
                    string Agrupacion, 
                    System.DateTime FechaInicial, 
                    System.DateTime FechaFinal, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginObtenAsistencia(SesionSeguridad, EntradaSalida, Comida, HorasExtras, Totales, Incidencia, TurnoDia, TiposIncidenciasSistemaIDs, TiposIncidenciasIDs, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenAsistencia(System.IAsyncResult result) {
            return base.Channel.EndObtenAsistencia(result);
        }
        
        private System.IAsyncResult OnBeginObtenAsistencia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            bool EntradaSalida = ((bool)(inValues[1]));
            bool Comida = ((bool)(inValues[2]));
            bool HorasExtras = ((bool)(inValues[3]));
            bool Totales = ((bool)(inValues[4]));
            bool Incidencia = ((bool)(inValues[5]));
            bool TurnoDia = ((bool)(inValues[6]));
            string TiposIncidenciasSistemaIDs = ((string)(inValues[7]));
            string TiposIncidenciasIDs = ((string)(inValues[8]));
            bool MuestraAgrupacion = ((bool)(inValues[9]));
            bool MuestraEmpleado = ((bool)(inValues[10]));
            int Persona_ID = ((int)(inValues[11]));
            string Agrupacion = ((string)(inValues[12]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[13]));
            System.DateTime FechaFinal = ((System.DateTime)(inValues[14]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenAsistencia(SesionSeguridad, EntradaSalida, Comida, HorasExtras, Totales, Incidencia, TurnoDia, TiposIncidenciasSistemaIDs, TiposIncidenciasIDs, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        private object[] OnEndObtenAsistencia(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenAsistencia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenAsistenciaCompleted(object state) {
            if ((this.ObtenAsistenciaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenAsistenciaCompleted(this, new ObtenAsistenciaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenAsistenciaAsync(string SesionSeguridad, bool EntradaSalida, bool Comida, bool HorasExtras, bool Totales, bool Incidencia, bool TurnoDia, string TiposIncidenciasSistemaIDs, string TiposIncidenciasIDs, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal) {
            this.ObtenAsistenciaAsync(SesionSeguridad, EntradaSalida, Comida, HorasExtras, Totales, Incidencia, TurnoDia, TiposIncidenciasSistemaIDs, TiposIncidenciasIDs, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, null);
        }
        
        public void ObtenAsistenciaAsync(
                    string SesionSeguridad, 
                    bool EntradaSalida, 
                    bool Comida, 
                    bool HorasExtras, 
                    bool Totales, 
                    bool Incidencia, 
                    bool TurnoDia, 
                    string TiposIncidenciasSistemaIDs, 
                    string TiposIncidenciasIDs, 
                    bool MuestraAgrupacion, 
                    bool MuestraEmpleado, 
                    int Persona_ID, 
                    string Agrupacion, 
                    System.DateTime FechaInicial, 
                    System.DateTime FechaFinal, 
                    object userState) {
            if ((this.onBeginObtenAsistenciaDelegate == null)) {
                this.onBeginObtenAsistenciaDelegate = new BeginOperationDelegate(this.OnBeginObtenAsistencia);
            }
            if ((this.onEndObtenAsistenciaDelegate == null)) {
                this.onEndObtenAsistenciaDelegate = new EndOperationDelegate(this.OnEndObtenAsistencia);
            }
            if ((this.onObtenAsistenciaCompletedDelegate == null)) {
                this.onObtenAsistenciaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenAsistenciaCompleted);
            }
            base.InvokeAsync(this.onBeginObtenAsistenciaDelegate, new object[] {
                        SesionSeguridad,
                        EntradaSalida,
                        Comida,
                        HorasExtras,
                        Totales,
                        Incidencia,
                        TurnoDia,
                        TiposIncidenciasSistemaIDs,
                        TiposIncidenciasIDs,
                        MuestraAgrupacion,
                        MuestraEmpleado,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial,
                        FechaFinal}, this.onEndObtenAsistenciaDelegate, this.onObtenAsistenciaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenAsistenciaLineal(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string Campos, string OrdenarPor, string TiposIncidenciasSistemaIDs, string TiposIncidenciasIDs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenAsistenciaLineal(SesionSeguridad, Persona_ID, Agrupacion, FechaInicial, FechaFinal, Campos, OrdenarPor, TiposIncidenciasSistemaIDs, TiposIncidenciasIDs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenAsistenciaLineal(System.IAsyncResult result) {
            return base.Channel.EndObtenAsistenciaLineal(result);
        }
        
        private System.IAsyncResult OnBeginObtenAsistenciaLineal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int Persona_ID = ((int)(inValues[1]));
            string Agrupacion = ((string)(inValues[2]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[3]));
            System.DateTime FechaFinal = ((System.DateTime)(inValues[4]));
            string Campos = ((string)(inValues[5]));
            string OrdenarPor = ((string)(inValues[6]));
            string TiposIncidenciasSistemaIDs = ((string)(inValues[7]));
            string TiposIncidenciasIDs = ((string)(inValues[8]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenAsistenciaLineal(SesionSeguridad, Persona_ID, Agrupacion, FechaInicial, FechaFinal, Campos, OrdenarPor, TiposIncidenciasSistemaIDs, TiposIncidenciasIDs, callback, asyncState);
        }
        
        private object[] OnEndObtenAsistenciaLineal(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenAsistenciaLineal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenAsistenciaLinealCompleted(object state) {
            if ((this.ObtenAsistenciaLinealCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenAsistenciaLinealCompleted(this, new ObtenAsistenciaLinealCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenAsistenciaLinealAsync(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string Campos, string OrdenarPor, string TiposIncidenciasSistemaIDs, string TiposIncidenciasIDs) {
            this.ObtenAsistenciaLinealAsync(SesionSeguridad, Persona_ID, Agrupacion, FechaInicial, FechaFinal, Campos, OrdenarPor, TiposIncidenciasSistemaIDs, TiposIncidenciasIDs, null);
        }
        
        public void ObtenAsistenciaLinealAsync(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string Campos, string OrdenarPor, string TiposIncidenciasSistemaIDs, string TiposIncidenciasIDs, object userState) {
            if ((this.onBeginObtenAsistenciaLinealDelegate == null)) {
                this.onBeginObtenAsistenciaLinealDelegate = new BeginOperationDelegate(this.OnBeginObtenAsistenciaLineal);
            }
            if ((this.onEndObtenAsistenciaLinealDelegate == null)) {
                this.onEndObtenAsistenciaLinealDelegate = new EndOperationDelegate(this.OnEndObtenAsistenciaLineal);
            }
            if ((this.onObtenAsistenciaLinealCompletedDelegate == null)) {
                this.onObtenAsistenciaLinealCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenAsistenciaLinealCompleted);
            }
            base.InvokeAsync(this.onBeginObtenAsistenciaLinealDelegate, new object[] {
                        SesionSeguridad,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial,
                        FechaFinal,
                        Campos,
                        OrdenarPor,
                        TiposIncidenciasSistemaIDs,
                        TiposIncidenciasIDs}, this.onEndObtenAsistenciaLinealDelegate, this.onObtenAsistenciaLinealCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenAsistenciaLinealN(string SesionSeguridad, int PERSONA_DIARIO_ID_INICIO, int PERSONA_DIARIO_ID_FIN, string Lang, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenAsistenciaLinealN(SesionSeguridad, PERSONA_DIARIO_ID_INICIO, PERSONA_DIARIO_ID_FIN, Lang, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenAsistenciaLinealN(System.IAsyncResult result) {
            return base.Channel.EndObtenAsistenciaLinealN(result);
        }
        
        private System.IAsyncResult OnBeginObtenAsistenciaLinealN(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int PERSONA_DIARIO_ID_INICIO = ((int)(inValues[1]));
            int PERSONA_DIARIO_ID_FIN = ((int)(inValues[2]));
            string Lang = ((string)(inValues[3]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenAsistenciaLinealN(SesionSeguridad, PERSONA_DIARIO_ID_INICIO, PERSONA_DIARIO_ID_FIN, Lang, callback, asyncState);
        }
        
        private object[] OnEndObtenAsistenciaLinealN(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenAsistenciaLinealN(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenAsistenciaLinealNCompleted(object state) {
            if ((this.ObtenAsistenciaLinealNCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenAsistenciaLinealNCompleted(this, new ObtenAsistenciaLinealNCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenAsistenciaLinealNAsync(string SesionSeguridad, int PERSONA_DIARIO_ID_INICIO, int PERSONA_DIARIO_ID_FIN, string Lang) {
            this.ObtenAsistenciaLinealNAsync(SesionSeguridad, PERSONA_DIARIO_ID_INICIO, PERSONA_DIARIO_ID_FIN, Lang, null);
        }
        
        public void ObtenAsistenciaLinealNAsync(string SesionSeguridad, int PERSONA_DIARIO_ID_INICIO, int PERSONA_DIARIO_ID_FIN, string Lang, object userState) {
            if ((this.onBeginObtenAsistenciaLinealNDelegate == null)) {
                this.onBeginObtenAsistenciaLinealNDelegate = new BeginOperationDelegate(this.OnBeginObtenAsistenciaLinealN);
            }
            if ((this.onEndObtenAsistenciaLinealNDelegate == null)) {
                this.onEndObtenAsistenciaLinealNDelegate = new EndOperationDelegate(this.OnEndObtenAsistenciaLinealN);
            }
            if ((this.onObtenAsistenciaLinealNCompletedDelegate == null)) {
                this.onObtenAsistenciaLinealNCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenAsistenciaLinealNCompleted);
            }
            base.InvokeAsync(this.onBeginObtenAsistenciaLinealNDelegate, new object[] {
                        SesionSeguridad,
                        PERSONA_DIARIO_ID_INICIO,
                        PERSONA_DIARIO_ID_FIN,
                        Lang}, this.onEndObtenAsistenciaLinealNDelegate, this.onObtenAsistenciaLinealNCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenAsistenciaLinealV5(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string OrdenarPor, string TiposIncidenciasSistemaIDs, string TiposIncidenciasIDs, string Lang, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenAsistenciaLinealV5(SesionSeguridad, Persona_ID, Agrupacion, FechaInicial, FechaFinal, OrdenarPor, TiposIncidenciasSistemaIDs, TiposIncidenciasIDs, Lang, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenAsistenciaLinealV5(System.IAsyncResult result) {
            return base.Channel.EndObtenAsistenciaLinealV5(result);
        }
        
        private System.IAsyncResult OnBeginObtenAsistenciaLinealV5(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int Persona_ID = ((int)(inValues[1]));
            string Agrupacion = ((string)(inValues[2]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[3]));
            System.DateTime FechaFinal = ((System.DateTime)(inValues[4]));
            string OrdenarPor = ((string)(inValues[5]));
            string TiposIncidenciasSistemaIDs = ((string)(inValues[6]));
            string TiposIncidenciasIDs = ((string)(inValues[7]));
            string Lang = ((string)(inValues[8]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenAsistenciaLinealV5(SesionSeguridad, Persona_ID, Agrupacion, FechaInicial, FechaFinal, OrdenarPor, TiposIncidenciasSistemaIDs, TiposIncidenciasIDs, Lang, callback, asyncState);
        }
        
        private object[] OnEndObtenAsistenciaLinealV5(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenAsistenciaLinealV5(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenAsistenciaLinealV5Completed(object state) {
            if ((this.ObtenAsistenciaLinealV5Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenAsistenciaLinealV5Completed(this, new ObtenAsistenciaLinealV5CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenAsistenciaLinealV5Async(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string OrdenarPor, string TiposIncidenciasSistemaIDs, string TiposIncidenciasIDs, string Lang) {
            this.ObtenAsistenciaLinealV5Async(SesionSeguridad, Persona_ID, Agrupacion, FechaInicial, FechaFinal, OrdenarPor, TiposIncidenciasSistemaIDs, TiposIncidenciasIDs, Lang, null);
        }
        
        public void ObtenAsistenciaLinealV5Async(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string OrdenarPor, string TiposIncidenciasSistemaIDs, string TiposIncidenciasIDs, string Lang, object userState) {
            if ((this.onBeginObtenAsistenciaLinealV5Delegate == null)) {
                this.onBeginObtenAsistenciaLinealV5Delegate = new BeginOperationDelegate(this.OnBeginObtenAsistenciaLinealV5);
            }
            if ((this.onEndObtenAsistenciaLinealV5Delegate == null)) {
                this.onEndObtenAsistenciaLinealV5Delegate = new EndOperationDelegate(this.OnEndObtenAsistenciaLinealV5);
            }
            if ((this.onObtenAsistenciaLinealV5CompletedDelegate == null)) {
                this.onObtenAsistenciaLinealV5CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenAsistenciaLinealV5Completed);
            }
            base.InvokeAsync(this.onBeginObtenAsistenciaLinealV5Delegate, new object[] {
                        SesionSeguridad,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial,
                        FechaFinal,
                        OrdenarPor,
                        TiposIncidenciasSistemaIDs,
                        TiposIncidenciasIDs,
                        Lang}, this.onEndObtenAsistenciaLinealV5Delegate, this.onObtenAsistenciaLinealV5CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenAsistenciaHorizontal(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool IncidenciaAbr, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenAsistenciaHorizontal(SesionSeguridad, EntradaSalida, TurnoDia, IncidenciaAbr, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenAsistenciaHorizontal(System.IAsyncResult result) {
            return base.Channel.EndObtenAsistenciaHorizontal(result);
        }
        
        private System.IAsyncResult OnBeginObtenAsistenciaHorizontal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            bool EntradaSalida = ((bool)(inValues[1]));
            bool TurnoDia = ((bool)(inValues[2]));
            bool IncidenciaAbr = ((bool)(inValues[3]));
            bool MuestraAgrupacion = ((bool)(inValues[4]));
            bool MuestraEmpleado = ((bool)(inValues[5]));
            int Persona_ID = ((int)(inValues[6]));
            string Agrupacion = ((string)(inValues[7]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[8]));
            System.DateTime FechaFinal = ((System.DateTime)(inValues[9]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenAsistenciaHorizontal(SesionSeguridad, EntradaSalida, TurnoDia, IncidenciaAbr, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        private object[] OnEndObtenAsistenciaHorizontal(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenAsistenciaHorizontal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenAsistenciaHorizontalCompleted(object state) {
            if ((this.ObtenAsistenciaHorizontalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenAsistenciaHorizontalCompleted(this, new ObtenAsistenciaHorizontalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenAsistenciaHorizontalAsync(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool IncidenciaAbr, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal) {
            this.ObtenAsistenciaHorizontalAsync(SesionSeguridad, EntradaSalida, TurnoDia, IncidenciaAbr, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, null);
        }
        
        public void ObtenAsistenciaHorizontalAsync(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool IncidenciaAbr, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, object userState) {
            if ((this.onBeginObtenAsistenciaHorizontalDelegate == null)) {
                this.onBeginObtenAsistenciaHorizontalDelegate = new BeginOperationDelegate(this.OnBeginObtenAsistenciaHorizontal);
            }
            if ((this.onEndObtenAsistenciaHorizontalDelegate == null)) {
                this.onEndObtenAsistenciaHorizontalDelegate = new EndOperationDelegate(this.OnEndObtenAsistenciaHorizontal);
            }
            if ((this.onObtenAsistenciaHorizontalCompletedDelegate == null)) {
                this.onObtenAsistenciaHorizontalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenAsistenciaHorizontalCompleted);
            }
            base.InvokeAsync(this.onBeginObtenAsistenciaHorizontalDelegate, new object[] {
                        SesionSeguridad,
                        EntradaSalida,
                        TurnoDia,
                        IncidenciaAbr,
                        MuestraAgrupacion,
                        MuestraEmpleado,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial,
                        FechaFinal}, this.onEndObtenAsistenciaHorizontalDelegate, this.onObtenAsistenciaHorizontalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenAsistenciaHorizontalN(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool IncidenciaAbr, bool ColorTurno, bool ColorIncidencia, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string Lang, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenAsistenciaHorizontalN(SesionSeguridad, EntradaSalida, TurnoDia, IncidenciaAbr, ColorTurno, ColorIncidencia, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, Lang, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenAsistenciaHorizontalN(System.IAsyncResult result) {
            return base.Channel.EndObtenAsistenciaHorizontalN(result);
        }
        
        private System.IAsyncResult OnBeginObtenAsistenciaHorizontalN(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            bool EntradaSalida = ((bool)(inValues[1]));
            bool TurnoDia = ((bool)(inValues[2]));
            bool IncidenciaAbr = ((bool)(inValues[3]));
            bool ColorTurno = ((bool)(inValues[4]));
            bool ColorIncidencia = ((bool)(inValues[5]));
            bool MuestraAgrupacion = ((bool)(inValues[6]));
            bool MuestraEmpleado = ((bool)(inValues[7]));
            int Persona_ID = ((int)(inValues[8]));
            string Agrupacion = ((string)(inValues[9]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[10]));
            System.DateTime FechaFinal = ((System.DateTime)(inValues[11]));
            string Lang = ((string)(inValues[12]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenAsistenciaHorizontalN(SesionSeguridad, EntradaSalida, TurnoDia, IncidenciaAbr, ColorTurno, ColorIncidencia, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, Lang, callback, asyncState);
        }
        
        private object[] OnEndObtenAsistenciaHorizontalN(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenAsistenciaHorizontalN(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenAsistenciaHorizontalNCompleted(object state) {
            if ((this.ObtenAsistenciaHorizontalNCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenAsistenciaHorizontalNCompleted(this, new ObtenAsistenciaHorizontalNCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenAsistenciaHorizontalNAsync(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool IncidenciaAbr, bool ColorTurno, bool ColorIncidencia, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string Lang) {
            this.ObtenAsistenciaHorizontalNAsync(SesionSeguridad, EntradaSalida, TurnoDia, IncidenciaAbr, ColorTurno, ColorIncidencia, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, Lang, null);
        }
        
        public void ObtenAsistenciaHorizontalNAsync(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool IncidenciaAbr, bool ColorTurno, bool ColorIncidencia, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string Lang, object userState) {
            if ((this.onBeginObtenAsistenciaHorizontalNDelegate == null)) {
                this.onBeginObtenAsistenciaHorizontalNDelegate = new BeginOperationDelegate(this.OnBeginObtenAsistenciaHorizontalN);
            }
            if ((this.onEndObtenAsistenciaHorizontalNDelegate == null)) {
                this.onEndObtenAsistenciaHorizontalNDelegate = new EndOperationDelegate(this.OnEndObtenAsistenciaHorizontalN);
            }
            if ((this.onObtenAsistenciaHorizontalNCompletedDelegate == null)) {
                this.onObtenAsistenciaHorizontalNCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenAsistenciaHorizontalNCompleted);
            }
            base.InvokeAsync(this.onBeginObtenAsistenciaHorizontalNDelegate, new object[] {
                        SesionSeguridad,
                        EntradaSalida,
                        TurnoDia,
                        IncidenciaAbr,
                        ColorTurno,
                        ColorIncidencia,
                        MuestraAgrupacion,
                        MuestraEmpleado,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial,
                        FechaFinal,
                        Lang}, this.onEndObtenAsistenciaHorizontalNDelegate, this.onObtenAsistenciaHorizontalNCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenAsistenciaSemanal(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenAsistenciaSemanal(SesionSeguridad, EntradaSalida, TurnoDia, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenAsistenciaSemanal(System.IAsyncResult result) {
            return base.Channel.EndObtenAsistenciaSemanal(result);
        }
        
        private System.IAsyncResult OnBeginObtenAsistenciaSemanal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            bool EntradaSalida = ((bool)(inValues[1]));
            bool TurnoDia = ((bool)(inValues[2]));
            bool MuestraAgrupacion = ((bool)(inValues[3]));
            bool MuestraEmpleado = ((bool)(inValues[4]));
            int Persona_ID = ((int)(inValues[5]));
            string Agrupacion = ((string)(inValues[6]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[7]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenAsistenciaSemanal(SesionSeguridad, EntradaSalida, TurnoDia, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, callback, asyncState);
        }
        
        private object[] OnEndObtenAsistenciaSemanal(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenAsistenciaSemanal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenAsistenciaSemanalCompleted(object state) {
            if ((this.ObtenAsistenciaSemanalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenAsistenciaSemanalCompleted(this, new ObtenAsistenciaSemanalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenAsistenciaSemanalAsync(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial) {
            this.ObtenAsistenciaSemanalAsync(SesionSeguridad, EntradaSalida, TurnoDia, MuestraAgrupacion, MuestraEmpleado, Persona_ID, Agrupacion, FechaInicial, null);
        }
        
        public void ObtenAsistenciaSemanalAsync(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, object userState) {
            if ((this.onBeginObtenAsistenciaSemanalDelegate == null)) {
                this.onBeginObtenAsistenciaSemanalDelegate = new BeginOperationDelegate(this.OnBeginObtenAsistenciaSemanal);
            }
            if ((this.onEndObtenAsistenciaSemanalDelegate == null)) {
                this.onEndObtenAsistenciaSemanalDelegate = new EndOperationDelegate(this.OnEndObtenAsistenciaSemanal);
            }
            if ((this.onObtenAsistenciaSemanalCompletedDelegate == null)) {
                this.onObtenAsistenciaSemanalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenAsistenciaSemanalCompleted);
            }
            base.InvokeAsync(this.onBeginObtenAsistenciaSemanalDelegate, new object[] {
                        SesionSeguridad,
                        EntradaSalida,
                        TurnoDia,
                        MuestraAgrupacion,
                        MuestraEmpleado,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial}, this.onEndObtenAsistenciaSemanalDelegate, this.onObtenAsistenciaSemanalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenHorasExtras(string SesionSeguridad, bool EntradaSalida, bool Comida, bool Totales, bool Incidencia, bool TurnoDia, bool MuestraAgrupacion, bool MuestraEmpleado, bool MuestraCeros, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenHorasExtras(SesionSeguridad, EntradaSalida, Comida, Totales, Incidencia, TurnoDia, MuestraAgrupacion, MuestraEmpleado, MuestraCeros, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenHorasExtras(System.IAsyncResult result) {
            return base.Channel.EndObtenHorasExtras(result);
        }
        
        private System.IAsyncResult OnBeginObtenHorasExtras(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            bool EntradaSalida = ((bool)(inValues[1]));
            bool Comida = ((bool)(inValues[2]));
            bool Totales = ((bool)(inValues[3]));
            bool Incidencia = ((bool)(inValues[4]));
            bool TurnoDia = ((bool)(inValues[5]));
            bool MuestraAgrupacion = ((bool)(inValues[6]));
            bool MuestraEmpleado = ((bool)(inValues[7]));
            bool MuestraCeros = ((bool)(inValues[8]));
            int Persona_ID = ((int)(inValues[9]));
            string Agrupacion = ((string)(inValues[10]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[11]));
            System.DateTime FechaFinal = ((System.DateTime)(inValues[12]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenHorasExtras(SesionSeguridad, EntradaSalida, Comida, Totales, Incidencia, TurnoDia, MuestraAgrupacion, MuestraEmpleado, MuestraCeros, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        private object[] OnEndObtenHorasExtras(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenHorasExtras(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenHorasExtrasCompleted(object state) {
            if ((this.ObtenHorasExtrasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenHorasExtrasCompleted(this, new ObtenHorasExtrasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenHorasExtrasAsync(string SesionSeguridad, bool EntradaSalida, bool Comida, bool Totales, bool Incidencia, bool TurnoDia, bool MuestraAgrupacion, bool MuestraEmpleado, bool MuestraCeros, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal) {
            this.ObtenHorasExtrasAsync(SesionSeguridad, EntradaSalida, Comida, Totales, Incidencia, TurnoDia, MuestraAgrupacion, MuestraEmpleado, MuestraCeros, Persona_ID, Agrupacion, FechaInicial, FechaFinal, null);
        }
        
        public void ObtenHorasExtrasAsync(string SesionSeguridad, bool EntradaSalida, bool Comida, bool Totales, bool Incidencia, bool TurnoDia, bool MuestraAgrupacion, bool MuestraEmpleado, bool MuestraCeros, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, object userState) {
            if ((this.onBeginObtenHorasExtrasDelegate == null)) {
                this.onBeginObtenHorasExtrasDelegate = new BeginOperationDelegate(this.OnBeginObtenHorasExtras);
            }
            if ((this.onEndObtenHorasExtrasDelegate == null)) {
                this.onEndObtenHorasExtrasDelegate = new EndOperationDelegate(this.OnEndObtenHorasExtras);
            }
            if ((this.onObtenHorasExtrasCompletedDelegate == null)) {
                this.onObtenHorasExtrasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenHorasExtrasCompleted);
            }
            base.InvokeAsync(this.onBeginObtenHorasExtrasDelegate, new object[] {
                        SesionSeguridad,
                        EntradaSalida,
                        Comida,
                        Totales,
                        Incidencia,
                        TurnoDia,
                        MuestraAgrupacion,
                        MuestraEmpleado,
                        MuestraCeros,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial,
                        FechaFinal}, this.onEndObtenHorasExtrasDelegate, this.onObtenHorasExtrasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginAplicaHorasExtras(string SesionSeguridad, string ListadoAplicaHorasExtras, bool EsAvanzada, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAplicaHorasExtras(SesionSeguridad, ListadoAplicaHorasExtras, EsAvanzada, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndAplicaHorasExtras(System.IAsyncResult result) {
            return base.Channel.EndAplicaHorasExtras(result);
        }
        
        private System.IAsyncResult OnBeginAplicaHorasExtras(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string ListadoAplicaHorasExtras = ((string)(inValues[1]));
            bool EsAvanzada = ((bool)(inValues[2]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginAplicaHorasExtras(SesionSeguridad, ListadoAplicaHorasExtras, EsAvanzada, callback, asyncState);
        }
        
        private object[] OnEndAplicaHorasExtras(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndAplicaHorasExtras(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAplicaHorasExtrasCompleted(object state) {
            if ((this.AplicaHorasExtrasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AplicaHorasExtrasCompleted(this, new AplicaHorasExtrasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AplicaHorasExtrasAsync(string SesionSeguridad, string ListadoAplicaHorasExtras, bool EsAvanzada) {
            this.AplicaHorasExtrasAsync(SesionSeguridad, ListadoAplicaHorasExtras, EsAvanzada, null);
        }
        
        public void AplicaHorasExtrasAsync(string SesionSeguridad, string ListadoAplicaHorasExtras, bool EsAvanzada, object userState) {
            if ((this.onBeginAplicaHorasExtrasDelegate == null)) {
                this.onBeginAplicaHorasExtrasDelegate = new BeginOperationDelegate(this.OnBeginAplicaHorasExtras);
            }
            if ((this.onEndAplicaHorasExtrasDelegate == null)) {
                this.onEndAplicaHorasExtrasDelegate = new EndOperationDelegate(this.OnEndAplicaHorasExtras);
            }
            if ((this.onAplicaHorasExtrasCompletedDelegate == null)) {
                this.onAplicaHorasExtrasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAplicaHorasExtrasCompleted);
            }
            base.InvokeAsync(this.onBeginAplicaHorasExtrasDelegate, new object[] {
                        SesionSeguridad,
                        ListadoAplicaHorasExtras,
                        EsAvanzada}, this.onEndAplicaHorasExtrasDelegate, this.onAplicaHorasExtrasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginQuitaHorasExtras(string SesionSeguridad, string PERSONA_D_HE_IDs, bool Forzar, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQuitaHorasExtras(SesionSeguridad, PERSONA_D_HE_IDs, Forzar, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndQuitaHorasExtras(System.IAsyncResult result) {
            return base.Channel.EndQuitaHorasExtras(result);
        }
        
        private System.IAsyncResult OnBeginQuitaHorasExtras(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            string PERSONA_D_HE_IDs = ((string)(inValues[1]));
            bool Forzar = ((bool)(inValues[2]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginQuitaHorasExtras(SesionSeguridad, PERSONA_D_HE_IDs, Forzar, callback, asyncState);
        }
        
        private object[] OnEndQuitaHorasExtras(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndQuitaHorasExtras(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQuitaHorasExtrasCompleted(object state) {
            if ((this.QuitaHorasExtrasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QuitaHorasExtrasCompleted(this, new QuitaHorasExtrasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QuitaHorasExtrasAsync(string SesionSeguridad, string PERSONA_D_HE_IDs, bool Forzar) {
            this.QuitaHorasExtrasAsync(SesionSeguridad, PERSONA_D_HE_IDs, Forzar, null);
        }
        
        public void QuitaHorasExtrasAsync(string SesionSeguridad, string PERSONA_D_HE_IDs, bool Forzar, object userState) {
            if ((this.onBeginQuitaHorasExtrasDelegate == null)) {
                this.onBeginQuitaHorasExtrasDelegate = new BeginOperationDelegate(this.OnBeginQuitaHorasExtras);
            }
            if ((this.onEndQuitaHorasExtrasDelegate == null)) {
                this.onEndQuitaHorasExtrasDelegate = new EndOperationDelegate(this.OnEndQuitaHorasExtras);
            }
            if ((this.onQuitaHorasExtrasCompletedDelegate == null)) {
                this.onQuitaHorasExtrasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQuitaHorasExtrasCompleted);
            }
            base.InvokeAsync(this.onBeginQuitaHorasExtrasDelegate, new object[] {
                        SesionSeguridad,
                        PERSONA_D_HE_IDs,
                        Forzar}, this.onEndQuitaHorasExtrasDelegate, this.onQuitaHorasExtrasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenAsistenciaTotalesSaldos(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenAsistenciaTotalesSaldos(SesionSeguridad, MostrarAgrupacion, MostrarEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenAsistenciaTotalesSaldos(System.IAsyncResult result) {
            return base.Channel.EndObtenAsistenciaTotalesSaldos(result);
        }
        
        private System.IAsyncResult OnBeginObtenAsistenciaTotalesSaldos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            bool MostrarAgrupacion = ((bool)(inValues[1]));
            bool MostrarEmpleado = ((bool)(inValues[2]));
            int Persona_ID = ((int)(inValues[3]));
            string Agrupacion = ((string)(inValues[4]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[5]));
            System.DateTime FechaFinal = ((System.DateTime)(inValues[6]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenAsistenciaTotalesSaldos(SesionSeguridad, MostrarAgrupacion, MostrarEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        private object[] OnEndObtenAsistenciaTotalesSaldos(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenAsistenciaTotalesSaldos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenAsistenciaTotalesSaldosCompleted(object state) {
            if ((this.ObtenAsistenciaTotalesSaldosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenAsistenciaTotalesSaldosCompleted(this, new ObtenAsistenciaTotalesSaldosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenAsistenciaTotalesSaldosAsync(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal) {
            this.ObtenAsistenciaTotalesSaldosAsync(SesionSeguridad, MostrarAgrupacion, MostrarEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, null);
        }
        
        public void ObtenAsistenciaTotalesSaldosAsync(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, object userState) {
            if ((this.onBeginObtenAsistenciaTotalesSaldosDelegate == null)) {
                this.onBeginObtenAsistenciaTotalesSaldosDelegate = new BeginOperationDelegate(this.OnBeginObtenAsistenciaTotalesSaldos);
            }
            if ((this.onEndObtenAsistenciaTotalesSaldosDelegate == null)) {
                this.onEndObtenAsistenciaTotalesSaldosDelegate = new EndOperationDelegate(this.OnEndObtenAsistenciaTotalesSaldos);
            }
            if ((this.onObtenAsistenciaTotalesSaldosCompletedDelegate == null)) {
                this.onObtenAsistenciaTotalesSaldosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenAsistenciaTotalesSaldosCompleted);
            }
            base.InvokeAsync(this.onBeginObtenAsistenciaTotalesSaldosDelegate, new object[] {
                        SesionSeguridad,
                        MostrarAgrupacion,
                        MostrarEmpleado,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial,
                        FechaFinal}, this.onEndObtenAsistenciaTotalesSaldosDelegate, this.onObtenAsistenciaTotalesSaldosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenAsistenciaTotales(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenAsistenciaTotales(SesionSeguridad, MostrarAgrupacion, MostrarEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenAsistenciaTotales(System.IAsyncResult result) {
            return base.Channel.EndObtenAsistenciaTotales(result);
        }
        
        private System.IAsyncResult OnBeginObtenAsistenciaTotales(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            bool MostrarAgrupacion = ((bool)(inValues[1]));
            bool MostrarEmpleado = ((bool)(inValues[2]));
            int Persona_ID = ((int)(inValues[3]));
            string Agrupacion = ((string)(inValues[4]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[5]));
            System.DateTime FechaFinal = ((System.DateTime)(inValues[6]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenAsistenciaTotales(SesionSeguridad, MostrarAgrupacion, MostrarEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        private object[] OnEndObtenAsistenciaTotales(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenAsistenciaTotales(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenAsistenciaTotalesCompleted(object state) {
            if ((this.ObtenAsistenciaTotalesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenAsistenciaTotalesCompleted(this, new ObtenAsistenciaTotalesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenAsistenciaTotalesAsync(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal) {
            this.ObtenAsistenciaTotalesAsync(SesionSeguridad, MostrarAgrupacion, MostrarEmpleado, Persona_ID, Agrupacion, FechaInicial, FechaFinal, null);
        }
        
        public void ObtenAsistenciaTotalesAsync(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, object userState) {
            if ((this.onBeginObtenAsistenciaTotalesDelegate == null)) {
                this.onBeginObtenAsistenciaTotalesDelegate = new BeginOperationDelegate(this.OnBeginObtenAsistenciaTotales);
            }
            if ((this.onEndObtenAsistenciaTotalesDelegate == null)) {
                this.onEndObtenAsistenciaTotalesDelegate = new EndOperationDelegate(this.OnEndObtenAsistenciaTotales);
            }
            if ((this.onObtenAsistenciaTotalesCompletedDelegate == null)) {
                this.onObtenAsistenciaTotalesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenAsistenciaTotalesCompleted);
            }
            base.InvokeAsync(this.onBeginObtenAsistenciaTotalesDelegate, new object[] {
                        SesionSeguridad,
                        MostrarAgrupacion,
                        MostrarEmpleado,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial,
                        FechaFinal}, this.onEndObtenAsistenciaTotalesDelegate, this.onObtenAsistenciaTotalesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eClockBase.ES_Asistencias.S_Asistencias.BeginObtenTiempos(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenTiempos(SesionSeguridad, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eClockBase.ES_Asistencias.S_Asistencias.EndObtenTiempos(System.IAsyncResult result) {
            return base.Channel.EndObtenTiempos(result);
        }
        
        private System.IAsyncResult OnBeginObtenTiempos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SesionSeguridad = ((string)(inValues[0]));
            int Persona_ID = ((int)(inValues[1]));
            string Agrupacion = ((string)(inValues[2]));
            System.DateTime FechaInicial = ((System.DateTime)(inValues[3]));
            System.DateTime FechaFinal = ((System.DateTime)(inValues[4]));
            return ((eClockBase.ES_Asistencias.S_Asistencias)(this)).BeginObtenTiempos(SesionSeguridad, Persona_ID, Agrupacion, FechaInicial, FechaFinal, callback, asyncState);
        }
        
        private object[] OnEndObtenTiempos(System.IAsyncResult result) {
            string retVal = ((eClockBase.ES_Asistencias.S_Asistencias)(this)).EndObtenTiempos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenTiemposCompleted(object state) {
            if ((this.ObtenTiemposCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenTiemposCompleted(this, new ObtenTiemposCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenTiemposAsync(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal) {
            this.ObtenTiemposAsync(SesionSeguridad, Persona_ID, Agrupacion, FechaInicial, FechaFinal, null);
        }
        
        public void ObtenTiemposAsync(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, object userState) {
            if ((this.onBeginObtenTiemposDelegate == null)) {
                this.onBeginObtenTiemposDelegate = new BeginOperationDelegate(this.OnBeginObtenTiempos);
            }
            if ((this.onEndObtenTiemposDelegate == null)) {
                this.onEndObtenTiemposDelegate = new EndOperationDelegate(this.OnEndObtenTiempos);
            }
            if ((this.onObtenTiemposCompletedDelegate == null)) {
                this.onObtenTiemposCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenTiemposCompleted);
            }
            base.InvokeAsync(this.onBeginObtenTiemposDelegate, new object[] {
                        SesionSeguridad,
                        Persona_ID,
                        Agrupacion,
                        FechaInicial,
                        FechaFinal}, this.onEndObtenTiemposDelegate, this.onObtenTiemposCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override eClockBase.ES_Asistencias.S_Asistencias CreateChannel() {
            return new S_AsistenciasClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_S_Asistencias)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_S_Asistencias)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:50723/S_Asistencias.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return S_AsistenciasClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_S_Asistencias);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return S_AsistenciasClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_S_Asistencias);
        }
        
        private class S_AsistenciasClientChannel : ChannelBase<eClockBase.ES_Asistencias.S_Asistencias>, eClockBase.ES_Asistencias.S_Asistencias {
            
            public S_AsistenciasClientChannel(System.ServiceModel.ClientBase<eClockBase.ES_Asistencias.S_Asistencias> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginObtenAsistenciaGrafica(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, bool MostrarFecha, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = SesionSeguridad;
                _args[1] = MostrarAgrupacion;
                _args[2] = MostrarEmpleado;
                _args[3] = MostrarFecha;
                _args[4] = Persona_ID;
                _args[5] = Agrupacion;
                _args[6] = FechaInicial;
                _args[7] = FechaFinal;
                System.IAsyncResult _result = base.BeginInvoke("ObtenAsistenciaGrafica", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenAsistenciaGrafica(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenAsistenciaGrafica", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenAsistencia(
                        string SesionSeguridad, 
                        bool EntradaSalida, 
                        bool Comida, 
                        bool HorasExtras, 
                        bool Totales, 
                        bool Incidencia, 
                        bool TurnoDia, 
                        string TiposIncidenciasSistemaIDs, 
                        string TiposIncidenciasIDs, 
                        bool MuestraAgrupacion, 
                        bool MuestraEmpleado, 
                        int Persona_ID, 
                        string Agrupacion, 
                        System.DateTime FechaInicial, 
                        System.DateTime FechaFinal, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[15];
                _args[0] = SesionSeguridad;
                _args[1] = EntradaSalida;
                _args[2] = Comida;
                _args[3] = HorasExtras;
                _args[4] = Totales;
                _args[5] = Incidencia;
                _args[6] = TurnoDia;
                _args[7] = TiposIncidenciasSistemaIDs;
                _args[8] = TiposIncidenciasIDs;
                _args[9] = MuestraAgrupacion;
                _args[10] = MuestraEmpleado;
                _args[11] = Persona_ID;
                _args[12] = Agrupacion;
                _args[13] = FechaInicial;
                _args[14] = FechaFinal;
                System.IAsyncResult _result = base.BeginInvoke("ObtenAsistencia", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenAsistencia(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenAsistencia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenAsistenciaLineal(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string Campos, string OrdenarPor, string TiposIncidenciasSistemaIDs, string TiposIncidenciasIDs, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = SesionSeguridad;
                _args[1] = Persona_ID;
                _args[2] = Agrupacion;
                _args[3] = FechaInicial;
                _args[4] = FechaFinal;
                _args[5] = Campos;
                _args[6] = OrdenarPor;
                _args[7] = TiposIncidenciasSistemaIDs;
                _args[8] = TiposIncidenciasIDs;
                System.IAsyncResult _result = base.BeginInvoke("ObtenAsistenciaLineal", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenAsistenciaLineal(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenAsistenciaLineal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenAsistenciaLinealN(string SesionSeguridad, int PERSONA_DIARIO_ID_INICIO, int PERSONA_DIARIO_ID_FIN, string Lang, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = SesionSeguridad;
                _args[1] = PERSONA_DIARIO_ID_INICIO;
                _args[2] = PERSONA_DIARIO_ID_FIN;
                _args[3] = Lang;
                System.IAsyncResult _result = base.BeginInvoke("ObtenAsistenciaLinealN", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenAsistenciaLinealN(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenAsistenciaLinealN", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenAsistenciaLinealV5(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string OrdenarPor, string TiposIncidenciasSistemaIDs, string TiposIncidenciasIDs, string Lang, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = SesionSeguridad;
                _args[1] = Persona_ID;
                _args[2] = Agrupacion;
                _args[3] = FechaInicial;
                _args[4] = FechaFinal;
                _args[5] = OrdenarPor;
                _args[6] = TiposIncidenciasSistemaIDs;
                _args[7] = TiposIncidenciasIDs;
                _args[8] = Lang;
                System.IAsyncResult _result = base.BeginInvoke("ObtenAsistenciaLinealV5", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenAsistenciaLinealV5(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenAsistenciaLinealV5", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenAsistenciaHorizontal(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool IncidenciaAbr, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[10];
                _args[0] = SesionSeguridad;
                _args[1] = EntradaSalida;
                _args[2] = TurnoDia;
                _args[3] = IncidenciaAbr;
                _args[4] = MuestraAgrupacion;
                _args[5] = MuestraEmpleado;
                _args[6] = Persona_ID;
                _args[7] = Agrupacion;
                _args[8] = FechaInicial;
                _args[9] = FechaFinal;
                System.IAsyncResult _result = base.BeginInvoke("ObtenAsistenciaHorizontal", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenAsistenciaHorizontal(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenAsistenciaHorizontal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenAsistenciaHorizontalN(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool IncidenciaAbr, bool ColorTurno, bool ColorIncidencia, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, string Lang, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[13];
                _args[0] = SesionSeguridad;
                _args[1] = EntradaSalida;
                _args[2] = TurnoDia;
                _args[3] = IncidenciaAbr;
                _args[4] = ColorTurno;
                _args[5] = ColorIncidencia;
                _args[6] = MuestraAgrupacion;
                _args[7] = MuestraEmpleado;
                _args[8] = Persona_ID;
                _args[9] = Agrupacion;
                _args[10] = FechaInicial;
                _args[11] = FechaFinal;
                _args[12] = Lang;
                System.IAsyncResult _result = base.BeginInvoke("ObtenAsistenciaHorizontalN", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenAsistenciaHorizontalN(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenAsistenciaHorizontalN", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenAsistenciaSemanal(string SesionSeguridad, bool EntradaSalida, bool TurnoDia, bool MuestraAgrupacion, bool MuestraEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = SesionSeguridad;
                _args[1] = EntradaSalida;
                _args[2] = TurnoDia;
                _args[3] = MuestraAgrupacion;
                _args[4] = MuestraEmpleado;
                _args[5] = Persona_ID;
                _args[6] = Agrupacion;
                _args[7] = FechaInicial;
                System.IAsyncResult _result = base.BeginInvoke("ObtenAsistenciaSemanal", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenAsistenciaSemanal(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenAsistenciaSemanal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenHorasExtras(string SesionSeguridad, bool EntradaSalida, bool Comida, bool Totales, bool Incidencia, bool TurnoDia, bool MuestraAgrupacion, bool MuestraEmpleado, bool MuestraCeros, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[13];
                _args[0] = SesionSeguridad;
                _args[1] = EntradaSalida;
                _args[2] = Comida;
                _args[3] = Totales;
                _args[4] = Incidencia;
                _args[5] = TurnoDia;
                _args[6] = MuestraAgrupacion;
                _args[7] = MuestraEmpleado;
                _args[8] = MuestraCeros;
                _args[9] = Persona_ID;
                _args[10] = Agrupacion;
                _args[11] = FechaInicial;
                _args[12] = FechaFinal;
                System.IAsyncResult _result = base.BeginInvoke("ObtenHorasExtras", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenHorasExtras(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenHorasExtras", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAplicaHorasExtras(string SesionSeguridad, string ListadoAplicaHorasExtras, bool EsAvanzada, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = SesionSeguridad;
                _args[1] = ListadoAplicaHorasExtras;
                _args[2] = EsAvanzada;
                System.IAsyncResult _result = base.BeginInvoke("AplicaHorasExtras", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAplicaHorasExtras(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AplicaHorasExtras", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginQuitaHorasExtras(string SesionSeguridad, string PERSONA_D_HE_IDs, bool Forzar, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = SesionSeguridad;
                _args[1] = PERSONA_D_HE_IDs;
                _args[2] = Forzar;
                System.IAsyncResult _result = base.BeginInvoke("QuitaHorasExtras", _args, callback, asyncState);
                return _result;
            }
            
            public string EndQuitaHorasExtras(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("QuitaHorasExtras", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenAsistenciaTotalesSaldos(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = SesionSeguridad;
                _args[1] = MostrarAgrupacion;
                _args[2] = MostrarEmpleado;
                _args[3] = Persona_ID;
                _args[4] = Agrupacion;
                _args[5] = FechaInicial;
                _args[6] = FechaFinal;
                System.IAsyncResult _result = base.BeginInvoke("ObtenAsistenciaTotalesSaldos", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenAsistenciaTotalesSaldos(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenAsistenciaTotalesSaldos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenAsistenciaTotales(string SesionSeguridad, bool MostrarAgrupacion, bool MostrarEmpleado, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = SesionSeguridad;
                _args[1] = MostrarAgrupacion;
                _args[2] = MostrarEmpleado;
                _args[3] = Persona_ID;
                _args[4] = Agrupacion;
                _args[5] = FechaInicial;
                _args[6] = FechaFinal;
                System.IAsyncResult _result = base.BeginInvoke("ObtenAsistenciaTotales", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenAsistenciaTotales(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenAsistenciaTotales", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginObtenTiempos(string SesionSeguridad, int Persona_ID, string Agrupacion, System.DateTime FechaInicial, System.DateTime FechaFinal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = SesionSeguridad;
                _args[1] = Persona_ID;
                _args[2] = Agrupacion;
                _args[3] = FechaInicial;
                _args[4] = FechaFinal;
                System.IAsyncResult _result = base.BeginInvoke("ObtenTiempos", _args, callback, asyncState);
                return _result;
            }
            
            public string EndObtenTiempos(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ObtenTiempos", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_S_Asistencias,
        }
    }
}
